/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/
'use strict'

/*!
This file is part of CycloneDX JavaScript Library.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

SPDX-License-Identifier: Apache-2.0
Copyright (c) OWASP Foundation. All Rights Reserved.
*/

const assert = require('assert')
const { suite, test } = require('mocha')
const { PackageURL } = require('packageurl-js')

const {
  Enums: {
    ImpactAnalysisState
  },
  Models: {
    OrganizationalEntity,
    OrganizationalEntityRepository,
    Property,
    PropertyRepository,
    Tool,
    ToolRepository,
    Vulnerability,
    VulnerabilityAdvisory,
    VulnerabilityAdvisoryRepository,
    VulnerabilityAffects,
    VulnerabilityAffectsRepository,
    VulnerabilityAnalysis,
    VulnerabilityAnalysisRepository,
    VulnerabilityCredits,
    VulnerabilityRating,
    VulnerabilityRatingRepository,
    VulnerabilityReference,
    VulnerabilityReferenceRepository,
    VulnerabilitySource
  }
} = require('../../')

suite('Models.Vulnerability', () => {
  test('constructor', () => {
    const vulnerability = new Vulnerability()

    assert.strictEqual(vulnerability.bomRef.value, undefined)
    assert.strictEqual(vulnerability.id, undefined)
    assert.strictEqual(vulnerability.source, undefined)
    assert.ok(vulnerability.references instanceof VulnerabilityReferenceRepository)
    assert.strictEqual(vulnerability.references.size, 0)
    assert.ok(vulnerability.ratings instanceof VulnerabilityRatingRepository)
    assert.strictEqual(vulnerability.ratings.size, 0)
    assert.strictEqual(vulnerability.cwes.length, 0)
    assert.strictEqual(vulnerability.description, undefined)
    assert.strictEqual(vulnerability.detail, undefined)
    assert.strictEqual(vulnerability.recommendation, undefined)
    assert.ok(vulnerability.advisories instanceof VulnerabilityAdvisoryRepository)
    assert.strictEqual(vulnerability.advisories.size, 0)
    assert.strictEqual(vulnerability.created, undefined)
    assert.strictEqual(vulnerability.published, undefined)
    assert.strictEqual(vulnerability.updated, undefined)
    assert.strictEqual(vulnerability.credits, undefined)
    assert.ok(vulnerability.tools instanceof ToolRepository)
    assert.strictEqual(vulnerability.tools.size, 0)
    assert.ok(vulnerability.analysis instanceof VulnerabilityAnalysisRepository)
    assert.strictEqual(vulnerability.analysis.size, 0)
    assert.ok(vulnerability.affects instanceof VulnerabilityAffectsRepository)
    assert.strictEqual(vulnerability.affects.size, 0)
    assert.ok(vulnerability.properties instanceof PropertyRepository)
    assert.strictEqual(vulnerability.properties.size, 0)
  })

  test('constructor with OptionalProperties', () => {
    const dummySource = new VulnerabilitySource({ name: 'NVD' })
    const dummyReference = new VulnerabilityReference({})
    const dummyReferences = new VulnerabilityReferenceRepository([dummyReference])
    const dummyRating = new VulnerabilityRating({ source: dummySource })
    const dummyRatings = new VulnerabilityRatingRepository([dummyRating])
    const dummyCwes = [1, 2, 42]
    const dummyAdvisory = new VulnerabilityAdvisory('https://www.cve.org/CVERecord?id=CVE-2022-0001')
    const dummyAdvisories = new VulnerabilityAdvisoryRepository([dummyAdvisory])
    const dummyCreditedOrganization = new OrganizationalEntity({ name: 'dummySupplier' })
    const dummyCreditedOrganizations = new OrganizationalEntityRepository([dummyCreditedOrganization])
    const dummyCredits = new VulnerabilityCredits({ organizations: dummyCreditedOrganizations })
    const dummyTool = new Tool({ name: 'my-tool' })
    const dummyTools = new ToolRepository([dummyTool])
    const dummyAnalysis = new VulnerabilityAnalysis({ state: ImpactAnalysisState.FalsePositive })
    const dummyAnalyses = new VulnerabilityAnalysisRepository([dummyAnalysis])
    const dummyPurl = new PackageURL('npm', 'ns', 'app', '1.33.7', {}, undefined)
    const dummyAffect = new VulnerabilityAffects(dummyPurl)
    const dummyAffects = new VulnerabilityAffectsRepository([dummyAffect])

    const dummyProperty = new Property('foo', 'bar')
    const dummyProperties = new PropertyRepository([dummyProperty])

    const vulnerability = new Vulnerability({
      bomRef: 'my-bomref',
      id: 'CVE-2022-0001',
      source: dummySource,
      references: dummyReferences,
      ratings: dummyRatings,
      cwes: dummyCwes,
      description: 'my-description',
      detail: 'my-detail',
      recommendation: 'delete everything',
      advisories: dummyAdvisories,
      created: '2005-08-10T04:00:00+00:00',
      published: '2005-08-11T04:00:00+00:00',
      updated: '2015-08-12T04:00:00+00:00',
      credits: dummyCredits,
      tools: dummyTools,
      analysis: dummyAnalyses,
      affects: dummyAffects,
      properties: dummyProperties
    })

    assert.strictEqual(vulnerability.bomRef.value, 'my-bomref')
    assert.strictEqual(vulnerability.id, 'CVE-2022-0001')
    assert.strictEqual(vulnerability.source, dummySource)
    assert.strictEqual(vulnerability.references, dummyReferences)
    assert.strictEqual(vulnerability.ratings, dummyRatings)
    assert.strictEqual(vulnerability.cwes, dummyCwes)
    assert.strictEqual(vulnerability.description, 'my-description')
    assert.strictEqual(vulnerability.detail, 'my-detail')
    assert.strictEqual(vulnerability.recommendation, 'delete everything')
    assert.strictEqual(vulnerability.advisories, dummyAdvisories)
    assert.strictEqual(vulnerability.created, '2005-08-10T04:00:00+00:00')
    assert.strictEqual(vulnerability.published, '2005-08-11T04:00:00+00:00')
    assert.strictEqual(vulnerability.updated, '2015-08-12T04:00:00+00:00')
    assert.strictEqual(vulnerability.credits, dummyCredits)
    assert.strictEqual(vulnerability.tools, dummyTools)
    assert.strictEqual(vulnerability.analysis, dummyAnalyses)
    assert.strictEqual(vulnerability.affects, dummyAffects)
    assert.strictEqual(vulnerability.properties, dummyProperties)
  })
})
