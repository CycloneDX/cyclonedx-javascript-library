# docs: https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions

name: Node CI

on: 
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:


env:
  NODE_ACTIVE_LTS: "16" # see https://nodejs.org/en/about/releases/
  REPORTS_DIR: "reports"

jobs:
  build:
    name: build ${{ matrix.target }}
    runs-on: "ubuntu-latest"
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        target:
          - node
          - web
    steps:
      - name: Checkout
        # see https://github.com/actions/checkout
        uses: actions/checkout@v3
      - name: Setup Node.js ${{ env.NODE_ACTIVE_LTS }}
        # see https://github.com/actions/setup-node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_ACTIVE_LTS }}
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"
      - name: setup project
        run: npm ci --ignore-scripts
      - name: build ${{ matrix.target }}
        run: npm run build:${{ matrix.target }}
      - name: artifact build result
        # see https://github.com/actions/upload-artifact
        uses: actions/upload-artifact@v3
        with:
          name: dist.${{ matrix.target }}
          path: dist.${{ matrix.target }}
          if-no-files-found: error
  test-standard:
    name: test standard
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        # see https://github.com/actions/checkout
        uses: actions/checkout@v3
      - name: Setup Node.js ${{ env.NODE_ACTIVE_LTS }}
        # see https://github.com/actions/setup-node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_ACTIVE_LTS }}
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"
      - name: setup project
        run: npm ci --ignore-scripts
      - name: make reports dir
        run: mkdir -p "$REPORTS_DIR"
      - name: test
        run: >
          npm run --
          test:standard
          --format checkstyle
          --output-file "$REPORTS_DIR/eslint.xml"
      - name: Publish Checkstyle report
        # see https://github.com/Juuxel/publish-checkstyle-report
        uses: Juuxel/publish-checkstyle-report@v1
        if: ${{ failure() || success() }}
        with:
          reports: ${{ env.REPORTS_DIR }}/eslint.xml
      - name: artifact build result
        # see https://github.com/actions/upload-artifact
        uses: actions/upload-artifact@v3
        if: ${{ failure() }}
        with:
          name: eslint-results
          path: ${{ env.REPORTS_DIR }}
          if-no-files-found: error
  test-node:
    needs: [ 'build' ]
    name: test node (${{ matrix.node-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        node-version:
          # action based on https://github.com/actions/node-versions/releases
          # see also: https://nodejs.org/en/about/releases/
          - "18"      # current
          - "16"      # active LTS
          - "14"
          - "14.0.0"  # lowest supported
        os: 
          - ubuntu-latest
          - macos-latest
          - windows-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        # see https://github.com/actions/checkout
        uses: actions/checkout@v3
      - name: Setup Node.js ${{ matrix.node-version }}
        # see https://github.com/actions/setup-node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"
      - name: setup project
        run: npm ci --ignore-scripts
      - name: fetch build artifact
        # see https://github.com/actions/download-artifact
        uses: actions/download-artifact@v3
        with:
          name: dist.node
          path: dist.node
      - name: test
        run: npm run test:node
  # test-web:
    # TODO via https://github.com/CycloneDX/cyclonedx-javascript-library/issues/51
