"use strict";exports["1.4"] = validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","$id":"http://cyclonedx.org/schema/bom-1.4.schema.json","type":"object","title":"CycloneDX Software Bill of Materials Standard","$comment":"CycloneDX JSON schema is published under the terms of the Apache License 2.0.","required":["bomFormat","specVersion","version"],"additionalProperties":false,"properties":{"$schema":{"type":"string","enum":["http://cyclonedx.org/schema/bom-1.4.schema.json"]},"bomFormat":{"type":"string","title":"BOM Format","description":"Specifies the format of the BOM. This helps to identify the file as CycloneDX since BOMs do not have a filename convention nor does JSON schema support namespaces. This value MUST be \"CycloneDX\".","enum":["CycloneDX"]},"specVersion":{"type":"string","title":"CycloneDX Specification Version","description":"The version of the CycloneDX specification a BOM conforms to (starting at version 1.2).","examples":["1.4"]},"serialNumber":{"type":"string","title":"BOM Serial Number","description":"Every BOM generated SHOULD have a unique serial number, even if the contents of the BOM have not changed over time. If specified, the serial number MUST conform to RFC-4122. Use of serial numbers are RECOMMENDED.","examples":["urn:uuid:3e671687-395b-41f5-a30f-a58921a69b79"],"pattern":"^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"},"version":{"type":"integer","title":"BOM Version","description":"Whenever an existing BOM is modified, either manually or through automated processes, the version of the BOM SHOULD be incremented by 1. When a system is presented with multiple BOMs with identical serial numbers, the system SHOULD use the most recent version of the BOM. The default version is '1'.","default":1,"examples":[1]},"metadata":{"$ref":"#/definitions/metadata","title":"BOM Metadata","description":"Provides additional information about a BOM."},"components":{"type":"array","additionalItems":false,"items":{"$ref":"#/definitions/component"},"uniqueItems":true,"title":"Components","description":"A list of software and hardware components."},"services":{"type":"array","additionalItems":false,"items":{"$ref":"#/definitions/service"},"uniqueItems":true,"title":"Services","description":"A list of services. This may include microservices, function-as-a-service, and other types of network or intra-process services."},"externalReferences":{"type":"array","additionalItems":false,"items":{"$ref":"#/definitions/externalReference"},"title":"External References","description":"External references provide a way to document systems, sites, and information that may be relevant but which are not included with the BOM."},"dependencies":{"type":"array","additionalItems":false,"items":{"$ref":"#/definitions/dependency"},"uniqueItems":true,"title":"Dependencies","description":"Provides the ability to document dependency relationships."},"compositions":{"type":"array","additionalItems":false,"items":{"$ref":"#/definitions/compositions"},"uniqueItems":true,"title":"Compositions","description":"Compositions describe constituent parts (including components, services, and dependency relationships) and their completeness."},"vulnerabilities":{"type":"array","additionalItems":false,"items":{"$ref":"#/definitions/vulnerability"},"uniqueItems":true,"title":"Vulnerabilities","description":"Vulnerabilities identified in components or services."},"signature":{"$ref":"#/definitions/signature","title":"Signature","description":"Enveloped signature in [JSON Signature Format (JSF)](https://cyberphone.github.io/doc/security/jsf.html)."}},"definitions":{"refType":{"$comment":"Identifier-DataType for interlinked elements.","type":"string"},"metadata":{"type":"object","title":"BOM Metadata Object","additionalProperties":false,"properties":{"timestamp":{"type":"string","format":"date-time","title":"Timestamp","description":"The date and time (timestamp) when the BOM was created."},"tools":{"type":"array","title":"Creation Tools","description":"The tool(s) used in the creation of the BOM.","additionalItems":false,"items":{"$ref":"#/definitions/tool"}},"authors":{"type":"array","title":"Authors","description":"The person(s) who created the BOM. Authors are common in BOMs created through manual processes. BOMs created through automated means may not have authors.","additionalItems":false,"items":{"$ref":"#/definitions/organizationalContact"}},"component":{"title":"Component","description":"The component that the BOM describes.","$ref":"#/definitions/component"},"manufacture":{"title":"Manufacture","description":"The organization that manufactured the component that the BOM describes.","$ref":"#/definitions/organizationalEntity"},"supplier":{"title":"Supplier","description":" The organization that supplied the component that the BOM describes. The supplier may often be the manufacturer, but may also be a distributor or repackager.","$ref":"#/definitions/organizationalEntity"},"licenses":{"type":"array","title":"BOM License(s)","additionalItems":false,"items":{"$ref":"#/definitions/licenseChoice"}},"properties":{"type":"array","title":"Properties","description":"Provides the ability to document properties in a name-value store. This provides flexibility to include data not officially supported in the standard without having to use additional namespaces or create extensions. Unlike key-value stores, properties support duplicate names, each potentially having different values. Property names of interest to the general public are encouraged to be registered in the [CycloneDX Property Taxonomy](https://github.com/CycloneDX/cyclonedx-property-taxonomy). Formal registration is OPTIONAL.","additionalItems":false,"items":{"$ref":"#/definitions/property"}}}},"tool":{"type":"object","title":"Tool","description":"Information about the automated or manual tool used","additionalProperties":false,"properties":{"vendor":{"type":"string","title":"Tool Vendor","description":"The name of the vendor who created the tool"},"name":{"type":"string","title":"Tool Name","description":"The name of the tool"},"version":{"type":"string","title":"Tool Version","description":"The version of the tool"},"hashes":{"type":"array","additionalItems":false,"items":{"$ref":"#/definitions/hash"},"title":"Hashes","description":"The hashes of the tool (if applicable)."},"externalReferences":{"type":"array","additionalItems":false,"items":{"$ref":"#/definitions/externalReference"},"title":"External References","description":"External references provide a way to document systems, sites, and information that may be relevant but which are not included with the BOM."}}},"organizationalEntity":{"type":"object","title":"Organizational Entity Object","description":"","additionalProperties":false,"properties":{"name":{"type":"string","title":"Name","description":"The name of the organization","examples":["Example Inc."]},"url":{"type":"array","items":{"type":"string","format":"iri-reference"},"title":"URL","description":"The URL of the organization. Multiple URLs are allowed.","examples":["https://example.com"]},"contact":{"type":"array","title":"Contact","description":"A contact at the organization. Multiple contacts are allowed.","additionalItems":false,"items":{"$ref":"#/definitions/organizationalContact"}}}},"organizationalContact":{"type":"object","title":"Organizational Contact Object","description":"","additionalProperties":false,"properties":{"name":{"type":"string","title":"Name","description":"The name of a contact","examples":["Contact name"]},"email":{"type":"string","format":"idn-email","title":"Email Address","description":"The email address of the contact.","examples":["firstname.lastname@example.com"]},"phone":{"type":"string","title":"Phone","description":"The phone number of the contact.","examples":["800-555-1212"]}}},"component":{"type":"object","title":"Component Object","required":["type","name"],"additionalProperties":false,"properties":{"type":{"type":"string","enum":["application","framework","library","container","operating-system","device","firmware","file"],"title":"Component Type","description":"Specifies the type of component. For software components, classify as application if no more specific appropriate classification is available or cannot be determined for the component. Types include:\n\n* __application__ = A software application. Refer to [https://en.wikipedia.org/wiki/Application_software](https://en.wikipedia.org/wiki/Application_software) for information about applications.\n* __framework__ = A software framework. Refer to [https://en.wikipedia.org/wiki/Software_framework](https://en.wikipedia.org/wiki/Software_framework) for information on how frameworks vary slightly from libraries.\n* __library__ = A software library. Refer to [https://en.wikipedia.org/wiki/Library_(computing)](https://en.wikipedia.org/wiki/Library_(computing))\n for information about libraries. All third-party and open source reusable components will likely be a library. If the library also has key features of a framework, then it should be classified as a framework. If not, or is unknown, then specifying library is RECOMMENDED.\n* __container__ = A packaging and/or runtime format, not specific to any particular technology, which isolates software inside the container from software outside of a container through virtualization technology. Refer to [https://en.wikipedia.org/wiki/OS-level_virtualization](https://en.wikipedia.org/wiki/OS-level_virtualization)\n* __operating-system__ = A software operating system without regard to deployment model (i.e. installed on physical hardware, virtual machine, image, etc) Refer to [https://en.wikipedia.org/wiki/Operating_system](https://en.wikipedia.org/wiki/Operating_system)\n* __device__ = A hardware device such as a processor, or chip-set. A hardware device containing firmware SHOULD include a component for the physical hardware itself, and another component of type 'firmware' or 'operating-system' (whichever is relevant), describing information about the software running on the device.\n* __firmware__ = A special type of software that provides low-level control over a devices hardware. Refer to [https://en.wikipedia.org/wiki/Firmware](https://en.wikipedia.org/wiki/Firmware)\n* __file__ = A computer file. Refer to [https://en.wikipedia.org/wiki/Computer_file](https://en.wikipedia.org/wiki/Computer_file) for information about files.","examples":["library"]},"mime-type":{"type":"string","title":"Mime-Type","description":"The optional mime-type of the component. When used on file components, the mime-type can provide additional context about the kind of file being represented such as an image, font, or executable. Some library or framework components may also have an associated mime-type.","examples":["image/jpeg"],"pattern":"^[-+a-z0-9.]+/[-+a-z0-9.]+$"},"bom-ref":{"$ref":"#/definitions/refType","title":"BOM Reference","description":"An optional identifier which can be used to reference the component elsewhere in the BOM. Every bom-ref MUST be unique within the BOM."},"supplier":{"title":"Component Supplier","description":" The organization that supplied the component. The supplier may often be the manufacturer, but may also be a distributor or repackager.","$ref":"#/definitions/organizationalEntity"},"author":{"type":"string","title":"Component Author","description":"The person(s) or organization(s) that authored the component","examples":["Acme Inc"]},"publisher":{"type":"string","title":"Component Publisher","description":"The person(s) or organization(s) that published the component","examples":["Acme Inc"]},"group":{"type":"string","title":"Component Group","description":"The grouping name or identifier. This will often be a shortened, single name of the company or project that produced the component, or the source package or domain name. Whitespace and special characters should be avoided. Examples include: apache, org.apache.commons, and apache.org.","examples":["com.acme"]},"name":{"type":"string","title":"Component Name","description":"The name of the component. This will often be a shortened, single name of the component. Examples: commons-lang3 and jquery","examples":["tomcat-catalina"]},"version":{"type":"string","title":"Component Version","description":"The component version. The version should ideally comply with semantic versioning but is not enforced.","examples":["9.0.14"]},"description":{"type":"string","title":"Component Description","description":"Specifies a description for the component"},"scope":{"type":"string","enum":["required","optional","excluded"],"title":"Component Scope","description":"Specifies the scope of the component. If scope is not specified, 'required' scope SHOULD be assumed by the consumer of the BOM.","default":"required"},"hashes":{"type":"array","title":"Component Hashes","additionalItems":false,"items":{"$ref":"#/definitions/hash"}},"licenses":{"type":"array","additionalItems":false,"items":{"$ref":"#/definitions/licenseChoice"},"title":"Component License(s)"},"copyright":{"type":"string","title":"Component Copyright","description":"A copyright notice informing users of the underlying claims to copyright ownership in a published work.","examples":["Acme Inc"]},"cpe":{"type":"string","title":"Component Common Platform Enumeration (CPE)","description":"Specifies a well-formed CPE name that conforms to the CPE 2.2 or 2.3 specification. See [https://nvd.nist.gov/products/cpe](https://nvd.nist.gov/products/cpe)","examples":["cpe:2.3:a:acme:component_framework:-:*:*:*:*:*:*:*"]},"purl":{"type":"string","title":"Component Package URL (purl)","description":"Specifies the package-url (purl). The purl, if specified, MUST be valid and conform to the specification defined at: [https://github.com/package-url/purl-spec](https://github.com/package-url/purl-spec)","examples":["pkg:maven/com.acme/tomcat-catalina@9.0.14?packaging=jar"]},"swid":{"$ref":"#/definitions/swid","title":"SWID Tag","description":"Specifies metadata and content for [ISO-IEC 19770-2 Software Identification (SWID) Tags](https://www.iso.org/standard/65666.html)."},"modified":{"type":"boolean","title":"Component Modified From Original","description":"[Deprecated] - DO NOT USE. This will be removed in a future version. Use the pedigree element instead to supply information on exactly how the component was modified. A boolean value indicating if the component has been modified from the original. A value of true indicates the component is a derivative of the original. A value of false indicates the component has not been modified from the original."},"pedigree":{"type":"object","title":"Component Pedigree","description":"Component pedigree is a way to document complex supply chain scenarios where components are created, distributed, modified, redistributed, combined with other components, etc. Pedigree supports viewing this complex chain from the beginning, the end, or anywhere in the middle. It also provides a way to document variants where the exact relation may not be known.","additionalProperties":false,"properties":{"ancestors":{"type":"array","title":"Ancestors","description":"Describes zero or more components in which a component is derived from. This is commonly used to describe forks from existing projects where the forked version contains a ancestor node containing the original component it was forked from. For example, Component A is the original component. Component B is the component being used and documented in the BOM. However, Component B contains a pedigree node with a single ancestor documenting Component A - the original component from which Component B is derived from.","additionalItems":false,"items":{"$ref":"#/definitions/component"}},"descendants":{"type":"array","title":"Descendants","description":"Descendants are the exact opposite of ancestors. This provides a way to document all forks (and their forks) of an original or root component.","additionalItems":false,"items":{"$ref":"#/definitions/component"}},"variants":{"type":"array","title":"Variants","description":"Variants describe relations where the relationship between the components are not known. For example, if Component A contains nearly identical code to Component B. They are both related, but it is unclear if one is derived from the other, or if they share a common ancestor.","additionalItems":false,"items":{"$ref":"#/definitions/component"}},"commits":{"type":"array","title":"Commits","description":"A list of zero or more commits which provide a trail describing how the component deviates from an ancestor, descendant, or variant.","additionalItems":false,"items":{"$ref":"#/definitions/commit"}},"patches":{"type":"array","title":"Patches","description":">A list of zero or more patches describing how the component deviates from an ancestor, descendant, or variant. Patches may be complimentary to commits or may be used in place of commits.","additionalItems":false,"items":{"$ref":"#/definitions/patch"}},"notes":{"type":"string","title":"Notes","description":"Notes, observations, and other non-structured commentary describing the components pedigree."}}},"externalReferences":{"type":"array","additionalItems":false,"items":{"$ref":"#/definitions/externalReference"},"title":"External References","description":"External references provide a way to document systems, sites, and information that may be relevant but which are not included with the BOM."},"components":{"type":"array","additionalItems":false,"items":{"$ref":"#/definitions/component"},"uniqueItems":true,"title":"Components","description":"A list of software and hardware components included in the parent component. This is not a dependency tree. It provides a way to specify a hierarchical representation of component assemblies, similar to system &#8594; subsystem &#8594; parts assembly in physical supply chains."},"evidence":{"$ref":"#/definitions/componentEvidence","title":"Evidence","description":"Provides the ability to document evidence collected through various forms of extraction or analysis."},"releaseNotes":{"$ref":"#/definitions/releaseNotes","title":"Release notes","description":"Specifies optional release notes."},"properties":{"type":"array","title":"Properties","description":"Provides the ability to document properties in a name-value store. This provides flexibility to include data not officially supported in the standard without having to use additional namespaces or create extensions. Unlike key-value stores, properties support duplicate names, each potentially having different values. Property names of interest to the general public are encouraged to be registered in the [CycloneDX Property Taxonomy](https://github.com/CycloneDX/cyclonedx-property-taxonomy). Formal registration is OPTIONAL.","additionalItems":false,"items":{"$ref":"#/definitions/property"}},"signature":{"$ref":"#/definitions/signature","title":"Signature","description":"Enveloped signature in [JSON Signature Format (JSF)](https://cyberphone.github.io/doc/security/jsf.html)."}}},"swid":{"type":"object","title":"SWID Tag","description":"Specifies metadata and content for ISO-IEC 19770-2 Software Identification (SWID) Tags.","required":["tagId","name"],"additionalProperties":false,"properties":{"tagId":{"type":"string","title":"Tag ID","description":"Maps to the tagId of a SoftwareIdentity."},"name":{"type":"string","title":"Name","description":"Maps to the name of a SoftwareIdentity."},"version":{"type":"string","title":"Version","default":"0.0","description":"Maps to the version of a SoftwareIdentity."},"tagVersion":{"type":"integer","title":"Tag Version","default":0,"description":"Maps to the tagVersion of a SoftwareIdentity."},"patch":{"type":"boolean","title":"Patch","default":false,"description":"Maps to the patch of a SoftwareIdentity."},"text":{"title":"Attachment text","description":"Specifies the metadata and content of the SWID tag.","$ref":"#/definitions/attachment"},"url":{"type":"string","title":"URL","description":"The URL to the SWID file.","format":"iri-reference"}}},"attachment":{"type":"object","title":"Attachment","description":"Specifies the metadata and content for an attachment.","required":["content"],"additionalProperties":false,"properties":{"contentType":{"type":"string","title":"Content-Type","description":"Specifies the content type of the text. Defaults to text/plain if not specified.","default":"text/plain"},"encoding":{"type":"string","title":"Encoding","description":"Specifies the optional encoding the text is represented in.","enum":["base64"]},"content":{"type":"string","title":"Attachment Text","description":"The attachment data. Proactive controls such as input validation and sanitization should be employed to prevent misuse of attachment text."}}},"hash":{"type":"object","title":"Hash Objects","required":["alg","content"],"additionalProperties":false,"properties":{"alg":{"$ref":"#/definitions/hash-alg"},"content":{"$ref":"#/definitions/hash-content"}}},"hash-alg":{"type":"string","enum":["MD5","SHA-1","SHA-256","SHA-384","SHA-512","SHA3-256","SHA3-384","SHA3-512","BLAKE2b-256","BLAKE2b-384","BLAKE2b-512","BLAKE3"],"title":"Hash Algorithm"},"hash-content":{"type":"string","title":"Hash Content (value)","examples":["3942447fac867ae5cdb3229b658f4d48"],"pattern":"^([a-fA-F0-9]{32}|[a-fA-F0-9]{40}|[a-fA-F0-9]{64}|[a-fA-F0-9]{96}|[a-fA-F0-9]{128})$"},"license":{"type":"object","title":"License Object","oneOf":[{"required":["id"]},{"required":["name"]}],"additionalProperties":false,"properties":{"id":{"$ref":"spdx.SNAPSHOT.schema.json","title":"License ID (SPDX)","description":"A valid SPDX license ID","examples":["Apache-2.0"]},"name":{"type":"string","title":"License Name","description":"If SPDX does not define the license used, this field may be used to provide the license name","examples":["Acme Software License"]},"text":{"title":"License text","description":"An optional way to include the textual content of a license.","$ref":"#/definitions/attachment"},"url":{"type":"string","title":"License URL","description":"The URL to the license file. If specified, a 'license' externalReference should also be specified for completeness","examples":["https://www.apache.org/licenses/LICENSE-2.0.txt"],"format":"iri-reference"}}},"licenseChoice":{"type":"object","title":"License(s)","additionalProperties":false,"properties":{"license":{"$ref":"#/definitions/license"},"expression":{"type":"string","title":"SPDX License Expression","examples":["Apache-2.0 AND (MIT OR GPL-2.0-only)","GPL-3.0-only WITH Classpath-exception-2.0"]}},"oneOf":[{"required":["license"]},{"required":["expression"]}]},"commit":{"type":"object","title":"Commit","description":"Specifies an individual commit","additionalProperties":false,"properties":{"uid":{"type":"string","title":"UID","description":"A unique identifier of the commit. This may be version control specific. For example, Subversion uses revision numbers whereas git uses commit hashes."},"url":{"type":"string","title":"URL","description":"The URL to the commit. This URL will typically point to a commit in a version control system.","format":"iri-reference"},"author":{"title":"Author","description":"The author who created the changes in the commit","$ref":"#/definitions/identifiableAction"},"committer":{"title":"Committer","description":"The person who committed or pushed the commit","$ref":"#/definitions/identifiableAction"},"message":{"type":"string","title":"Message","description":"The text description of the contents of the commit"}}},"patch":{"type":"object","title":"Patch","description":"Specifies an individual patch","required":["type"],"additionalProperties":false,"properties":{"type":{"type":"string","enum":["unofficial","monkey","backport","cherry-pick"],"title":"Type","description":"Specifies the purpose for the patch including the resolution of defects, security issues, or new behavior or functionality.\n\n* __unofficial__ = A patch which is not developed by the creators or maintainers of the software being patched. Refer to [https://en.wikipedia.org/wiki/Unofficial_patch](https://en.wikipedia.org/wiki/Unofficial_patch)\n* __monkey__ = A patch which dynamically modifies runtime behavior. Refer to [https://en.wikipedia.org/wiki/Monkey_patch](https://en.wikipedia.org/wiki/Monkey_patch)\n* __backport__ = A patch which takes code from a newer version of software and applies it to older versions of the same software. Refer to [https://en.wikipedia.org/wiki/Backporting](https://en.wikipedia.org/wiki/Backporting)\n* __cherry-pick__ = A patch created by selectively applying commits from other versions or branches of the same software."},"diff":{"title":"Diff","description":"The patch file (or diff) that show changes. Refer to [https://en.wikipedia.org/wiki/Diff](https://en.wikipedia.org/wiki/Diff)","$ref":"#/definitions/diff"},"resolves":{"type":"array","additionalItems":false,"items":{"$ref":"#/definitions/issue"},"title":"Resolves","description":"A collection of issues the patch resolves"}}},"diff":{"type":"object","title":"Diff","description":"The patch file (or diff) that show changes. Refer to https://en.wikipedia.org/wiki/Diff","additionalProperties":false,"properties":{"text":{"title":"Diff text","description":"Specifies the optional text of the diff","$ref":"#/definitions/attachment"},"url":{"type":"string","title":"URL","description":"Specifies the URL to the diff","format":"iri-reference"}}},"issue":{"type":"object","title":"Diff","description":"An individual issue that has been resolved.","required":["type"],"additionalProperties":false,"properties":{"type":{"type":"string","enum":["defect","enhancement","security"],"title":"Type","description":"Specifies the type of issue"},"id":{"type":"string","title":"ID","description":"The identifier of the issue assigned by the source of the issue"},"name":{"type":"string","title":"Name","description":"The name of the issue"},"description":{"type":"string","title":"Description","description":"A description of the issue"},"source":{"type":"object","title":"Source","description":"The source of the issue where it is documented","additionalProperties":false,"properties":{"name":{"type":"string","title":"Name","description":"The name of the source. For example 'National Vulnerability Database', 'NVD', and 'Apache'"},"url":{"type":"string","title":"URL","description":"The url of the issue documentation as provided by the source","format":"iri-reference"}}},"references":{"type":"array","items":{"type":"string","format":"iri-reference"},"title":"References","description":"A collection of URL's for reference. Multiple URLs are allowed.","examples":["https://example.com"]}}},"identifiableAction":{"type":"object","title":"Identifiable Action","description":"Specifies an individual commit","additionalProperties":false,"properties":{"timestamp":{"type":"string","format":"date-time","title":"Timestamp","description":"The timestamp in which the action occurred"},"name":{"type":"string","title":"Name","description":"The name of the individual who performed the action"},"email":{"type":"string","format":"idn-email","title":"E-mail","description":"The email address of the individual who performed the action"}}},"externalReference":{"type":"object","title":"External Reference","description":"Specifies an individual external reference","required":["url","type"],"additionalProperties":false,"properties":{"url":{"type":"string","title":"URL","description":"The URL to the external reference","format":"iri-reference"},"comment":{"type":"string","title":"Comment","description":"An optional comment describing the external reference"},"type":{"type":"string","title":"Type","description":"Specifies the type of external reference. There are built-in types to describe common references. If a type does not exist for the reference being referred to, use the \"other\" type.","enum":["vcs","issue-tracker","website","advisories","bom","mailing-list","social","chat","documentation","support","distribution","license","build-meta","build-system","release-notes","other"]},"hashes":{"type":"array","additionalItems":false,"items":{"$ref":"#/definitions/hash"},"title":"Hashes","description":"The hashes of the external reference (if applicable)."}}},"dependency":{"type":"object","title":"Dependency","description":"Defines the direct dependencies of a component. Components that do not have their own dependencies MUST be declared as empty elements within the graph. Components that are not represented in the dependency graph MAY have unknown dependencies. It is RECOMMENDED that implementations assume this to be opaque and not an indicator of a component being dependency-free.","required":["ref"],"additionalProperties":false,"properties":{"ref":{"$ref":"#/definitions/refType","title":"Reference","description":"References a component by the components bom-ref attribute"},"dependsOn":{"type":"array","uniqueItems":true,"additionalItems":false,"items":{"$ref":"#/definitions/refType"},"title":"Depends On","description":"The bom-ref identifiers of the components that are dependencies of this dependency object."}}},"service":{"type":"object","title":"Service Object","required":["name"],"additionalProperties":false,"properties":{"bom-ref":{"$ref":"#/definitions/refType","title":"BOM Reference","description":"An optional identifier which can be used to reference the service elsewhere in the BOM. Every bom-ref MUST be unique within the BOM."},"provider":{"title":"Provider","description":"The organization that provides the service.","$ref":"#/definitions/organizationalEntity"},"group":{"type":"string","title":"Service Group","description":"The grouping name, namespace, or identifier. This will often be a shortened, single name of the company or project that produced the service or domain name. Whitespace and special characters should be avoided.","examples":["com.acme"]},"name":{"type":"string","title":"Service Name","description":"The name of the service. This will often be a shortened, single name of the service.","examples":["ticker-service"]},"version":{"type":"string","title":"Service Version","description":"The service version.","examples":["1.0.0"]},"description":{"type":"string","title":"Service Description","description":"Specifies a description for the service"},"endpoints":{"type":"array","items":{"type":"string","format":"iri-reference"},"title":"Endpoints","description":"The endpoint URIs of the service. Multiple endpoints are allowed.","examples":["https://example.com/api/v1/ticker"]},"authenticated":{"type":"boolean","title":"Authentication Required","description":"A boolean value indicating if the service requires authentication. A value of true indicates the service requires authentication prior to use. A value of false indicates the service does not require authentication."},"x-trust-boundary":{"type":"boolean","title":"Crosses Trust Boundary","description":"A boolean value indicating if use of the service crosses a trust zone or boundary. A value of true indicates that by using the service, a trust boundary is crossed. A value of false indicates that by using the service, a trust boundary is not crossed."},"data":{"type":"array","additionalItems":false,"items":{"$ref":"#/definitions/dataClassification"},"title":"Data Classification","description":"Specifies the data classification."},"licenses":{"type":"array","additionalItems":false,"items":{"$ref":"#/definitions/licenseChoice"},"title":"Component License(s)"},"externalReferences":{"type":"array","additionalItems":false,"items":{"$ref":"#/definitions/externalReference"},"title":"External References","description":"External references provide a way to document systems, sites, and information that may be relevant but which are not included with the BOM."},"services":{"type":"array","additionalItems":false,"items":{"$ref":"#/definitions/service"},"uniqueItems":true,"title":"Services","description":"A list of services included or deployed behind the parent service. This is not a dependency tree. It provides a way to specify a hierarchical representation of service assemblies."},"releaseNotes":{"$ref":"#/definitions/releaseNotes","title":"Release notes","description":"Specifies optional release notes."},"properties":{"type":"array","title":"Properties","description":"Provides the ability to document properties in a name-value store. This provides flexibility to include data not officially supported in the standard without having to use additional namespaces or create extensions. Unlike key-value stores, properties support duplicate names, each potentially having different values. Property names of interest to the general public are encouraged to be registered in the [CycloneDX Property Taxonomy](https://github.com/CycloneDX/cyclonedx-property-taxonomy). Formal registration is OPTIONAL.","additionalItems":false,"items":{"$ref":"#/definitions/property"}},"signature":{"$ref":"#/definitions/signature","title":"Signature","description":"Enveloped signature in [JSON Signature Format (JSF)](https://cyberphone.github.io/doc/security/jsf.html)."}}},"dataClassification":{"type":"object","title":"Hash Objects","required":["flow","classification"],"additionalProperties":false,"properties":{"flow":{"$ref":"#/definitions/dataFlow","title":"Directional Flow","description":"Specifies the flow direction of the data. Direction is relative to the service. Inbound flow states that data enters the service. Outbound flow states that data leaves the service. Bi-directional states that data flows both ways, and unknown states that the direction is not known."},"classification":{"type":"string","title":"Classification","description":"Data classification tags data according to its type, sensitivity, and value if altered, stolen, or destroyed."}}},"dataFlow":{"type":"string","enum":["inbound","outbound","bi-directional","unknown"],"title":"Data flow direction","description":"Specifies the flow direction of the data. Direction is relative to the service. Inbound flow states that data enters the service. Outbound flow states that data leaves the service. Bi-directional states that data flows both ways, and unknown states that the direction is not known."},"copyright":{"type":"object","title":"Copyright","required":["text"],"additionalProperties":false,"properties":{"text":{"type":"string","title":"Copyright Text"}}},"componentEvidence":{"type":"object","title":"Evidence","description":"Provides the ability to document evidence collected through various forms of extraction or analysis.","additionalProperties":false,"properties":{"licenses":{"type":"array","additionalItems":false,"items":{"$ref":"#/definitions/licenseChoice"},"title":"Component License(s)"},"copyright":{"type":"array","additionalItems":false,"items":{"$ref":"#/definitions/copyright"},"title":"Copyright"}}},"compositions":{"type":"object","title":"Compositions","required":["aggregate"],"additionalProperties":false,"properties":{"aggregate":{"$ref":"#/definitions/aggregateType","title":"Aggregate","description":"Specifies an aggregate type that describe how complete a relationship is."},"assemblies":{"type":"array","uniqueItems":true,"items":{"type":"string"},"title":"BOM references","description":"The bom-ref identifiers of the components or services being described. Assemblies refer to nested relationships whereby a constituent part may include other constituent parts. References do not cascade to child parts. References are explicit for the specified constituent part only."},"dependencies":{"type":"array","uniqueItems":true,"items":{"type":"string"},"title":"BOM references","description":"The bom-ref identifiers of the components or services being described. Dependencies refer to a relationship whereby an independent constituent part requires another independent constituent part. References do not cascade to transitive dependencies. References are explicit for the specified dependency only."},"signature":{"$ref":"#/definitions/signature","title":"Signature","description":"Enveloped signature in [JSON Signature Format (JSF)](https://cyberphone.github.io/doc/security/jsf.html)."}}},"aggregateType":{"type":"string","default":"not_specified","enum":["complete","incomplete","incomplete_first_party_only","incomplete_third_party_only","unknown","not_specified"]},"property":{"type":"object","title":"Lightweight name-value pair","properties":{"name":{"type":"string","title":"Name","description":"The name of the property. Duplicate names are allowed, each potentially having a different value."},"value":{"type":"string","title":"Value","description":"The value of the property."}}},"localeType":{"type":"string","pattern":"^([a-z]{2})(-[A-Z]{2})?$","title":"Locale","description":"Defines a syntax for representing two character language code (ISO-639) followed by an optional two character country code. The language code MUST be lower case. If the country code is specified, the country code MUST be upper case. The language code and country code MUST be separated by a minus sign. Examples: en, en-US, fr, fr-CA"},"releaseType":{"type":"string","examples":["major","minor","patch","pre-release","internal"],"description":"The software versioning type. It is RECOMMENDED that the release type use one of 'major', 'minor', 'patch', 'pre-release', or 'internal'. Representing all possible software release types is not practical, so standardizing on the recommended values, whenever possible, is strongly encouraged.\n\n* __major__ = A major release may contain significant changes or may introduce breaking changes.\n* __minor__ = A minor release, also known as an update, may contain a smaller number of changes than major releases.\n* __patch__ = Patch releases are typically unplanned and may resolve defects or important security issues.\n* __pre-release__ = A pre-release may include alpha, beta, or release candidates and typically have limited support. They provide the ability to preview a release prior to its general availability.\n* __internal__ = Internal releases are not for public consumption and are intended to be used exclusively by the project or manufacturer that produced it."},"note":{"type":"object","title":"Note","description":"A note containing the locale and content.","required":["text"],"additionalProperties":false,"properties":{"locale":{"$ref":"#/definitions/localeType","title":"Locale","description":"The ISO-639 (or higher) language code and optional ISO-3166 (or higher) country code. Examples include: \"en\", \"en-US\", \"fr\" and \"fr-CA\""},"text":{"title":"Release note content","description":"Specifies the full content of the release note.","$ref":"#/definitions/attachment"}}},"releaseNotes":{"type":"object","title":"Release notes","required":["type"],"additionalProperties":false,"properties":{"type":{"$ref":"#/definitions/releaseType","title":"Type","description":"The software versioning type the release note describes."},"title":{"type":"string","title":"Title","description":"The title of the release."},"featuredImage":{"type":"string","format":"iri-reference","title":"Featured image","description":"The URL to an image that may be prominently displayed with the release note."},"socialImage":{"type":"string","format":"iri-reference","title":"Social image","description":"The URL to an image that may be used in messaging on social media platforms."},"description":{"type":"string","title":"Description","description":"A short description of the release."},"timestamp":{"type":"string","format":"date-time","title":"Timestamp","description":"The date and time (timestamp) when the release note was created."},"aliases":{"type":"array","items":{"type":"string"},"title":"Aliases","description":"One or more alternate names the release may be referred to. This may include unofficial terms used by development and marketing teams (e.g. code names)."},"tags":{"type":"array","items":{"type":"string"},"title":"Tags","description":"One or more tags that may aid in search or retrieval of the release note."},"resolves":{"type":"array","additionalItems":false,"items":{"$ref":"#/definitions/issue"},"title":"Resolves","description":"A collection of issues that have been resolved."},"notes":{"type":"array","additionalItems":false,"items":{"$ref":"#/definitions/note"},"title":"Notes","description":"Zero or more release notes containing the locale and content. Multiple note objects may be specified to support release notes in a wide variety of languages."},"properties":{"type":"array","title":"Properties","description":"Provides the ability to document properties in a name-value store. This provides flexibility to include data not officially supported in the standard without having to use additional namespaces or create extensions. Unlike key-value stores, properties support duplicate names, each potentially having different values. Property names of interest to the general public are encouraged to be registered in the [CycloneDX Property Taxonomy](https://github.com/CycloneDX/cyclonedx-property-taxonomy). Formal registration is OPTIONAL.","additionalItems":false,"items":{"$ref":"#/definitions/property"}}}},"advisory":{"type":"object","title":"Advisory","description":"Title and location where advisory information can be obtained. An advisory is a notification of a threat to a component, service, or system.","required":["url"],"additionalProperties":false,"properties":{"title":{"type":"string","title":"Title","description":"An optional name of the advisory."},"url":{"type":"string","title":"URL","format":"iri-reference","description":"Location where the advisory can be obtained."}}},"cwe":{"type":"integer","minimum":1,"title":"CWE","description":"Integer representation of a Common Weaknesses Enumerations (CWE). For example 399 (of https://cwe.mitre.org/data/definitions/399.html)"},"severity":{"type":"string","title":"Severity","description":"Textual representation of the severity of the vulnerability adopted by the analysis method. If the analysis method uses values other than what is provided, the user is expected to translate appropriately.","enum":["critical","high","medium","low","info","none","unknown"]},"scoreMethod":{"type":"string","title":"Method","description":"Specifies the severity or risk scoring methodology or standard used.\n\n* CVSSv2 - [Common Vulnerability Scoring System v2](https://www.first.org/cvss/v2/)\n* CVSSv3 - [Common Vulnerability Scoring System v3](https://www.first.org/cvss/v3-0/)\n* CVSSv31 - [Common Vulnerability Scoring System v3.1](https://www.first.org/cvss/v3-1/)\n* OWASP - [OWASP Risk Rating Methodology](https://owasp.org/www-community/OWASP_Risk_Rating_Methodology)","enum":["CVSSv2","CVSSv3","CVSSv31","OWASP","other"]},"impactAnalysisState":{"type":"string","title":"Impact Analysis State","description":"Declares the current state of an occurrence of a vulnerability, after automated or manual analysis. \n\n* __resolved__ = the vulnerability has been remediated. \n* __resolved\\_with\\_pedigree__ = the vulnerability has been remediated and evidence of the changes are provided in the affected components pedigree containing verifiable commit history and/or diff(s). \n* __exploitable__ = the vulnerability may be directly or indirectly exploitable. \n* __in\\_triage__ = the vulnerability is being investigated. \n* __false\\_positive__ = the vulnerability is not specific to the component or service and was falsely identified or associated. \n* __not\\_affected__ = the component or service is not affected by the vulnerability. Justification should be specified for all not_affected cases.","enum":["resolved","resolved_with_pedigree","exploitable","in_triage","false_positive","not_affected"]},"impactAnalysisJustification":{"type":"string","title":"Impact Analysis Justification","description":"The rationale of why the impact analysis state was asserted. \n\n* __code\\_not\\_present__ = the code has been removed or tree-shaked. \n* __code\\_not\\_reachable__ = the vulnerable code is not invoked at runtime. \n* __requires\\_configuration__ = exploitability requires a configurable option to be set/unset. \n* __requires\\_dependency__ = exploitability requires a dependency that is not present. \n* __requires\\_environment__ = exploitability requires a certain environment which is not present. \n* __protected\\_by\\_compiler__ = exploitability requires a compiler flag to be set/unset. \n* __protected\\_at\\_runtime__ = exploits are prevented at runtime. \n* __protected\\_at\\_perimeter__ = attacks are blocked at physical, logical, or network perimeter. \n* __protected\\_by\\_mitigating\\_control__ = preventative measures have been implemented that reduce the likelihood and/or impact of the vulnerability.","enum":["code_not_present","code_not_reachable","requires_configuration","requires_dependency","requires_environment","protected_by_compiler","protected_at_runtime","protected_at_perimeter","protected_by_mitigating_control"]},"rating":{"type":"object","title":"Rating","description":"Defines the severity or risk ratings of a vulnerability.","additionalProperties":false,"properties":{"source":{"$ref":"#/definitions/vulnerabilitySource","description":"The source that calculated the severity or risk rating of the vulnerability."},"score":{"type":"number","title":"Score","description":"The numerical score of the rating."},"severity":{"$ref":"#/definitions/severity","description":"Textual representation of the severity that corresponds to the numerical score of the rating."},"method":{"$ref":"#/definitions/scoreMethod"},"vector":{"type":"string","title":"Vector","description":"Textual representation of the metric values used to score the vulnerability"},"justification":{"type":"string","title":"Justification","description":"An optional reason for rating the vulnerability as it was"}}},"vulnerabilitySource":{"type":"object","title":"Source","description":"The source of vulnerability information. This is often the organization that published the vulnerability.","additionalProperties":false,"properties":{"url":{"type":"string","title":"URL","description":"The url of the vulnerability documentation as provided by the source.","examples":["https://nvd.nist.gov/vuln/detail/CVE-2021-39182"]},"name":{"type":"string","title":"Name","description":"The name of the source.","examples":["NVD","National Vulnerability Database","OSS Index","VulnDB","GitHub Advisories"]}}},"vulnerability":{"type":"object","title":"Vulnerability","description":"Defines a weakness in an component or service that could be exploited or triggered by a threat source.","additionalProperties":false,"properties":{"bom-ref":{"$ref":"#/definitions/refType","title":"BOM Reference","description":"An optional identifier which can be used to reference the vulnerability elsewhere in the BOM. Every bom-ref MUST be unique within the BOM."},"id":{"type":"string","title":"ID","description":"The identifier that uniquely identifies the vulnerability.","examples":["CVE-2021-39182","GHSA-35m5-8cvj-8783","SNYK-PYTHON-ENROCRYPT-1912876"]},"source":{"$ref":"#/definitions/vulnerabilitySource","description":"The source that published the vulnerability."},"references":{"type":"array","title":"References","description":"Zero or more pointers to vulnerabilities that are the equivalent of the vulnerability specified. Often times, the same vulnerability may exist in multiple sources of vulnerability intelligence, but have different identifiers. References provide a way to correlate vulnerabilities across multiple sources of vulnerability intelligence.","additionalItems":false,"items":{"required":["id","source"],"additionalProperties":false,"properties":{"id":{"type":"string","title":"ID","description":"An identifier that uniquely identifies the vulnerability.","examples":["CVE-2021-39182","GHSA-35m5-8cvj-8783","SNYK-PYTHON-ENROCRYPT-1912876"]},"source":{"$ref":"#/definitions/vulnerabilitySource","description":"The source that published the vulnerability."}}}},"ratings":{"type":"array","title":"Ratings","description":"List of vulnerability ratings","additionalItems":false,"items":{"$ref":"#/definitions/rating"}},"cwes":{"type":"array","title":"CWEs","description":"List of Common Weaknesses Enumerations (CWEs) codes that describes this vulnerability. For example 399 (of https://cwe.mitre.org/data/definitions/399.html)","examples":[399],"additionalItems":false,"items":{"$ref":"#/definitions/cwe"}},"description":{"type":"string","title":"Description","description":"A description of the vulnerability as provided by the source."},"detail":{"type":"string","title":"Details","description":"If available, an in-depth description of the vulnerability as provided by the source organization. Details often include examples, proof-of-concepts, and other information useful in understanding root cause."},"recommendation":{"type":"string","title":"Details","description":"Recommendations of how the vulnerability can be remediated or mitigated."},"advisories":{"type":"array","title":"Advisories","description":"Published advisories of the vulnerability if provided.","additionalItems":false,"items":{"$ref":"#/definitions/advisory"}},"created":{"type":"string","format":"date-time","title":"Created","description":"The date and time (timestamp) when the vulnerability record was created in the vulnerability database."},"published":{"type":"string","format":"date-time","title":"Published","description":"The date and time (timestamp) when the vulnerability record was first published."},"updated":{"type":"string","format":"date-time","title":"Updated","description":"The date and time (timestamp) when the vulnerability record was last updated."},"credits":{"type":"object","title":"Credits","description":"Individuals or organizations credited with the discovery of the vulnerability.","additionalProperties":false,"properties":{"organizations":{"type":"array","title":"Organizations","description":"The organizations credited with vulnerability discovery.","additionalItems":false,"items":{"$ref":"#/definitions/organizationalEntity"}},"individuals":{"type":"array","title":"Individuals","description":"The individuals, not associated with organizations, that are credited with vulnerability discovery.","additionalItems":false,"items":{"$ref":"#/definitions/organizationalContact"}}}},"tools":{"type":"array","title":"Creation Tools","description":"The tool(s) used to identify, confirm, or score the vulnerability.","additionalItems":false,"items":{"$ref":"#/definitions/tool"}},"analysis":{"type":"object","title":"Impact Analysis","description":"An assessment of the impact and exploitability of the vulnerability.","additionalProperties":false,"properties":{"state":{"$ref":"#/definitions/impactAnalysisState"},"justification":{"$ref":"#/definitions/impactAnalysisJustification"},"response":{"type":"array","title":"Response","description":"A response to the vulnerability by the manufacturer, supplier, or project responsible for the affected component or service. More than one response is allowed. Responses are strongly encouraged for vulnerabilities where the analysis state is exploitable.","additionalItems":false,"items":{"type":"string","enum":["can_not_fix","will_not_fix","update","rollback","workaround_available"]}},"detail":{"type":"string","title":"Detail","description":"Detailed description of the impact including methods used during assessment. If a vulnerability is not exploitable, this field should include specific details on why the component or service is not impacted by this vulnerability."}}},"affects":{"type":"array","uniqueItems":true,"additionalItems":false,"items":{"required":["ref"],"additionalProperties":false,"properties":{"ref":{"$ref":"#/definitions/refType","title":"Reference","description":"References a component or service by the objects bom-ref"},"versions":{"type":"array","title":"Versions","description":"Zero or more individual versions or range of versions.","additionalItems":false,"items":{"oneOf":[{"required":["version"]},{"required":["range"]}],"additionalProperties":false,"properties":{"version":{"description":"A single version of a component or service.","$ref":"#/definitions/version"},"range":{"description":"A version range specified in Package URL Version Range syntax (vers) which is defined at https://github.com/package-url/purl-spec/VERSION-RANGE-SPEC.rst","$ref":"#/definitions/version"},"status":{"description":"The vulnerability status for the version or range of versions.","$ref":"#/definitions/affectedStatus","default":"affected"}}}}}},"title":"Affects","description":"The components or services that are affected by the vulnerability."},"properties":{"type":"array","title":"Properties","description":"Provides the ability to document properties in a name-value store. This provides flexibility to include data not officially supported in the standard without having to use additional namespaces or create extensions. Unlike key-value stores, properties support duplicate names, each potentially having different values. Property names of interest to the general public are encouraged to be registered in the [CycloneDX Property Taxonomy](https://github.com/CycloneDX/cyclonedx-property-taxonomy). Formal registration is OPTIONAL.","additionalItems":false,"items":{"$ref":"#/definitions/property"}}}},"affectedStatus":{"description":"The vulnerability status of a given version or range of versions of a product. The statuses 'affected' and 'unaffected' indicate that the version is affected or unaffected by the vulnerability. The status 'unknown' indicates that it is unknown or unspecified whether the given version is affected. There can be many reasons for an 'unknown' status, including that an investigation has not been undertaken or that a vendor has not disclosed the status.","type":"string","enum":["affected","unaffected","unknown"]},"version":{"description":"A single version of a component or service.","type":"string","minLength":1,"maxLength":1024},"range":{"description":"A version range specified in Package URL Version Range syntax (vers) which is defined at https://github.com/package-url/purl-spec/VERSION-RANGE-SPEC.rst","type":"string","minLength":1,"maxLength":1024},"signature":{"$ref":"jsf-0.82.SNAPSHOT.schema.json#/definitions/signature","title":"Signature","description":"Enveloped signature in [JSON Signature Format (JSF)](https://cyberphone.github.io/doc/security/jsf.html)."}}};const func2 = Object.prototype.hasOwnProperty;const func0 = require("ajv/dist/runtime/equal").default;const pattern0 = new RegExp("^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$", "u");const schema12 = {"type":"object","title":"BOM Metadata Object","additionalProperties":false,"properties":{"timestamp":{"type":"string","format":"date-time","title":"Timestamp","description":"The date and time (timestamp) when the BOM was created."},"tools":{"type":"array","title":"Creation Tools","description":"The tool(s) used in the creation of the BOM.","additionalItems":false,"items":{"$ref":"#/definitions/tool"}},"authors":{"type":"array","title":"Authors","description":"The person(s) who created the BOM. Authors are common in BOMs created through manual processes. BOMs created through automated means may not have authors.","additionalItems":false,"items":{"$ref":"#/definitions/organizationalContact"}},"component":{"title":"Component","description":"The component that the BOM describes.","$ref":"#/definitions/component"},"manufacture":{"title":"Manufacture","description":"The organization that manufactured the component that the BOM describes.","$ref":"#/definitions/organizationalEntity"},"supplier":{"title":"Supplier","description":" The organization that supplied the component that the BOM describes. The supplier may often be the manufacturer, but may also be a distributor or repackager.","$ref":"#/definitions/organizationalEntity"},"licenses":{"type":"array","title":"BOM License(s)","additionalItems":false,"items":{"$ref":"#/definitions/licenseChoice"}},"properties":{"type":"array","title":"Properties","description":"Provides the ability to document properties in a name-value store. This provides flexibility to include data not officially supported in the standard without having to use additional namespaces or create extensions. Unlike key-value stores, properties support duplicate names, each potentially having different values. Property names of interest to the general public are encouraged to be registered in the [CycloneDX Property Taxonomy](https://github.com/CycloneDX/cyclonedx-property-taxonomy). Formal registration is OPTIONAL.","additionalItems":false,"items":{"$ref":"#/definitions/property"}}}};const schema18 = {"type":"object","title":"Organizational Contact Object","description":"","additionalProperties":false,"properties":{"name":{"type":"string","title":"Name","description":"The name of a contact","examples":["Contact name"]},"email":{"type":"string","format":"idn-email","title":"Email Address","description":"The email address of the contact.","examples":["firstname.lastname@example.com"]},"phone":{"type":"string","title":"Phone","description":"The phone number of the contact.","examples":["800-555-1212"]}}};const schema44 = {"type":"object","title":"Lightweight name-value pair","properties":{"name":{"type":"string","title":"Name","description":"The name of the property. Duplicate names are allowed, each potentially having a different value."},"value":{"type":"string","title":"Value","description":"The value of the property."}}};const formats0 = require("ajv-formats/dist/formats").fullFormats["date-time"];const formats4 = require("ajv-formats/dist/formats").fullFormats["idn-email"];const schema13 = {"type":"object","title":"Tool","description":"Information about the automated or manual tool used","additionalProperties":false,"properties":{"vendor":{"type":"string","title":"Tool Vendor","description":"The name of the vendor who created the tool"},"name":{"type":"string","title":"Tool Name","description":"The name of the tool"},"version":{"type":"string","title":"Tool Version","description":"The version of the tool"},"hashes":{"type":"array","additionalItems":false,"items":{"$ref":"#/definitions/hash"},"title":"Hashes","description":"The hashes of the tool (if applicable)."},"externalReferences":{"type":"array","additionalItems":false,"items":{"$ref":"#/definitions/externalReference"},"title":"External References","description":"External references provide a way to document systems, sites, and information that may be relevant but which are not included with the BOM."}}};const schema14 = {"type":"object","title":"Hash Objects","required":["alg","content"],"additionalProperties":false,"properties":{"alg":{"$ref":"#/definitions/hash-alg"},"content":{"$ref":"#/definitions/hash-content"}}};const schema15 = {"type":"string","enum":["MD5","SHA-1","SHA-256","SHA-384","SHA-512","SHA3-256","SHA3-384","SHA3-512","BLAKE2b-256","BLAKE2b-384","BLAKE2b-512","BLAKE3"],"title":"Hash Algorithm"};const schema16 = {"type":"string","title":"Hash Content (value)","examples":["3942447fac867ae5cdb3229b658f4d48"],"pattern":"^([a-fA-F0-9]{32}|[a-fA-F0-9]{40}|[a-fA-F0-9]{64}|[a-fA-F0-9]{96}|[a-fA-F0-9]{128})$"};const pattern1 = new RegExp("^([a-fA-F0-9]{32}|[a-fA-F0-9]{40}|[a-fA-F0-9]{64}|[a-fA-F0-9]{96}|[a-fA-F0-9]{128})$", "u");function validate13(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if(((data.alg === undefined) && (missing0 = "alg")) || ((data.content === undefined) && (missing0 = "content"))){validate13.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key0 in data){if(!((key0 === "alg") || (key0 === "content"))){validate13.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.alg !== undefined){let data0 = data.alg;const _errs2 = errors;if(typeof data0 !== "string"){validate13.errors = [{instancePath:instancePath+"/alg",schemaPath:"#/definitions/hash-alg/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!((((((((((((data0 === "MD5") || (data0 === "SHA-1")) || (data0 === "SHA-256")) || (data0 === "SHA-384")) || (data0 === "SHA-512")) || (data0 === "SHA3-256")) || (data0 === "SHA3-384")) || (data0 === "SHA3-512")) || (data0 === "BLAKE2b-256")) || (data0 === "BLAKE2b-384")) || (data0 === "BLAKE2b-512")) || (data0 === "BLAKE3"))){validate13.errors = [{instancePath:instancePath+"/alg",schemaPath:"#/definitions/hash-alg/enum",keyword:"enum",params:{allowedValues: schema15.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.content !== undefined){let data1 = data.content;const _errs5 = errors;const _errs6 = errors;if(errors === _errs6){if(typeof data1 === "string"){if(!pattern1.test(data1)){validate13.errors = [{instancePath:instancePath+"/content",schemaPath:"#/definitions/hash-content/pattern",keyword:"pattern",params:{pattern: "^([a-fA-F0-9]{32}|[a-fA-F0-9]{40}|[a-fA-F0-9]{64}|[a-fA-F0-9]{96}|[a-fA-F0-9]{128})$"},message:"must match pattern \""+"^([a-fA-F0-9]{32}|[a-fA-F0-9]{40}|[a-fA-F0-9]{64}|[a-fA-F0-9]{96}|[a-fA-F0-9]{128})$"+"\""}];return false;}}else {validate13.errors = [{instancePath:instancePath+"/content",schemaPath:"#/definitions/hash-content/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs5 === errors;}else {var valid0 = true;}}}}}else {validate13.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate13.errors = vErrors;return errors === 0;}const schema17 = {"type":"object","title":"External Reference","description":"Specifies an individual external reference","required":["url","type"],"additionalProperties":false,"properties":{"url":{"type":"string","title":"URL","description":"The URL to the external reference","format":"iri-reference"},"comment":{"type":"string","title":"Comment","description":"An optional comment describing the external reference"},"type":{"type":"string","title":"Type","description":"Specifies the type of external reference. There are built-in types to describe common references. If a type does not exist for the reference being referred to, use the \"other\" type.","enum":["vcs","issue-tracker","website","advisories","bom","mailing-list","social","chat","documentation","support","distribution","license","build-meta","build-system","release-notes","other"]},"hashes":{"type":"array","additionalItems":false,"items":{"$ref":"#/definitions/hash"},"title":"Hashes","description":"The hashes of the external reference (if applicable)."}}};const formats2 = require("ajv-formats/dist/formats").fullFormats["iri-reference"];function validate15(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if(((data.url === undefined) && (missing0 = "url")) || ((data.type === undefined) && (missing0 = "type"))){validate15.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key0 in data){if(!((((key0 === "url") || (key0 === "comment")) || (key0 === "type")) || (key0 === "hashes"))){validate15.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.url !== undefined){let data0 = data.url;const _errs2 = errors;if(errors === _errs2){if(errors === _errs2){if(typeof data0 === "string"){if(!(formats2(data0))){validate15.errors = [{instancePath:instancePath+"/url",schemaPath:"#/properties/url/format",keyword:"format",params:{format: "iri-reference"},message:"must match format \""+"iri-reference"+"\""}];return false;}}else {validate15.errors = [{instancePath:instancePath+"/url",schemaPath:"#/properties/url/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.comment !== undefined){const _errs4 = errors;if(typeof data.comment !== "string"){validate15.errors = [{instancePath:instancePath+"/comment",schemaPath:"#/properties/comment/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data.type !== undefined){let data2 = data.type;const _errs6 = errors;if(typeof data2 !== "string"){validate15.errors = [{instancePath:instancePath+"/type",schemaPath:"#/properties/type/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!((((((((((((((((data2 === "vcs") || (data2 === "issue-tracker")) || (data2 === "website")) || (data2 === "advisories")) || (data2 === "bom")) || (data2 === "mailing-list")) || (data2 === "social")) || (data2 === "chat")) || (data2 === "documentation")) || (data2 === "support")) || (data2 === "distribution")) || (data2 === "license")) || (data2 === "build-meta")) || (data2 === "build-system")) || (data2 === "release-notes")) || (data2 === "other"))){validate15.errors = [{instancePath:instancePath+"/type",schemaPath:"#/properties/type/enum",keyword:"enum",params:{allowedValues: schema17.properties.type.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs6 === errors;}else {var valid0 = true;}if(valid0){if(data.hashes !== undefined){let data3 = data.hashes;const _errs8 = errors;if(errors === _errs8){if(Array.isArray(data3)){var valid1 = true;const len0 = data3.length;for(let i0=0; i0<len0; i0++){const _errs10 = errors;if(!(validate13(data3[i0], {instancePath:instancePath+"/hashes/" + i0,parentData:data3,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate13.errors : vErrors.concat(validate13.errors);errors = vErrors.length;}var valid1 = _errs10 === errors;if(!valid1){break;}}}else {validate15.errors = [{instancePath:instancePath+"/hashes",schemaPath:"#/properties/hashes/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs8 === errors;}else {var valid0 = true;}}}}}}}else {validate15.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate15.errors = vErrors;return errors === 0;}function validate12(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){const _errs1 = errors;for(const key0 in data){if(!(((((key0 === "vendor") || (key0 === "name")) || (key0 === "version")) || (key0 === "hashes")) || (key0 === "externalReferences"))){validate12.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.vendor !== undefined){const _errs2 = errors;if(typeof data.vendor !== "string"){validate12.errors = [{instancePath:instancePath+"/vendor",schemaPath:"#/properties/vendor/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.name !== undefined){const _errs4 = errors;if(typeof data.name !== "string"){validate12.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data.version !== undefined){const _errs6 = errors;if(typeof data.version !== "string"){validate12.errors = [{instancePath:instancePath+"/version",schemaPath:"#/properties/version/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs6 === errors;}else {var valid0 = true;}if(valid0){if(data.hashes !== undefined){let data3 = data.hashes;const _errs8 = errors;if(errors === _errs8){if(Array.isArray(data3)){var valid1 = true;const len0 = data3.length;for(let i0=0; i0<len0; i0++){const _errs10 = errors;if(!(validate13(data3[i0], {instancePath:instancePath+"/hashes/" + i0,parentData:data3,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate13.errors : vErrors.concat(validate13.errors);errors = vErrors.length;}var valid1 = _errs10 === errors;if(!valid1){break;}}}else {validate12.errors = [{instancePath:instancePath+"/hashes",schemaPath:"#/properties/hashes/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs8 === errors;}else {var valid0 = true;}if(valid0){if(data.externalReferences !== undefined){let data5 = data.externalReferences;const _errs11 = errors;if(errors === _errs11){if(Array.isArray(data5)){var valid2 = true;const len1 = data5.length;for(let i1=0; i1<len1; i1++){const _errs13 = errors;if(!(validate15(data5[i1], {instancePath:instancePath+"/externalReferences/" + i1,parentData:data5,parentDataProperty:i1,rootData}))){vErrors = vErrors === null ? validate15.errors : vErrors.concat(validate15.errors);errors = vErrors.length;}var valid2 = _errs13 === errors;if(!valid2){break;}}}else {validate12.errors = [{instancePath:instancePath+"/externalReferences",schemaPath:"#/properties/externalReferences/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs11 === errors;}else {var valid0 = true;}}}}}}}else {validate12.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate12.errors = vErrors;return errors === 0;}const schema19 = {"type":"object","title":"Component Object","required":["type","name"],"additionalProperties":false,"properties":{"type":{"type":"string","enum":["application","framework","library","container","operating-system","device","firmware","file"],"title":"Component Type","description":"Specifies the type of component. For software components, classify as application if no more specific appropriate classification is available or cannot be determined for the component. Types include:\n\n* __application__ = A software application. Refer to [https://en.wikipedia.org/wiki/Application_software](https://en.wikipedia.org/wiki/Application_software) for information about applications.\n* __framework__ = A software framework. Refer to [https://en.wikipedia.org/wiki/Software_framework](https://en.wikipedia.org/wiki/Software_framework) for information on how frameworks vary slightly from libraries.\n* __library__ = A software library. Refer to [https://en.wikipedia.org/wiki/Library_(computing)](https://en.wikipedia.org/wiki/Library_(computing))\n for information about libraries. All third-party and open source reusable components will likely be a library. If the library also has key features of a framework, then it should be classified as a framework. If not, or is unknown, then specifying library is RECOMMENDED.\n* __container__ = A packaging and/or runtime format, not specific to any particular technology, which isolates software inside the container from software outside of a container through virtualization technology. Refer to [https://en.wikipedia.org/wiki/OS-level_virtualization](https://en.wikipedia.org/wiki/OS-level_virtualization)\n* __operating-system__ = A software operating system without regard to deployment model (i.e. installed on physical hardware, virtual machine, image, etc) Refer to [https://en.wikipedia.org/wiki/Operating_system](https://en.wikipedia.org/wiki/Operating_system)\n* __device__ = A hardware device such as a processor, or chip-set. A hardware device containing firmware SHOULD include a component for the physical hardware itself, and another component of type 'firmware' or 'operating-system' (whichever is relevant), describing information about the software running on the device.\n* __firmware__ = A special type of software that provides low-level control over a devices hardware. Refer to [https://en.wikipedia.org/wiki/Firmware](https://en.wikipedia.org/wiki/Firmware)\n* __file__ = A computer file. Refer to [https://en.wikipedia.org/wiki/Computer_file](https://en.wikipedia.org/wiki/Computer_file) for information about files.","examples":["library"]},"mime-type":{"type":"string","title":"Mime-Type","description":"The optional mime-type of the component. When used on file components, the mime-type can provide additional context about the kind of file being represented such as an image, font, or executable. Some library or framework components may also have an associated mime-type.","examples":["image/jpeg"],"pattern":"^[-+a-z0-9.]+/[-+a-z0-9.]+$"},"bom-ref":{"$ref":"#/definitions/refType","title":"BOM Reference","description":"An optional identifier which can be used to reference the component elsewhere in the BOM. Every bom-ref MUST be unique within the BOM."},"supplier":{"title":"Component Supplier","description":" The organization that supplied the component. The supplier may often be the manufacturer, but may also be a distributor or repackager.","$ref":"#/definitions/organizationalEntity"},"author":{"type":"string","title":"Component Author","description":"The person(s) or organization(s) that authored the component","examples":["Acme Inc"]},"publisher":{"type":"string","title":"Component Publisher","description":"The person(s) or organization(s) that published the component","examples":["Acme Inc"]},"group":{"type":"string","title":"Component Group","description":"The grouping name or identifier. This will often be a shortened, single name of the company or project that produced the component, or the source package or domain name. Whitespace and special characters should be avoided. Examples include: apache, org.apache.commons, and apache.org.","examples":["com.acme"]},"name":{"type":"string","title":"Component Name","description":"The name of the component. This will often be a shortened, single name of the component. Examples: commons-lang3 and jquery","examples":["tomcat-catalina"]},"version":{"type":"string","title":"Component Version","description":"The component version. The version should ideally comply with semantic versioning but is not enforced.","examples":["9.0.14"]},"description":{"type":"string","title":"Component Description","description":"Specifies a description for the component"},"scope":{"type":"string","enum":["required","optional","excluded"],"title":"Component Scope","description":"Specifies the scope of the component. If scope is not specified, 'required' scope SHOULD be assumed by the consumer of the BOM.","default":"required"},"hashes":{"type":"array","title":"Component Hashes","additionalItems":false,"items":{"$ref":"#/definitions/hash"}},"licenses":{"type":"array","additionalItems":false,"items":{"$ref":"#/definitions/licenseChoice"},"title":"Component License(s)"},"copyright":{"type":"string","title":"Component Copyright","description":"A copyright notice informing users of the underlying claims to copyright ownership in a published work.","examples":["Acme Inc"]},"cpe":{"type":"string","title":"Component Common Platform Enumeration (CPE)","description":"Specifies a well-formed CPE name that conforms to the CPE 2.2 or 2.3 specification. See [https://nvd.nist.gov/products/cpe](https://nvd.nist.gov/products/cpe)","examples":["cpe:2.3:a:acme:component_framework:-:*:*:*:*:*:*:*"]},"purl":{"type":"string","title":"Component Package URL (purl)","description":"Specifies the package-url (purl). The purl, if specified, MUST be valid and conform to the specification defined at: [https://github.com/package-url/purl-spec](https://github.com/package-url/purl-spec)","examples":["pkg:maven/com.acme/tomcat-catalina@9.0.14?packaging=jar"]},"swid":{"$ref":"#/definitions/swid","title":"SWID Tag","description":"Specifies metadata and content for [ISO-IEC 19770-2 Software Identification (SWID) Tags](https://www.iso.org/standard/65666.html)."},"modified":{"type":"boolean","title":"Component Modified From Original","description":"[Deprecated] - DO NOT USE. This will be removed in a future version. Use the pedigree element instead to supply information on exactly how the component was modified. A boolean value indicating if the component has been modified from the original. A value of true indicates the component is a derivative of the original. A value of false indicates the component has not been modified from the original."},"pedigree":{"type":"object","title":"Component Pedigree","description":"Component pedigree is a way to document complex supply chain scenarios where components are created, distributed, modified, redistributed, combined with other components, etc. Pedigree supports viewing this complex chain from the beginning, the end, or anywhere in the middle. It also provides a way to document variants where the exact relation may not be known.","additionalProperties":false,"properties":{"ancestors":{"type":"array","title":"Ancestors","description":"Describes zero or more components in which a component is derived from. This is commonly used to describe forks from existing projects where the forked version contains a ancestor node containing the original component it was forked from. For example, Component A is the original component. Component B is the component being used and documented in the BOM. However, Component B contains a pedigree node with a single ancestor documenting Component A - the original component from which Component B is derived from.","additionalItems":false,"items":{"$ref":"#/definitions/component"}},"descendants":{"type":"array","title":"Descendants","description":"Descendants are the exact opposite of ancestors. This provides a way to document all forks (and their forks) of an original or root component.","additionalItems":false,"items":{"$ref":"#/definitions/component"}},"variants":{"type":"array","title":"Variants","description":"Variants describe relations where the relationship between the components are not known. For example, if Component A contains nearly identical code to Component B. They are both related, but it is unclear if one is derived from the other, or if they share a common ancestor.","additionalItems":false,"items":{"$ref":"#/definitions/component"}},"commits":{"type":"array","title":"Commits","description":"A list of zero or more commits which provide a trail describing how the component deviates from an ancestor, descendant, or variant.","additionalItems":false,"items":{"$ref":"#/definitions/commit"}},"patches":{"type":"array","title":"Patches","description":">A list of zero or more patches describing how the component deviates from an ancestor, descendant, or variant. Patches may be complimentary to commits or may be used in place of commits.","additionalItems":false,"items":{"$ref":"#/definitions/patch"}},"notes":{"type":"string","title":"Notes","description":"Notes, observations, and other non-structured commentary describing the components pedigree."}}},"externalReferences":{"type":"array","additionalItems":false,"items":{"$ref":"#/definitions/externalReference"},"title":"External References","description":"External references provide a way to document systems, sites, and information that may be relevant but which are not included with the BOM."},"components":{"type":"array","additionalItems":false,"items":{"$ref":"#/definitions/component"},"uniqueItems":true,"title":"Components","description":"A list of software and hardware components included in the parent component. This is not a dependency tree. It provides a way to specify a hierarchical representation of component assemblies, similar to system &#8594; subsystem &#8594; parts assembly in physical supply chains."},"evidence":{"$ref":"#/definitions/componentEvidence","title":"Evidence","description":"Provides the ability to document evidence collected through various forms of extraction or analysis."},"releaseNotes":{"$ref":"#/definitions/releaseNotes","title":"Release notes","description":"Specifies optional release notes."},"properties":{"type":"array","title":"Properties","description":"Provides the ability to document properties in a name-value store. This provides flexibility to include data not officially supported in the standard without having to use additional namespaces or create extensions. Unlike key-value stores, properties support duplicate names, each potentially having different values. Property names of interest to the general public are encouraged to be registered in the [CycloneDX Property Taxonomy](https://github.com/CycloneDX/cyclonedx-property-taxonomy). Formal registration is OPTIONAL.","additionalItems":false,"items":{"$ref":"#/definitions/property"}},"signature":{"$ref":"#/definitions/signature","title":"Signature","description":"Enveloped signature in [JSON Signature Format (JSF)](https://cyberphone.github.io/doc/security/jsf.html)."}}};const schema20 = {"$comment":"Identifier-DataType for interlinked elements.","type":"string"};const pattern2 = new RegExp("^[-+a-z0-9.]+/[-+a-z0-9.]+$", "u");const schema21 = {"type":"object","title":"Organizational Entity Object","description":"","additionalProperties":false,"properties":{"name":{"type":"string","title":"Name","description":"The name of the organization","examples":["Example Inc."]},"url":{"type":"array","items":{"type":"string","format":"iri-reference"},"title":"URL","description":"The URL of the organization. Multiple URLs are allowed.","examples":["https://example.com"]},"contact":{"type":"array","title":"Contact","description":"A contact at the organization. Multiple contacts are allowed.","additionalItems":false,"items":{"$ref":"#/definitions/organizationalContact"}}}};function validate20(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){const _errs1 = errors;for(const key0 in data){if(!(((key0 === "name") || (key0 === "url")) || (key0 === "contact"))){validate20.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.name !== undefined){const _errs2 = errors;if(typeof data.name !== "string"){validate20.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.url !== undefined){let data1 = data.url;const _errs4 = errors;if(errors === _errs4){if(Array.isArray(data1)){var valid1 = true;const len0 = data1.length;for(let i0=0; i0<len0; i0++){let data2 = data1[i0];const _errs6 = errors;if(errors === _errs6){if(errors === _errs6){if(typeof data2 === "string"){if(!(formats2(data2))){validate20.errors = [{instancePath:instancePath+"/url/" + i0,schemaPath:"#/properties/url/items/format",keyword:"format",params:{format: "iri-reference"},message:"must match format \""+"iri-reference"+"\""}];return false;}}else {validate20.errors = [{instancePath:instancePath+"/url/" + i0,schemaPath:"#/properties/url/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid1 = _errs6 === errors;if(!valid1){break;}}}else {validate20.errors = [{instancePath:instancePath+"/url",schemaPath:"#/properties/url/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data.contact !== undefined){let data3 = data.contact;const _errs8 = errors;if(errors === _errs8){if(Array.isArray(data3)){var valid2 = true;const len1 = data3.length;for(let i1=0; i1<len1; i1++){let data4 = data3[i1];const _errs10 = errors;const _errs11 = errors;if(errors === _errs11){if(data4 && typeof data4 == "object" && !Array.isArray(data4)){const _errs13 = errors;for(const key1 in data4){if(!(((key1 === "name") || (key1 === "email")) || (key1 === "phone"))){validate20.errors = [{instancePath:instancePath+"/contact/" + i1,schemaPath:"#/definitions/organizationalContact/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"}];return false;break;}}if(_errs13 === errors){if(data4.name !== undefined){const _errs14 = errors;if(typeof data4.name !== "string"){validate20.errors = [{instancePath:instancePath+"/contact/" + i1+"/name",schemaPath:"#/definitions/organizationalContact/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid4 = _errs14 === errors;}else {var valid4 = true;}if(valid4){if(data4.email !== undefined){let data6 = data4.email;const _errs16 = errors;if(errors === _errs16){if(errors === _errs16){if(typeof data6 === "string"){if(!(formats4(data6))){validate20.errors = [{instancePath:instancePath+"/contact/" + i1+"/email",schemaPath:"#/definitions/organizationalContact/properties/email/format",keyword:"format",params:{format: "idn-email"},message:"must match format \""+"idn-email"+"\""}];return false;}}else {validate20.errors = [{instancePath:instancePath+"/contact/" + i1+"/email",schemaPath:"#/definitions/organizationalContact/properties/email/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid4 = _errs16 === errors;}else {var valid4 = true;}if(valid4){if(data4.phone !== undefined){const _errs18 = errors;if(typeof data4.phone !== "string"){validate20.errors = [{instancePath:instancePath+"/contact/" + i1+"/phone",schemaPath:"#/definitions/organizationalContact/properties/phone/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid4 = _errs18 === errors;}else {var valid4 = true;}}}}}else {validate20.errors = [{instancePath:instancePath+"/contact/" + i1,schemaPath:"#/definitions/organizationalContact/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid2 = _errs10 === errors;if(!valid2){break;}}}else {validate20.errors = [{instancePath:instancePath+"/contact",schemaPath:"#/properties/contact/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs8 === errors;}else {var valid0 = true;}}}}}else {validate20.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate20.errors = vErrors;return errors === 0;}const schema23 = {"type":"object","title":"License(s)","additionalProperties":false,"properties":{"license":{"$ref":"#/definitions/license"},"expression":{"type":"string","title":"SPDX License Expression","examples":["Apache-2.0 AND (MIT OR GPL-2.0-only)","GPL-3.0-only WITH Classpath-exception-2.0"]}},"oneOf":[{"required":["license"]},{"required":["expression"]}]};const schema24 = {"type":"object","title":"License Object","oneOf":[{"required":["id"]},{"required":["name"]}],"additionalProperties":false,"properties":{"id":{"$ref":"spdx.SNAPSHOT.schema.json","title":"License ID (SPDX)","description":"A valid SPDX license ID","examples":["Apache-2.0"]},"name":{"type":"string","title":"License Name","description":"If SPDX does not define the license used, this field may be used to provide the license name","examples":["Acme Software License"]},"text":{"title":"License text","description":"An optional way to include the textual content of a license.","$ref":"#/definitions/attachment"},"url":{"type":"string","title":"License URL","description":"The URL to the license file. If specified, a 'license' externalReference should also be specified for completeness","examples":["https://www.apache.org/licenses/LICENSE-2.0.txt"],"format":"iri-reference"}}};const schema25 = {"$schema":"http://json-schema.org/draft-07/schema#","$id":"http://cyclonedx.org/schema/spdx.schema.json","$comment":"v1.0-3.17","type":"string","enum":["CC-BY-NC-ND-2.0","SGI-B-2.0","LPPL-1.3c","NIST-PD-fallback","libtiff","XSkat","PDDL-1.0","KiCad-libraries-exception","CC-BY-NC-SA-1.0","GFDL-1.1-no-invariants-only","Xerox","LPPL-1.1","VOSTROM","UCL-1.0","ADSL","OSL-2.0","AAL","FDK-AAC","W3C-20150513","AFL-1.1","W3C","Sleepycat","CECILL-1.1","mpich2","SISSL","NLOD-1.0","ANTLR-PD","GPL-3.0-only","gnuplot","NLOD-2.0","BSD-3-Clause-Open-MPI","LiLiQ-P-1.1","BSD-3-Clause-Clear","FSFUL","CC-BY-NC-SA-2.0-UK","CERN-OHL-S-2.0","Spencer-94","CERN-OHL-1.2","GFDL-1.1-or-later","AGPL-1.0-or-later","Wsuipa","AML","BSD-2-Clause","DSDP","CC-BY-2.5","MIT-CMU","Beerware","Sendmail","TU-Berlin-1.0","CNRI-Jython","mplus","CPOL-1.02","BSD-3-Clause-No-Nuclear-License-2014","ISC","CC-BY-SA-4.0","Eurosym","LGPL-3.0-only","OLDAP-1.3","GFDL-1.1-invariants-or-later","Glulxe","SimPL-2.0","CDLA-Permissive-2.0","GPL-2.0-with-font-exception","OGL-UK-2.0","CC-BY-SA-3.0-DE","CC-BY-ND-1.0","GFDL-1.1","CC-BY-4.0","OpenSSL","TU-Berlin-2.0","DOC","GFDL-1.2-no-invariants-or-later","QPL-1.0","OLDAP-2.8","OML","OLDAP-2.7","NIST-PD","Bitstream-Vera","GFDL-1.2-or-later","OFL-1.1-RFN","Bahyph","Barr","COIL-1.0","GFDL-1.3","CECILL-B","JPNIC","Zed","ICU","CC-BY-NC-SA-2.5","CC-BY-ND-3.0-DE","bzip2-1.0.5","SPL-1.0","YPL-1.0","OSET-PL-2.1","Noweb","RPSL-1.0","BSD-3-Clause-LBNL","CDLA-Sharing-1.0","CECILL-1.0","AMPAS","APAFML","CC-BY-ND-3.0","D-FSL-1.0","CC-BY-NC-3.0","libpng-2.0","PolyForm-Noncommercial-1.0.0","dvipdfm","GFDL-1.3-or-later","OGTSL","NPL-1.1","GPL-3.0","CERN-OHL-P-2.0","BlueOak-1.0.0","AGPL-3.0-or-later","blessing","ImageMagick","APSL-2.0","MIT-advertising","curl","CC0-1.0","Zimbra-1.4","SSPL-1.0","psutils","CC-BY-SA-2.0-UK","PSF-2.0","Net-SNMP","NAIST-2003","GFDL-1.2-invariants-or-later","SGI-B-1.0","NBPL-1.0","GFDL-1.2-invariants-only","W3C-19980720","OFL-1.0-no-RFN","NetCDF","TMate","NOSL","CNRI-Python-GPL-Compatible","BSD-1-Clause","CC-BY-NC-SA-3.0-DE","BSD-3-Clause-Modification","GLWTPL","GFDL-1.3-only","OLDAP-2.2","CC-BY-ND-4.0","CC-BY-NC-ND-3.0-DE","EUPL-1.0","Linux-OpenIB","LGPL-2.0-or-later","OSL-1.1","Spencer-86","LGPL-2.0","CC-PDDC","CC-BY-NC-ND-3.0","CDL-1.0","Elastic-2.0","CC-BY-2.0","BSD-3-Clause-No-Military-License","IJG","LPPL-1.3a","SAX-PD","BitTorrent-1.0","OLDAP-2.0","Giftware","C-UDA-1.0","LGPL-2.0+","Rdisc","GPL-2.0-with-classpath-exception","CC-BY-3.0-US","CDDL-1.0","Xnet","CPL-1.0","LGPL-3.0-or-later","NASA-1.3","BUSL-1.1","etalab-2.0","MIT-open-group","OLDAP-1.4","GFDL-1.1-invariants-only","RPL-1.1","CC-BY-NC-ND-2.5","FSFULLR","Saxpath","NTP-0","SISSL-1.2","GPL-3.0-or-later","Apache-1.1","CC-BY-SA-2.1-JP","AGPL-3.0-only","GPL-2.0-with-autoconf-exception","Artistic-2.0","App-s2p","Unicode-DFS-2015","diffmark","SNIA","CC-BY-SA-2.5","Linux-man-pages-copyleft","HPND-sell-variant","ZPL-2.1","BSD-4-Clause-UC","LAL-1.2","AGPL-1.0-only","MIT-enna","Condor-1.1","Naumen","GFDL-1.3-no-invariants-or-later","RPL-1.5","PolyForm-Small-Business-1.0.0","EFL-1.0","MirOS","CC-BY-2.5-AU","Afmparse","MPL-2.0-no-copyleft-exception","LiLiQ-Rplus-1.1","AFL-1.2","OSL-1.0","GPL-1.0-only","APSL-1.0","OGL-Canada-2.0","CPAL-1.0","Latex2e","Zend-2.0","Unlicense","xpp","CC-BY-NC-1.0","GPL-3.0-with-autoconf-exception","CC-BY-NC-SA-3.0","TCP-wrappers","SCEA","SSH-short","CC-BY-3.0-NL","SchemeReport","CC-BY-3.0","MPL-2.0","Unicode-TOU","CC-BY-NC-ND-1.0","Entessa","BSD-3-Clause-No-Nuclear-License","SWL","GFDL-1.2-no-invariants-only","Parity-7.0.0","OLDAP-2.2.1","SGI-B-1.1","FTL","OLDAP-2.4","CC-BY-NC-4.0","bzip2-1.0.6","copyleft-next-0.3.0","MakeIndex","NRL","GFDL-1.3-invariants-or-later","CC-BY-NC-2.0","SugarCRM-1.1.3","AFL-2.1","GPL-2.0-only","GFDL-1.3-invariants-only","TORQUE-1.1","Ruby","X11","Borceux","Libpng","X11-distribute-modifications-variant","Frameworx-1.0","NCGL-UK-2.0","CECILL-2.1","CC-BY-3.0-AT","CNRI-Python","NCSA","gSOAP-1.3b","EUPL-1.1","AMDPLPA","Imlib2","CDDL-1.1","WTFPL","LPL-1.0","EPL-1.0","BSD-3-Clause-Attribution","OSL-3.0","RHeCos-1.1","PHP-3.0","BSD-Protection","CC-BY-NC-3.0-DE","APL-1.0","EUDatagrid","GPL-1.0","SHL-0.5","CC-BY-SA-2.0","CC-BY-SA-3.0-AT","CC-BY-NC-SA-3.0-IGO","Adobe-2006","Newsletr","Nunit","Multics","OGL-UK-1.0","Vim","eCos-2.0","Zimbra-1.3","eGenix","IBM-pibs","BitTorrent-1.1","OFL-1.1-no-RFN","psfrag","CC-BY-ND-2.0","SHL-0.51","FreeBSD-DOC","Python-2.0","Mup","BSD-4-Clause-Shortened","CC-BY-NC-SA-4.0","HPND","OLDAP-2.6","MPL-1.1","GPL-2.0-with-GCC-exception","HaskellReport","ECL-1.0","LGPL-2.1-or-later","OFL-1.0","APSL-1.1","MITNFA","CECILL-2.0","Crossword","Aladdin","Baekmuk","XFree86-1.1","GPL-1.0-or-later","CERN-OHL-W-2.0","CC-BY-SA-1.0","NTP","PHP-3.01","OCLC-2.0","CC-BY-3.0-DE","CC-BY-NC-2.5","Zlib","CATOSL-1.1","LGPL-3.0+","CAL-1.0","NPL-1.0","SMLNJ","GPL-2.0+","OLDAP-2.5","JasPer-2.0","GPL-2.0-or-later","BSD-2-Clause-Patent","MS-RL","CUA-OPL-1.0","IPA","NLPL","O-UDA-1.0","MIT-Modern-Variant","OLDAP-1.2","BSD-2-Clause-FreeBSD","Info-ZIP","CC-BY-NC-SA-2.0-FR","0BSD","Unicode-DFS-2016","OFL-1.0-RFN","Intel","AFL-2.0","GL2PS","TAPR-OHL-1.0","Apache-1.0","MTLL","Motosoto","RSA-MD","Community-Spec-1.0","ODC-By-1.0","zlib-acknowledgement","DL-DE-BY-2.0","VSL-1.0","LiLiQ-R-1.1","OPL-1.0","GPL-3.0+","MulanPSL-2.0","APSL-1.2","OGDL-Taiwan-1.0","RSCPL","OGC-1.0","EFL-2.0","CAL-1.0-Combined-Work-Exception","MS-PL","Plexus","Sendmail-8.23","Cube","JSON","EUPL-1.2","Adobe-Glyph","FreeImage","Watcom-1.0","Jam","Hippocratic-2.1","OLDAP-2.0.1","CC-BY-NC-SA-2.0","Nokia","OCCT-PL","ErlPL-1.1","TOSL","OSL-2.1","ClArtistic","xinetd","GPL-3.0-with-GCC-exception","ODbL-1.0","MIT","LGPL-2.1+","LGPL-2.1-only","CrystalStacker","ECL-2.0","LPPL-1.0","iMatix","CC-BY-NC-ND-3.0-IGO","BSD-Source-Code","Parity-6.0.0","TCL","Arphic-1999","CC-BY-SA-3.0","Caldera","AGPL-1.0","IPL-1.0","LAL-1.3","EPICS","NGPL","DRL-1.0","BSD-2-Clause-NetBSD","ZPL-1.1","GD","LPPL-1.2","Dotseqn","Spencer-99","OLDAP-2.3","YPL-1.1","Fair","Qhull","GFDL-1.1-no-invariants-or-later","CECILL-C","MulanPSL-1.0","OLDAP-1.1","OLDAP-2.1","LPL-1.02","UPL-1.0","Abstyles","ZPL-2.0","MIT-0","LGPL-2.0-only","GFDL-1.3-no-invariants-only","AGPL-3.0","EPL-2.0","AFL-3.0","CDLA-Permissive-1.0","Artistic-1.0","CC-BY-NC-ND-4.0","HTMLTIDY","Glide","FSFAP","LGPLLR","OGL-UK-3.0","GFDL-1.2","SSH-OpenSSH","GFDL-1.1-only","MIT-feh","MPL-1.0","PostgreSQL","OLDAP-2.2.2","SMPPL","OFL-1.1","Leptonica","CERN-OHL-1.1","BSD-3-Clause-No-Nuclear-Warranty","CC-BY-ND-2.5","CC-BY-1.0","GFDL-1.2-only","OPUBL-1.0","libselinux-1.0","BSD-3-Clause","ANTLR-PD-fallback","copyleft-next-0.3.1","GPL-1.0+","wxWindows","LGPL-3.0","LGPL-2.1","StandardML-NJ","BSD-4-Clause","GPL-2.0-with-bison-exception","Apache-2.0","Artistic-1.0-cl8","GPL-2.0","Intel-ACPI","BSL-1.0","Artistic-1.0-Perl","BSD-2-Clause-Views","Interbase-1.0","NPOSL-3.0","FLTK-exception","Bootloader-exception","WxWindows-exception-3.1","Linux-syscall-note","Qt-LGPL-exception-1.1","LLVM-exception","PS-or-PDF-font-exception-20170817","GCC-exception-3.1","Autoconf-exception-3.0","LGPL-3.0-linking-exception","GCC-exception-2.0","Bison-exception-2.2","openvpn-openssl-exception","Libtool-exception","Autoconf-exception-2.0","GPL-3.0-linking-source-exception","GPL-CC-1.0","OCaml-LGPL-linking-exception","Universal-FOSS-exception-1.0","i2p-gpl-java-exception","CLISP-exception-2.0","OCCT-exception-1.0","Qwt-exception-1.0","gnu-javamail-exception","u-boot-exception-2.0","freertos-exception-2.0","Qt-GPL-exception-1.0","OpenJDK-assembly-exception-1.0","SHL-2.1","mif-exception","Fawkes-Runtime-exception","Swift-exception","GPL-3.0-linking-exception","SHL-2.0","Classpath-exception-2.0","LZMA-exception","Font-exception-2.0","Nokia-Qt-exception-1.1","DigiRule-FOSS-exception","eCos-exception-2.0","389-exception"]};const schema26 = {"type":"object","title":"Attachment","description":"Specifies the metadata and content for an attachment.","required":["content"],"additionalProperties":false,"properties":{"contentType":{"type":"string","title":"Content-Type","description":"Specifies the content type of the text. Defaults to text/plain if not specified.","default":"text/plain"},"encoding":{"type":"string","title":"Encoding","description":"Specifies the optional encoding the text is represented in.","enum":["base64"]},"content":{"type":"string","title":"Attachment Text","description":"The attachment data. Proactive controls such as input validation and sanitization should be employed to prevent misuse of attachment text."}}};function validate24(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;const _errs1 = errors;let valid0 = false;let passing0 = null;const _errs2 = errors;if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.id === undefined) && (missing0 = "id")){const err0 = {instancePath,schemaPath:"#/oneOf/0/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"};if(vErrors === null){vErrors = [err0];}else {vErrors.push(err0);}errors++;}}var _valid0 = _errs2 === errors;if(_valid0){valid0 = true;passing0 = 0;}const _errs3 = errors;if(data && typeof data == "object" && !Array.isArray(data)){let missing1;if((data.name === undefined) && (missing1 = "name")){const err1 = {instancePath,schemaPath:"#/oneOf/1/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"};if(vErrors === null){vErrors = [err1];}else {vErrors.push(err1);}errors++;}}var _valid0 = _errs3 === errors;if(_valid0 && valid0){valid0 = false;passing0 = [passing0, 1];}else {if(_valid0){valid0 = true;passing0 = 1;}}if(!valid0){const err2 = {instancePath,schemaPath:"#/oneOf",keyword:"oneOf",params:{passingSchemas: passing0},message:"must match exactly one schema in oneOf"};if(vErrors === null){vErrors = [err2];}else {vErrors.push(err2);}errors++;validate24.errors = vErrors;return false;}else {errors = _errs1;if(vErrors !== null){if(_errs1){vErrors.length = _errs1;}else {vErrors = null;}}}if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){const _errs4 = errors;for(const key0 in data){if(!((((key0 === "id") || (key0 === "name")) || (key0 === "text")) || (key0 === "url"))){validate24.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs4 === errors){if(data.id !== undefined){let data0 = data.id;const _errs5 = errors;if(typeof data0 !== "string"){validate24.errors = [{instancePath:instancePath+"/id",schemaPath:"spdx.SNAPSHOT.schema.json/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}let valid3;valid3 = false;for(const v0 of schema25.enum){if(func0(data0, v0)){valid3 = true;break;}}if(!valid3){validate24.errors = [{instancePath:instancePath+"/id",schemaPath:"spdx.SNAPSHOT.schema.json/enum",keyword:"enum",params:{allowedValues: schema25.enum},message:"must be equal to one of the allowed values"}];return false;}var valid1 = _errs5 === errors;}else {var valid1 = true;}if(valid1){if(data.name !== undefined){const _errs9 = errors;if(typeof data.name !== "string"){validate24.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid1 = _errs9 === errors;}else {var valid1 = true;}if(valid1){if(data.text !== undefined){let data2 = data.text;const _errs11 = errors;const _errs12 = errors;if(errors === _errs12){if(data2 && typeof data2 == "object" && !Array.isArray(data2)){let missing2;if((data2.content === undefined) && (missing2 = "content")){validate24.errors = [{instancePath:instancePath+"/text",schemaPath:"#/definitions/attachment/required",keyword:"required",params:{missingProperty: missing2},message:"must have required property '"+missing2+"'"}];return false;}else {const _errs14 = errors;for(const key1 in data2){if(!(((key1 === "contentType") || (key1 === "encoding")) || (key1 === "content"))){validate24.errors = [{instancePath:instancePath+"/text",schemaPath:"#/definitions/attachment/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"}];return false;break;}}if(_errs14 === errors){if(data2.contentType !== undefined){const _errs15 = errors;if(typeof data2.contentType !== "string"){validate24.errors = [{instancePath:instancePath+"/text/contentType",schemaPath:"#/definitions/attachment/properties/contentType/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid5 = _errs15 === errors;}else {var valid5 = true;}if(valid5){if(data2.encoding !== undefined){let data4 = data2.encoding;const _errs17 = errors;if(typeof data4 !== "string"){validate24.errors = [{instancePath:instancePath+"/text/encoding",schemaPath:"#/definitions/attachment/properties/encoding/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!(data4 === "base64")){validate24.errors = [{instancePath:instancePath+"/text/encoding",schemaPath:"#/definitions/attachment/properties/encoding/enum",keyword:"enum",params:{allowedValues: schema26.properties.encoding.enum},message:"must be equal to one of the allowed values"}];return false;}var valid5 = _errs17 === errors;}else {var valid5 = true;}if(valid5){if(data2.content !== undefined){const _errs19 = errors;if(typeof data2.content !== "string"){validate24.errors = [{instancePath:instancePath+"/text/content",schemaPath:"#/definitions/attachment/properties/content/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid5 = _errs19 === errors;}else {var valid5 = true;}}}}}}else {validate24.errors = [{instancePath:instancePath+"/text",schemaPath:"#/definitions/attachment/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid1 = _errs11 === errors;}else {var valid1 = true;}if(valid1){if(data.url !== undefined){let data6 = data.url;const _errs21 = errors;if(errors === _errs21){if(errors === _errs21){if(typeof data6 === "string"){if(!(formats2(data6))){validate24.errors = [{instancePath:instancePath+"/url",schemaPath:"#/properties/url/format",keyword:"format",params:{format: "iri-reference"},message:"must match format \""+"iri-reference"+"\""}];return false;}}else {validate24.errors = [{instancePath:instancePath+"/url",schemaPath:"#/properties/url/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid1 = _errs21 === errors;}else {var valid1 = true;}}}}}}else {validate24.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate24.errors = vErrors;return errors === 0;}function validate23(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;const _errs1 = errors;let valid0 = false;let passing0 = null;const _errs2 = errors;if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.license === undefined) && (missing0 = "license")){const err0 = {instancePath,schemaPath:"#/oneOf/0/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"};if(vErrors === null){vErrors = [err0];}else {vErrors.push(err0);}errors++;}}var _valid0 = _errs2 === errors;if(_valid0){valid0 = true;passing0 = 0;}const _errs3 = errors;if(data && typeof data == "object" && !Array.isArray(data)){let missing1;if((data.expression === undefined) && (missing1 = "expression")){const err1 = {instancePath,schemaPath:"#/oneOf/1/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"};if(vErrors === null){vErrors = [err1];}else {vErrors.push(err1);}errors++;}}var _valid0 = _errs3 === errors;if(_valid0 && valid0){valid0 = false;passing0 = [passing0, 1];}else {if(_valid0){valid0 = true;passing0 = 1;}}if(!valid0){const err2 = {instancePath,schemaPath:"#/oneOf",keyword:"oneOf",params:{passingSchemas: passing0},message:"must match exactly one schema in oneOf"};if(vErrors === null){vErrors = [err2];}else {vErrors.push(err2);}errors++;validate23.errors = vErrors;return false;}else {errors = _errs1;if(vErrors !== null){if(_errs1){vErrors.length = _errs1;}else {vErrors = null;}}}if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){const _errs4 = errors;for(const key0 in data){if(!((key0 === "license") || (key0 === "expression"))){validate23.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs4 === errors){if(data.license !== undefined){const _errs5 = errors;if(!(validate24(data.license, {instancePath:instancePath+"/license",parentData:data,parentDataProperty:"license",rootData}))){vErrors = vErrors === null ? validate24.errors : vErrors.concat(validate24.errors);errors = vErrors.length;}var valid1 = _errs5 === errors;}else {var valid1 = true;}if(valid1){if(data.expression !== undefined){const _errs6 = errors;if(typeof data.expression !== "string"){validate23.errors = [{instancePath:instancePath+"/expression",schemaPath:"#/properties/expression/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid1 = _errs6 === errors;}else {var valid1 = true;}}}}else {validate23.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate23.errors = vErrors;return errors === 0;}const schema27 = {"type":"object","title":"SWID Tag","description":"Specifies metadata and content for ISO-IEC 19770-2 Software Identification (SWID) Tags.","required":["tagId","name"],"additionalProperties":false,"properties":{"tagId":{"type":"string","title":"Tag ID","description":"Maps to the tagId of a SoftwareIdentity."},"name":{"type":"string","title":"Name","description":"Maps to the name of a SoftwareIdentity."},"version":{"type":"string","title":"Version","default":"0.0","description":"Maps to the version of a SoftwareIdentity."},"tagVersion":{"type":"integer","title":"Tag Version","default":0,"description":"Maps to the tagVersion of a SoftwareIdentity."},"patch":{"type":"boolean","title":"Patch","default":false,"description":"Maps to the patch of a SoftwareIdentity."},"text":{"title":"Attachment text","description":"Specifies the metadata and content of the SWID tag.","$ref":"#/definitions/attachment"},"url":{"type":"string","title":"URL","description":"The URL to the SWID file.","format":"iri-reference"}}};function validate27(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if(((data.tagId === undefined) && (missing0 = "tagId")) || ((data.name === undefined) && (missing0 = "name"))){validate27.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key0 in data){if(!(((((((key0 === "tagId") || (key0 === "name")) || (key0 === "version")) || (key0 === "tagVersion")) || (key0 === "patch")) || (key0 === "text")) || (key0 === "url"))){validate27.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.tagId !== undefined){const _errs2 = errors;if(typeof data.tagId !== "string"){validate27.errors = [{instancePath:instancePath+"/tagId",schemaPath:"#/properties/tagId/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.name !== undefined){const _errs4 = errors;if(typeof data.name !== "string"){validate27.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data.version !== undefined){const _errs6 = errors;if(typeof data.version !== "string"){validate27.errors = [{instancePath:instancePath+"/version",schemaPath:"#/properties/version/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs6 === errors;}else {var valid0 = true;}if(valid0){if(data.tagVersion !== undefined){let data3 = data.tagVersion;const _errs8 = errors;if(!((typeof data3 == "number") && (!(data3 % 1) && !isNaN(data3)))){validate27.errors = [{instancePath:instancePath+"/tagVersion",schemaPath:"#/properties/tagVersion/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid0 = _errs8 === errors;}else {var valid0 = true;}if(valid0){if(data.patch !== undefined){const _errs10 = errors;if(typeof data.patch !== "boolean"){validate27.errors = [{instancePath:instancePath+"/patch",schemaPath:"#/properties/patch/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs10 === errors;}else {var valid0 = true;}if(valid0){if(data.text !== undefined){let data5 = data.text;const _errs12 = errors;const _errs13 = errors;if(errors === _errs13){if(data5 && typeof data5 == "object" && !Array.isArray(data5)){let missing1;if((data5.content === undefined) && (missing1 = "content")){validate27.errors = [{instancePath:instancePath+"/text",schemaPath:"#/definitions/attachment/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {const _errs15 = errors;for(const key1 in data5){if(!(((key1 === "contentType") || (key1 === "encoding")) || (key1 === "content"))){validate27.errors = [{instancePath:instancePath+"/text",schemaPath:"#/definitions/attachment/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"}];return false;break;}}if(_errs15 === errors){if(data5.contentType !== undefined){const _errs16 = errors;if(typeof data5.contentType !== "string"){validate27.errors = [{instancePath:instancePath+"/text/contentType",schemaPath:"#/definitions/attachment/properties/contentType/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs16 === errors;}else {var valid2 = true;}if(valid2){if(data5.encoding !== undefined){let data7 = data5.encoding;const _errs18 = errors;if(typeof data7 !== "string"){validate27.errors = [{instancePath:instancePath+"/text/encoding",schemaPath:"#/definitions/attachment/properties/encoding/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!(data7 === "base64")){validate27.errors = [{instancePath:instancePath+"/text/encoding",schemaPath:"#/definitions/attachment/properties/encoding/enum",keyword:"enum",params:{allowedValues: schema26.properties.encoding.enum},message:"must be equal to one of the allowed values"}];return false;}var valid2 = _errs18 === errors;}else {var valid2 = true;}if(valid2){if(data5.content !== undefined){const _errs20 = errors;if(typeof data5.content !== "string"){validate27.errors = [{instancePath:instancePath+"/text/content",schemaPath:"#/definitions/attachment/properties/content/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs20 === errors;}else {var valid2 = true;}}}}}}else {validate27.errors = [{instancePath:instancePath+"/text",schemaPath:"#/definitions/attachment/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs12 === errors;}else {var valid0 = true;}if(valid0){if(data.url !== undefined){let data9 = data.url;const _errs22 = errors;if(errors === _errs22){if(errors === _errs22){if(typeof data9 === "string"){if(!(formats2(data9))){validate27.errors = [{instancePath:instancePath+"/url",schemaPath:"#/properties/url/format",keyword:"format",params:{format: "iri-reference"},message:"must match format \""+"iri-reference"+"\""}];return false;}}else {validate27.errors = [{instancePath:instancePath+"/url",schemaPath:"#/properties/url/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs22 === errors;}else {var valid0 = true;}}}}}}}}}}else {validate27.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate27.errors = vErrors;return errors === 0;}const schema29 = {"type":"object","title":"Commit","description":"Specifies an individual commit","additionalProperties":false,"properties":{"uid":{"type":"string","title":"UID","description":"A unique identifier of the commit. This may be version control specific. For example, Subversion uses revision numbers whereas git uses commit hashes."},"url":{"type":"string","title":"URL","description":"The URL to the commit. This URL will typically point to a commit in a version control system.","format":"iri-reference"},"author":{"title":"Author","description":"The author who created the changes in the commit","$ref":"#/definitions/identifiableAction"},"committer":{"title":"Committer","description":"The person who committed or pushed the commit","$ref":"#/definitions/identifiableAction"},"message":{"type":"string","title":"Message","description":"The text description of the contents of the commit"}}};const schema30 = {"type":"object","title":"Identifiable Action","description":"Specifies an individual commit","additionalProperties":false,"properties":{"timestamp":{"type":"string","format":"date-time","title":"Timestamp","description":"The timestamp in which the action occurred"},"name":{"type":"string","title":"Name","description":"The name of the individual who performed the action"},"email":{"type":"string","format":"idn-email","title":"E-mail","description":"The email address of the individual who performed the action"}}};function validate29(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){const _errs1 = errors;for(const key0 in data){if(!(((((key0 === "uid") || (key0 === "url")) || (key0 === "author")) || (key0 === "committer")) || (key0 === "message"))){validate29.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.uid !== undefined){const _errs2 = errors;if(typeof data.uid !== "string"){validate29.errors = [{instancePath:instancePath+"/uid",schemaPath:"#/properties/uid/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.url !== undefined){let data1 = data.url;const _errs4 = errors;if(errors === _errs4){if(errors === _errs4){if(typeof data1 === "string"){if(!(formats2(data1))){validate29.errors = [{instancePath:instancePath+"/url",schemaPath:"#/properties/url/format",keyword:"format",params:{format: "iri-reference"},message:"must match format \""+"iri-reference"+"\""}];return false;}}else {validate29.errors = [{instancePath:instancePath+"/url",schemaPath:"#/properties/url/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data.author !== undefined){let data2 = data.author;const _errs6 = errors;const _errs7 = errors;if(errors === _errs7){if(data2 && typeof data2 == "object" && !Array.isArray(data2)){const _errs9 = errors;for(const key1 in data2){if(!(((key1 === "timestamp") || (key1 === "name")) || (key1 === "email"))){validate29.errors = [{instancePath:instancePath+"/author",schemaPath:"#/definitions/identifiableAction/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"}];return false;break;}}if(_errs9 === errors){if(data2.timestamp !== undefined){let data3 = data2.timestamp;const _errs10 = errors;if(errors === _errs10){if(errors === _errs10){if(typeof data3 === "string"){if(!(formats0.validate(data3))){validate29.errors = [{instancePath:instancePath+"/author/timestamp",schemaPath:"#/definitions/identifiableAction/properties/timestamp/format",keyword:"format",params:{format: "date-time"},message:"must match format \""+"date-time"+"\""}];return false;}}else {validate29.errors = [{instancePath:instancePath+"/author/timestamp",schemaPath:"#/definitions/identifiableAction/properties/timestamp/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid2 = _errs10 === errors;}else {var valid2 = true;}if(valid2){if(data2.name !== undefined){const _errs12 = errors;if(typeof data2.name !== "string"){validate29.errors = [{instancePath:instancePath+"/author/name",schemaPath:"#/definitions/identifiableAction/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs12 === errors;}else {var valid2 = true;}if(valid2){if(data2.email !== undefined){let data5 = data2.email;const _errs14 = errors;if(errors === _errs14){if(errors === _errs14){if(typeof data5 === "string"){if(!(formats4(data5))){validate29.errors = [{instancePath:instancePath+"/author/email",schemaPath:"#/definitions/identifiableAction/properties/email/format",keyword:"format",params:{format: "idn-email"},message:"must match format \""+"idn-email"+"\""}];return false;}}else {validate29.errors = [{instancePath:instancePath+"/author/email",schemaPath:"#/definitions/identifiableAction/properties/email/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid2 = _errs14 === errors;}else {var valid2 = true;}}}}}else {validate29.errors = [{instancePath:instancePath+"/author",schemaPath:"#/definitions/identifiableAction/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs6 === errors;}else {var valid0 = true;}if(valid0){if(data.committer !== undefined){let data6 = data.committer;const _errs16 = errors;const _errs17 = errors;if(errors === _errs17){if(data6 && typeof data6 == "object" && !Array.isArray(data6)){const _errs19 = errors;for(const key2 in data6){if(!(((key2 === "timestamp") || (key2 === "name")) || (key2 === "email"))){validate29.errors = [{instancePath:instancePath+"/committer",schemaPath:"#/definitions/identifiableAction/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key2},message:"must NOT have additional properties"}];return false;break;}}if(_errs19 === errors){if(data6.timestamp !== undefined){let data7 = data6.timestamp;const _errs20 = errors;if(errors === _errs20){if(errors === _errs20){if(typeof data7 === "string"){if(!(formats0.validate(data7))){validate29.errors = [{instancePath:instancePath+"/committer/timestamp",schemaPath:"#/definitions/identifiableAction/properties/timestamp/format",keyword:"format",params:{format: "date-time"},message:"must match format \""+"date-time"+"\""}];return false;}}else {validate29.errors = [{instancePath:instancePath+"/committer/timestamp",schemaPath:"#/definitions/identifiableAction/properties/timestamp/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid4 = _errs20 === errors;}else {var valid4 = true;}if(valid4){if(data6.name !== undefined){const _errs22 = errors;if(typeof data6.name !== "string"){validate29.errors = [{instancePath:instancePath+"/committer/name",schemaPath:"#/definitions/identifiableAction/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid4 = _errs22 === errors;}else {var valid4 = true;}if(valid4){if(data6.email !== undefined){let data9 = data6.email;const _errs24 = errors;if(errors === _errs24){if(errors === _errs24){if(typeof data9 === "string"){if(!(formats4(data9))){validate29.errors = [{instancePath:instancePath+"/committer/email",schemaPath:"#/definitions/identifiableAction/properties/email/format",keyword:"format",params:{format: "idn-email"},message:"must match format \""+"idn-email"+"\""}];return false;}}else {validate29.errors = [{instancePath:instancePath+"/committer/email",schemaPath:"#/definitions/identifiableAction/properties/email/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid4 = _errs24 === errors;}else {var valid4 = true;}}}}}else {validate29.errors = [{instancePath:instancePath+"/committer",schemaPath:"#/definitions/identifiableAction/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs16 === errors;}else {var valid0 = true;}if(valid0){if(data.message !== undefined){const _errs26 = errors;if(typeof data.message !== "string"){validate29.errors = [{instancePath:instancePath+"/message",schemaPath:"#/properties/message/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs26 === errors;}else {var valid0 = true;}}}}}}}else {validate29.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate29.errors = vErrors;return errors === 0;}const schema32 = {"type":"object","title":"Patch","description":"Specifies an individual patch","required":["type"],"additionalProperties":false,"properties":{"type":{"type":"string","enum":["unofficial","monkey","backport","cherry-pick"],"title":"Type","description":"Specifies the purpose for the patch including the resolution of defects, security issues, or new behavior or functionality.\n\n* __unofficial__ = A patch which is not developed by the creators or maintainers of the software being patched. Refer to [https://en.wikipedia.org/wiki/Unofficial_patch](https://en.wikipedia.org/wiki/Unofficial_patch)\n* __monkey__ = A patch which dynamically modifies runtime behavior. Refer to [https://en.wikipedia.org/wiki/Monkey_patch](https://en.wikipedia.org/wiki/Monkey_patch)\n* __backport__ = A patch which takes code from a newer version of software and applies it to older versions of the same software. Refer to [https://en.wikipedia.org/wiki/Backporting](https://en.wikipedia.org/wiki/Backporting)\n* __cherry-pick__ = A patch created by selectively applying commits from other versions or branches of the same software."},"diff":{"title":"Diff","description":"The patch file (or diff) that show changes. Refer to [https://en.wikipedia.org/wiki/Diff](https://en.wikipedia.org/wiki/Diff)","$ref":"#/definitions/diff"},"resolves":{"type":"array","additionalItems":false,"items":{"$ref":"#/definitions/issue"},"title":"Resolves","description":"A collection of issues the patch resolves"}}};const schema35 = {"type":"object","title":"Diff","description":"An individual issue that has been resolved.","required":["type"],"additionalProperties":false,"properties":{"type":{"type":"string","enum":["defect","enhancement","security"],"title":"Type","description":"Specifies the type of issue"},"id":{"type":"string","title":"ID","description":"The identifier of the issue assigned by the source of the issue"},"name":{"type":"string","title":"Name","description":"The name of the issue"},"description":{"type":"string","title":"Description","description":"A description of the issue"},"source":{"type":"object","title":"Source","description":"The source of the issue where it is documented","additionalProperties":false,"properties":{"name":{"type":"string","title":"Name","description":"The name of the source. For example 'National Vulnerability Database', 'NVD', and 'Apache'"},"url":{"type":"string","title":"URL","description":"The url of the issue documentation as provided by the source","format":"iri-reference"}}},"references":{"type":"array","items":{"type":"string","format":"iri-reference"},"title":"References","description":"A collection of URL's for reference. Multiple URLs are allowed.","examples":["https://example.com"]}}};const schema33 = {"type":"object","title":"Diff","description":"The patch file (or diff) that show changes. Refer to https://en.wikipedia.org/wiki/Diff","additionalProperties":false,"properties":{"text":{"title":"Diff text","description":"Specifies the optional text of the diff","$ref":"#/definitions/attachment"},"url":{"type":"string","title":"URL","description":"Specifies the URL to the diff","format":"iri-reference"}}};function validate32(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){const _errs1 = errors;for(const key0 in data){if(!((key0 === "text") || (key0 === "url"))){validate32.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.text !== undefined){let data0 = data.text;const _errs2 = errors;const _errs3 = errors;if(errors === _errs3){if(data0 && typeof data0 == "object" && !Array.isArray(data0)){let missing0;if((data0.content === undefined) && (missing0 = "content")){validate32.errors = [{instancePath:instancePath+"/text",schemaPath:"#/definitions/attachment/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs5 = errors;for(const key1 in data0){if(!(((key1 === "contentType") || (key1 === "encoding")) || (key1 === "content"))){validate32.errors = [{instancePath:instancePath+"/text",schemaPath:"#/definitions/attachment/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"}];return false;break;}}if(_errs5 === errors){if(data0.contentType !== undefined){const _errs6 = errors;if(typeof data0.contentType !== "string"){validate32.errors = [{instancePath:instancePath+"/text/contentType",schemaPath:"#/definitions/attachment/properties/contentType/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs6 === errors;}else {var valid2 = true;}if(valid2){if(data0.encoding !== undefined){let data2 = data0.encoding;const _errs8 = errors;if(typeof data2 !== "string"){validate32.errors = [{instancePath:instancePath+"/text/encoding",schemaPath:"#/definitions/attachment/properties/encoding/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!(data2 === "base64")){validate32.errors = [{instancePath:instancePath+"/text/encoding",schemaPath:"#/definitions/attachment/properties/encoding/enum",keyword:"enum",params:{allowedValues: schema26.properties.encoding.enum},message:"must be equal to one of the allowed values"}];return false;}var valid2 = _errs8 === errors;}else {var valid2 = true;}if(valid2){if(data0.content !== undefined){const _errs10 = errors;if(typeof data0.content !== "string"){validate32.errors = [{instancePath:instancePath+"/text/content",schemaPath:"#/definitions/attachment/properties/content/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs10 === errors;}else {var valid2 = true;}}}}}}else {validate32.errors = [{instancePath:instancePath+"/text",schemaPath:"#/definitions/attachment/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.url !== undefined){let data4 = data.url;const _errs12 = errors;if(errors === _errs12){if(errors === _errs12){if(typeof data4 === "string"){if(!(formats2(data4))){validate32.errors = [{instancePath:instancePath+"/url",schemaPath:"#/properties/url/format",keyword:"format",params:{format: "iri-reference"},message:"must match format \""+"iri-reference"+"\""}];return false;}}else {validate32.errors = [{instancePath:instancePath+"/url",schemaPath:"#/properties/url/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs12 === errors;}else {var valid0 = true;}}}}else {validate32.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate32.errors = vErrors;return errors === 0;}function validate31(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.type === undefined) && (missing0 = "type")){validate31.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key0 in data){if(!(((key0 === "type") || (key0 === "diff")) || (key0 === "resolves"))){validate31.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.type !== undefined){let data0 = data.type;const _errs2 = errors;if(typeof data0 !== "string"){validate31.errors = [{instancePath:instancePath+"/type",schemaPath:"#/properties/type/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!((((data0 === "unofficial") || (data0 === "monkey")) || (data0 === "backport")) || (data0 === "cherry-pick"))){validate31.errors = [{instancePath:instancePath+"/type",schemaPath:"#/properties/type/enum",keyword:"enum",params:{allowedValues: schema32.properties.type.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.diff !== undefined){const _errs4 = errors;if(!(validate32(data.diff, {instancePath:instancePath+"/diff",parentData:data,parentDataProperty:"diff",rootData}))){vErrors = vErrors === null ? validate32.errors : vErrors.concat(validate32.errors);errors = vErrors.length;}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data.resolves !== undefined){let data2 = data.resolves;const _errs5 = errors;if(errors === _errs5){if(Array.isArray(data2)){var valid1 = true;const len0 = data2.length;for(let i0=0; i0<len0; i0++){let data3 = data2[i0];const _errs7 = errors;const _errs8 = errors;if(errors === _errs8){if(data3 && typeof data3 == "object" && !Array.isArray(data3)){let missing1;if((data3.type === undefined) && (missing1 = "type")){validate31.errors = [{instancePath:instancePath+"/resolves/" + i0,schemaPath:"#/definitions/issue/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {const _errs10 = errors;for(const key1 in data3){if(!((((((key1 === "type") || (key1 === "id")) || (key1 === "name")) || (key1 === "description")) || (key1 === "source")) || (key1 === "references"))){validate31.errors = [{instancePath:instancePath+"/resolves/" + i0,schemaPath:"#/definitions/issue/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"}];return false;break;}}if(_errs10 === errors){if(data3.type !== undefined){let data4 = data3.type;const _errs11 = errors;if(typeof data4 !== "string"){validate31.errors = [{instancePath:instancePath+"/resolves/" + i0+"/type",schemaPath:"#/definitions/issue/properties/type/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!(((data4 === "defect") || (data4 === "enhancement")) || (data4 === "security"))){validate31.errors = [{instancePath:instancePath+"/resolves/" + i0+"/type",schemaPath:"#/definitions/issue/properties/type/enum",keyword:"enum",params:{allowedValues: schema35.properties.type.enum},message:"must be equal to one of the allowed values"}];return false;}var valid3 = _errs11 === errors;}else {var valid3 = true;}if(valid3){if(data3.id !== undefined){const _errs13 = errors;if(typeof data3.id !== "string"){validate31.errors = [{instancePath:instancePath+"/resolves/" + i0+"/id",schemaPath:"#/definitions/issue/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs13 === errors;}else {var valid3 = true;}if(valid3){if(data3.name !== undefined){const _errs15 = errors;if(typeof data3.name !== "string"){validate31.errors = [{instancePath:instancePath+"/resolves/" + i0+"/name",schemaPath:"#/definitions/issue/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs15 === errors;}else {var valid3 = true;}if(valid3){if(data3.description !== undefined){const _errs17 = errors;if(typeof data3.description !== "string"){validate31.errors = [{instancePath:instancePath+"/resolves/" + i0+"/description",schemaPath:"#/definitions/issue/properties/description/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs17 === errors;}else {var valid3 = true;}if(valid3){if(data3.source !== undefined){let data8 = data3.source;const _errs19 = errors;if(errors === _errs19){if(data8 && typeof data8 == "object" && !Array.isArray(data8)){const _errs21 = errors;for(const key2 in data8){if(!((key2 === "name") || (key2 === "url"))){validate31.errors = [{instancePath:instancePath+"/resolves/" + i0+"/source",schemaPath:"#/definitions/issue/properties/source/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key2},message:"must NOT have additional properties"}];return false;break;}}if(_errs21 === errors){if(data8.name !== undefined){const _errs22 = errors;if(typeof data8.name !== "string"){validate31.errors = [{instancePath:instancePath+"/resolves/" + i0+"/source/name",schemaPath:"#/definitions/issue/properties/source/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid4 = _errs22 === errors;}else {var valid4 = true;}if(valid4){if(data8.url !== undefined){let data10 = data8.url;const _errs24 = errors;if(errors === _errs24){if(errors === _errs24){if(typeof data10 === "string"){if(!(formats2(data10))){validate31.errors = [{instancePath:instancePath+"/resolves/" + i0+"/source/url",schemaPath:"#/definitions/issue/properties/source/properties/url/format",keyword:"format",params:{format: "iri-reference"},message:"must match format \""+"iri-reference"+"\""}];return false;}}else {validate31.errors = [{instancePath:instancePath+"/resolves/" + i0+"/source/url",schemaPath:"#/definitions/issue/properties/source/properties/url/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid4 = _errs24 === errors;}else {var valid4 = true;}}}}else {validate31.errors = [{instancePath:instancePath+"/resolves/" + i0+"/source",schemaPath:"#/definitions/issue/properties/source/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid3 = _errs19 === errors;}else {var valid3 = true;}if(valid3){if(data3.references !== undefined){let data11 = data3.references;const _errs26 = errors;if(errors === _errs26){if(Array.isArray(data11)){var valid5 = true;const len1 = data11.length;for(let i1=0; i1<len1; i1++){let data12 = data11[i1];const _errs28 = errors;if(errors === _errs28){if(errors === _errs28){if(typeof data12 === "string"){if(!(formats2(data12))){validate31.errors = [{instancePath:instancePath+"/resolves/" + i0+"/references/" + i1,schemaPath:"#/definitions/issue/properties/references/items/format",keyword:"format",params:{format: "iri-reference"},message:"must match format \""+"iri-reference"+"\""}];return false;}}else {validate31.errors = [{instancePath:instancePath+"/resolves/" + i0+"/references/" + i1,schemaPath:"#/definitions/issue/properties/references/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid5 = _errs28 === errors;if(!valid5){break;}}}else {validate31.errors = [{instancePath:instancePath+"/resolves/" + i0+"/references",schemaPath:"#/definitions/issue/properties/references/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid3 = _errs26 === errors;}else {var valid3 = true;}}}}}}}}}else {validate31.errors = [{instancePath:instancePath+"/resolves/" + i0,schemaPath:"#/definitions/issue/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid1 = _errs7 === errors;if(!valid1){break;}}}else {validate31.errors = [{instancePath:instancePath+"/resolves",schemaPath:"#/properties/resolves/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs5 === errors;}else {var valid0 = true;}}}}}}else {validate31.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate31.errors = vErrors;return errors === 0;}const schema36 = {"type":"object","title":"Evidence","description":"Provides the ability to document evidence collected through various forms of extraction or analysis.","additionalProperties":false,"properties":{"licenses":{"type":"array","additionalItems":false,"items":{"$ref":"#/definitions/licenseChoice"},"title":"Component License(s)"},"copyright":{"type":"array","additionalItems":false,"items":{"$ref":"#/definitions/copyright"},"title":"Copyright"}}};const schema37 = {"type":"object","title":"Copyright","required":["text"],"additionalProperties":false,"properties":{"text":{"type":"string","title":"Copyright Text"}}};function validate36(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){const _errs1 = errors;for(const key0 in data){if(!((key0 === "licenses") || (key0 === "copyright"))){validate36.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.licenses !== undefined){let data0 = data.licenses;const _errs2 = errors;if(errors === _errs2){if(Array.isArray(data0)){var valid1 = true;const len0 = data0.length;for(let i0=0; i0<len0; i0++){const _errs4 = errors;if(!(validate23(data0[i0], {instancePath:instancePath+"/licenses/" + i0,parentData:data0,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate23.errors : vErrors.concat(validate23.errors);errors = vErrors.length;}var valid1 = _errs4 === errors;if(!valid1){break;}}}else {validate36.errors = [{instancePath:instancePath+"/licenses",schemaPath:"#/properties/licenses/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.copyright !== undefined){let data2 = data.copyright;const _errs5 = errors;if(errors === _errs5){if(Array.isArray(data2)){var valid2 = true;const len1 = data2.length;for(let i1=0; i1<len1; i1++){let data3 = data2[i1];const _errs7 = errors;const _errs8 = errors;if(errors === _errs8){if(data3 && typeof data3 == "object" && !Array.isArray(data3)){let missing0;if((data3.text === undefined) && (missing0 = "text")){validate36.errors = [{instancePath:instancePath+"/copyright/" + i1,schemaPath:"#/definitions/copyright/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs10 = errors;for(const key1 in data3){if(!(key1 === "text")){validate36.errors = [{instancePath:instancePath+"/copyright/" + i1,schemaPath:"#/definitions/copyright/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"}];return false;break;}}if(_errs10 === errors){if(data3.text !== undefined){if(typeof data3.text !== "string"){validate36.errors = [{instancePath:instancePath+"/copyright/" + i1+"/text",schemaPath:"#/definitions/copyright/properties/text/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}}}else {validate36.errors = [{instancePath:instancePath+"/copyright/" + i1,schemaPath:"#/definitions/copyright/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid2 = _errs7 === errors;if(!valid2){break;}}}else {validate36.errors = [{instancePath:instancePath+"/copyright",schemaPath:"#/properties/copyright/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs5 === errors;}else {var valid0 = true;}}}}else {validate36.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate36.errors = vErrors;return errors === 0;}const schema38 = {"type":"object","title":"Release notes","required":["type"],"additionalProperties":false,"properties":{"type":{"$ref":"#/definitions/releaseType","title":"Type","description":"The software versioning type the release note describes."},"title":{"type":"string","title":"Title","description":"The title of the release."},"featuredImage":{"type":"string","format":"iri-reference","title":"Featured image","description":"The URL to an image that may be prominently displayed with the release note."},"socialImage":{"type":"string","format":"iri-reference","title":"Social image","description":"The URL to an image that may be used in messaging on social media platforms."},"description":{"type":"string","title":"Description","description":"A short description of the release."},"timestamp":{"type":"string","format":"date-time","title":"Timestamp","description":"The date and time (timestamp) when the release note was created."},"aliases":{"type":"array","items":{"type":"string"},"title":"Aliases","description":"One or more alternate names the release may be referred to. This may include unofficial terms used by development and marketing teams (e.g. code names)."},"tags":{"type":"array","items":{"type":"string"},"title":"Tags","description":"One or more tags that may aid in search or retrieval of the release note."},"resolves":{"type":"array","additionalItems":false,"items":{"$ref":"#/definitions/issue"},"title":"Resolves","description":"A collection of issues that have been resolved."},"notes":{"type":"array","additionalItems":false,"items":{"$ref":"#/definitions/note"},"title":"Notes","description":"Zero or more release notes containing the locale and content. Multiple note objects may be specified to support release notes in a wide variety of languages."},"properties":{"type":"array","title":"Properties","description":"Provides the ability to document properties in a name-value store. This provides flexibility to include data not officially supported in the standard without having to use additional namespaces or create extensions. Unlike key-value stores, properties support duplicate names, each potentially having different values. Property names of interest to the general public are encouraged to be registered in the [CycloneDX Property Taxonomy](https://github.com/CycloneDX/cyclonedx-property-taxonomy). Formal registration is OPTIONAL.","additionalItems":false,"items":{"$ref":"#/definitions/property"}}}};const schema39 = {"type":"string","examples":["major","minor","patch","pre-release","internal"],"description":"The software versioning type. It is RECOMMENDED that the release type use one of 'major', 'minor', 'patch', 'pre-release', or 'internal'. Representing all possible software release types is not practical, so standardizing on the recommended values, whenever possible, is strongly encouraged.\n\n* __major__ = A major release may contain significant changes or may introduce breaking changes.\n* __minor__ = A minor release, also known as an update, may contain a smaller number of changes than major releases.\n* __patch__ = Patch releases are typically unplanned and may resolve defects or important security issues.\n* __pre-release__ = A pre-release may include alpha, beta, or release candidates and typically have limited support. They provide the ability to preview a release prior to its general availability.\n* __internal__ = Internal releases are not for public consumption and are intended to be used exclusively by the project or manufacturer that produced it."};const schema41 = {"type":"object","title":"Note","description":"A note containing the locale and content.","required":["text"],"additionalProperties":false,"properties":{"locale":{"$ref":"#/definitions/localeType","title":"Locale","description":"The ISO-639 (or higher) language code and optional ISO-3166 (or higher) country code. Examples include: \"en\", \"en-US\", \"fr\" and \"fr-CA\""},"text":{"title":"Release note content","description":"Specifies the full content of the release note.","$ref":"#/definitions/attachment"}}};const schema42 = {"type":"string","pattern":"^([a-z]{2})(-[A-Z]{2})?$","title":"Locale","description":"Defines a syntax for representing two character language code (ISO-639) followed by an optional two character country code. The language code MUST be lower case. If the country code is specified, the country code MUST be upper case. The language code and country code MUST be separated by a minus sign. Examples: en, en-US, fr, fr-CA"};const pattern3 = new RegExp("^([a-z]{2})(-[A-Z]{2})?$", "u");function validate40(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.text === undefined) && (missing0 = "text")){validate40.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key0 in data){if(!((key0 === "locale") || (key0 === "text"))){validate40.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.locale !== undefined){let data0 = data.locale;const _errs2 = errors;const _errs3 = errors;if(errors === _errs3){if(typeof data0 === "string"){if(!pattern3.test(data0)){validate40.errors = [{instancePath:instancePath+"/locale",schemaPath:"#/definitions/localeType/pattern",keyword:"pattern",params:{pattern: "^([a-z]{2})(-[A-Z]{2})?$"},message:"must match pattern \""+"^([a-z]{2})(-[A-Z]{2})?$"+"\""}];return false;}}else {validate40.errors = [{instancePath:instancePath+"/locale",schemaPath:"#/definitions/localeType/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.text !== undefined){let data1 = data.text;const _errs5 = errors;const _errs6 = errors;if(errors === _errs6){if(data1 && typeof data1 == "object" && !Array.isArray(data1)){let missing1;if((data1.content === undefined) && (missing1 = "content")){validate40.errors = [{instancePath:instancePath+"/text",schemaPath:"#/definitions/attachment/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {const _errs8 = errors;for(const key1 in data1){if(!(((key1 === "contentType") || (key1 === "encoding")) || (key1 === "content"))){validate40.errors = [{instancePath:instancePath+"/text",schemaPath:"#/definitions/attachment/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"}];return false;break;}}if(_errs8 === errors){if(data1.contentType !== undefined){const _errs9 = errors;if(typeof data1.contentType !== "string"){validate40.errors = [{instancePath:instancePath+"/text/contentType",schemaPath:"#/definitions/attachment/properties/contentType/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs9 === errors;}else {var valid3 = true;}if(valid3){if(data1.encoding !== undefined){let data3 = data1.encoding;const _errs11 = errors;if(typeof data3 !== "string"){validate40.errors = [{instancePath:instancePath+"/text/encoding",schemaPath:"#/definitions/attachment/properties/encoding/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!(data3 === "base64")){validate40.errors = [{instancePath:instancePath+"/text/encoding",schemaPath:"#/definitions/attachment/properties/encoding/enum",keyword:"enum",params:{allowedValues: schema26.properties.encoding.enum},message:"must be equal to one of the allowed values"}];return false;}var valid3 = _errs11 === errors;}else {var valid3 = true;}if(valid3){if(data1.content !== undefined){const _errs13 = errors;if(typeof data1.content !== "string"){validate40.errors = [{instancePath:instancePath+"/text/content",schemaPath:"#/definitions/attachment/properties/content/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs13 === errors;}else {var valid3 = true;}}}}}}else {validate40.errors = [{instancePath:instancePath+"/text",schemaPath:"#/definitions/attachment/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs5 === errors;}else {var valid0 = true;}}}}}else {validate40.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate40.errors = vErrors;return errors === 0;}function validate39(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.type === undefined) && (missing0 = "type")){validate39.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key0 in data){if(!(func2.call(schema38.properties, key0))){validate39.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.type !== undefined){const _errs2 = errors;if(typeof data.type !== "string"){validate39.errors = [{instancePath:instancePath+"/type",schemaPath:"#/definitions/releaseType/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.title !== undefined){const _errs5 = errors;if(typeof data.title !== "string"){validate39.errors = [{instancePath:instancePath+"/title",schemaPath:"#/properties/title/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs5 === errors;}else {var valid0 = true;}if(valid0){if(data.featuredImage !== undefined){let data2 = data.featuredImage;const _errs7 = errors;if(errors === _errs7){if(errors === _errs7){if(typeof data2 === "string"){if(!(formats2(data2))){validate39.errors = [{instancePath:instancePath+"/featuredImage",schemaPath:"#/properties/featuredImage/format",keyword:"format",params:{format: "iri-reference"},message:"must match format \""+"iri-reference"+"\""}];return false;}}else {validate39.errors = [{instancePath:instancePath+"/featuredImage",schemaPath:"#/properties/featuredImage/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs7 === errors;}else {var valid0 = true;}if(valid0){if(data.socialImage !== undefined){let data3 = data.socialImage;const _errs9 = errors;if(errors === _errs9){if(errors === _errs9){if(typeof data3 === "string"){if(!(formats2(data3))){validate39.errors = [{instancePath:instancePath+"/socialImage",schemaPath:"#/properties/socialImage/format",keyword:"format",params:{format: "iri-reference"},message:"must match format \""+"iri-reference"+"\""}];return false;}}else {validate39.errors = [{instancePath:instancePath+"/socialImage",schemaPath:"#/properties/socialImage/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs9 === errors;}else {var valid0 = true;}if(valid0){if(data.description !== undefined){const _errs11 = errors;if(typeof data.description !== "string"){validate39.errors = [{instancePath:instancePath+"/description",schemaPath:"#/properties/description/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs11 === errors;}else {var valid0 = true;}if(valid0){if(data.timestamp !== undefined){let data5 = data.timestamp;const _errs13 = errors;if(errors === _errs13){if(errors === _errs13){if(typeof data5 === "string"){if(!(formats0.validate(data5))){validate39.errors = [{instancePath:instancePath+"/timestamp",schemaPath:"#/properties/timestamp/format",keyword:"format",params:{format: "date-time"},message:"must match format \""+"date-time"+"\""}];return false;}}else {validate39.errors = [{instancePath:instancePath+"/timestamp",schemaPath:"#/properties/timestamp/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs13 === errors;}else {var valid0 = true;}if(valid0){if(data.aliases !== undefined){let data6 = data.aliases;const _errs15 = errors;if(errors === _errs15){if(Array.isArray(data6)){var valid2 = true;const len0 = data6.length;for(let i0=0; i0<len0; i0++){const _errs17 = errors;if(typeof data6[i0] !== "string"){validate39.errors = [{instancePath:instancePath+"/aliases/" + i0,schemaPath:"#/properties/aliases/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs17 === errors;if(!valid2){break;}}}else {validate39.errors = [{instancePath:instancePath+"/aliases",schemaPath:"#/properties/aliases/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs15 === errors;}else {var valid0 = true;}if(valid0){if(data.tags !== undefined){let data8 = data.tags;const _errs19 = errors;if(errors === _errs19){if(Array.isArray(data8)){var valid3 = true;const len1 = data8.length;for(let i1=0; i1<len1; i1++){const _errs21 = errors;if(typeof data8[i1] !== "string"){validate39.errors = [{instancePath:instancePath+"/tags/" + i1,schemaPath:"#/properties/tags/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs21 === errors;if(!valid3){break;}}}else {validate39.errors = [{instancePath:instancePath+"/tags",schemaPath:"#/properties/tags/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs19 === errors;}else {var valid0 = true;}if(valid0){if(data.resolves !== undefined){let data10 = data.resolves;const _errs23 = errors;if(errors === _errs23){if(Array.isArray(data10)){var valid4 = true;const len2 = data10.length;for(let i2=0; i2<len2; i2++){let data11 = data10[i2];const _errs25 = errors;const _errs26 = errors;if(errors === _errs26){if(data11 && typeof data11 == "object" && !Array.isArray(data11)){let missing1;if((data11.type === undefined) && (missing1 = "type")){validate39.errors = [{instancePath:instancePath+"/resolves/" + i2,schemaPath:"#/definitions/issue/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {const _errs28 = errors;for(const key1 in data11){if(!((((((key1 === "type") || (key1 === "id")) || (key1 === "name")) || (key1 === "description")) || (key1 === "source")) || (key1 === "references"))){validate39.errors = [{instancePath:instancePath+"/resolves/" + i2,schemaPath:"#/definitions/issue/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"}];return false;break;}}if(_errs28 === errors){if(data11.type !== undefined){let data12 = data11.type;const _errs29 = errors;if(typeof data12 !== "string"){validate39.errors = [{instancePath:instancePath+"/resolves/" + i2+"/type",schemaPath:"#/definitions/issue/properties/type/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!(((data12 === "defect") || (data12 === "enhancement")) || (data12 === "security"))){validate39.errors = [{instancePath:instancePath+"/resolves/" + i2+"/type",schemaPath:"#/definitions/issue/properties/type/enum",keyword:"enum",params:{allowedValues: schema35.properties.type.enum},message:"must be equal to one of the allowed values"}];return false;}var valid6 = _errs29 === errors;}else {var valid6 = true;}if(valid6){if(data11.id !== undefined){const _errs31 = errors;if(typeof data11.id !== "string"){validate39.errors = [{instancePath:instancePath+"/resolves/" + i2+"/id",schemaPath:"#/definitions/issue/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid6 = _errs31 === errors;}else {var valid6 = true;}if(valid6){if(data11.name !== undefined){const _errs33 = errors;if(typeof data11.name !== "string"){validate39.errors = [{instancePath:instancePath+"/resolves/" + i2+"/name",schemaPath:"#/definitions/issue/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid6 = _errs33 === errors;}else {var valid6 = true;}if(valid6){if(data11.description !== undefined){const _errs35 = errors;if(typeof data11.description !== "string"){validate39.errors = [{instancePath:instancePath+"/resolves/" + i2+"/description",schemaPath:"#/definitions/issue/properties/description/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid6 = _errs35 === errors;}else {var valid6 = true;}if(valid6){if(data11.source !== undefined){let data16 = data11.source;const _errs37 = errors;if(errors === _errs37){if(data16 && typeof data16 == "object" && !Array.isArray(data16)){const _errs39 = errors;for(const key2 in data16){if(!((key2 === "name") || (key2 === "url"))){validate39.errors = [{instancePath:instancePath+"/resolves/" + i2+"/source",schemaPath:"#/definitions/issue/properties/source/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key2},message:"must NOT have additional properties"}];return false;break;}}if(_errs39 === errors){if(data16.name !== undefined){const _errs40 = errors;if(typeof data16.name !== "string"){validate39.errors = [{instancePath:instancePath+"/resolves/" + i2+"/source/name",schemaPath:"#/definitions/issue/properties/source/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid7 = _errs40 === errors;}else {var valid7 = true;}if(valid7){if(data16.url !== undefined){let data18 = data16.url;const _errs42 = errors;if(errors === _errs42){if(errors === _errs42){if(typeof data18 === "string"){if(!(formats2(data18))){validate39.errors = [{instancePath:instancePath+"/resolves/" + i2+"/source/url",schemaPath:"#/definitions/issue/properties/source/properties/url/format",keyword:"format",params:{format: "iri-reference"},message:"must match format \""+"iri-reference"+"\""}];return false;}}else {validate39.errors = [{instancePath:instancePath+"/resolves/" + i2+"/source/url",schemaPath:"#/definitions/issue/properties/source/properties/url/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid7 = _errs42 === errors;}else {var valid7 = true;}}}}else {validate39.errors = [{instancePath:instancePath+"/resolves/" + i2+"/source",schemaPath:"#/definitions/issue/properties/source/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid6 = _errs37 === errors;}else {var valid6 = true;}if(valid6){if(data11.references !== undefined){let data19 = data11.references;const _errs44 = errors;if(errors === _errs44){if(Array.isArray(data19)){var valid8 = true;const len3 = data19.length;for(let i3=0; i3<len3; i3++){let data20 = data19[i3];const _errs46 = errors;if(errors === _errs46){if(errors === _errs46){if(typeof data20 === "string"){if(!(formats2(data20))){validate39.errors = [{instancePath:instancePath+"/resolves/" + i2+"/references/" + i3,schemaPath:"#/definitions/issue/properties/references/items/format",keyword:"format",params:{format: "iri-reference"},message:"must match format \""+"iri-reference"+"\""}];return false;}}else {validate39.errors = [{instancePath:instancePath+"/resolves/" + i2+"/references/" + i3,schemaPath:"#/definitions/issue/properties/references/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid8 = _errs46 === errors;if(!valid8){break;}}}else {validate39.errors = [{instancePath:instancePath+"/resolves/" + i2+"/references",schemaPath:"#/definitions/issue/properties/references/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid6 = _errs44 === errors;}else {var valid6 = true;}}}}}}}}}else {validate39.errors = [{instancePath:instancePath+"/resolves/" + i2,schemaPath:"#/definitions/issue/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid4 = _errs25 === errors;if(!valid4){break;}}}else {validate39.errors = [{instancePath:instancePath+"/resolves",schemaPath:"#/properties/resolves/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs23 === errors;}else {var valid0 = true;}if(valid0){if(data.notes !== undefined){let data21 = data.notes;const _errs48 = errors;if(errors === _errs48){if(Array.isArray(data21)){var valid9 = true;const len4 = data21.length;for(let i4=0; i4<len4; i4++){const _errs50 = errors;if(!(validate40(data21[i4], {instancePath:instancePath+"/notes/" + i4,parentData:data21,parentDataProperty:i4,rootData}))){vErrors = vErrors === null ? validate40.errors : vErrors.concat(validate40.errors);errors = vErrors.length;}var valid9 = _errs50 === errors;if(!valid9){break;}}}else {validate39.errors = [{instancePath:instancePath+"/notes",schemaPath:"#/properties/notes/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs48 === errors;}else {var valid0 = true;}if(valid0){if(data.properties !== undefined){let data23 = data.properties;const _errs51 = errors;if(errors === _errs51){if(Array.isArray(data23)){var valid10 = true;const len5 = data23.length;for(let i5=0; i5<len5; i5++){let data24 = data23[i5];const _errs53 = errors;const _errs54 = errors;if(errors === _errs54){if(data24 && typeof data24 == "object" && !Array.isArray(data24)){if(data24.name !== undefined){const _errs56 = errors;if(typeof data24.name !== "string"){validate39.errors = [{instancePath:instancePath+"/properties/" + i5+"/name",schemaPath:"#/definitions/property/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid12 = _errs56 === errors;}else {var valid12 = true;}if(valid12){if(data24.value !== undefined){const _errs58 = errors;if(typeof data24.value !== "string"){validate39.errors = [{instancePath:instancePath+"/properties/" + i5+"/value",schemaPath:"#/definitions/property/properties/value/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid12 = _errs58 === errors;}else {var valid12 = true;}}}else {validate39.errors = [{instancePath:instancePath+"/properties/" + i5,schemaPath:"#/definitions/property/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid10 = _errs53 === errors;if(!valid10){break;}}}else {validate39.errors = [{instancePath:instancePath+"/properties",schemaPath:"#/properties/properties/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs51 === errors;}else {var valid0 = true;}}}}}}}}}}}}}}else {validate39.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate39.errors = vErrors;return errors === 0;}const schema47 = {"type":"object","title":"Signature","oneOf":[{"additionalProperties":false,"properties":{"signers":{"type":"array","title":"Signature","description":"Unique top level property for Multiple Signatures. (multisignature)","additionalItems":false,"items":{"$ref":"#/definitions/signer"}}}},{"additionalProperties":false,"properties":{"chain":{"type":"array","title":"Signature","description":"Unique top level property for Signature Chains. (signaturechain)","additionalItems":false,"items":{"$ref":"#/definitions/signer"}}}},{"title":"Signature","description":"Unique top level property for simple signatures. (signaturecore)","$ref":"#/definitions/signer"}]};const schema48 = {"type":"object","title":"Signature","required":["algorithm","value"],"additionalProperties":false,"properties":{"algorithm":{"oneOf":[{"type":"string","title":"Algorithm","description":"Signature algorithm. The currently recognized JWA [RFC7518] and RFC8037 [RFC8037] asymmetric key algorithms. Note: Unlike RFC8037 [RFC8037] JSF requires explicit Ed* algorithm names instead of \"EdDSA\".","enum":["RS256","RS384","RS512","PS256","PS384","PS512","ES256","ES384","ES512","Ed25519","Ed448","HS256","HS384","HS512"]},{"type":"string","title":"Algorithm","description":"Signature algorithm. Note: If proprietary signature algorithms are added, they must be expressed as URIs.","format":"uri"}]},"keyId":{"type":"string","title":"Key ID","description":"Optional. Application specific string identifying the signature key."},"publicKey":{"title":"Public key","description":"Optional. Public key object.","$ref":"#/definitions/publicKey"},"certificatePath":{"type":"array","title":"Certificate path","description":"Optional. Sorted array of X.509 [RFC5280] certificates, where the first element must contain the signature certificate. The certificate path must be contiguous but is not required to be complete.","additionalItems":false,"items":{"type":"string"}},"excludes":{"type":"array","title":"Excludes","description":"Optional. Array holding the names of one or more application level properties that must be excluded from the signature process. Note that the \"excludes\" property itself, must also be excluded from the signature process. Since both the \"excludes\" property and the associated data it points to are unsigned, a conforming JSF implementation must provide options for specifying which properties to accept.","additionalItems":false,"items":{"type":"string"}},"value":{"type":"string","title":"Signature","description":"The signature data. Note that the binary representation must follow the JWA [RFC7518] specifications."}}};const formats40 = require("ajv-formats/dist/formats").fullFormats.uri;const schema49 = {"title":"Public key","description":"Optional. Public key object.","type":"object","required":["kty"],"additionalProperties":true,"properties":{"kty":{"$ref":"#/definitions/keyType"}},"allOf":[{"if":{"properties":{"kty":{"const":"EC"}}},"then":{"required":["kty","crv","x","y"],"additionalProperties":false,"properties":{"kty":{"$ref":"#/definitions/keyType"},"crv":{"type":"string","title":"Curve name","description":"EC curve name.","enum":["P-256","P-384","P-521"]},"x":{"type":"string","title":"Coordinate","description":"EC curve point X. The length of this field must be the full size of a coordinate for the curve specified in the \"crv\" parameter. For example, if the value of \"crv\" is \"P-521\", the decoded argument must be 66 bytes."},"y":{"type":"string","title":"Coordinate","description":"EC curve point Y. The length of this field must be the full size of a coordinate for the curve specified in the \"crv\" parameter. For example, if the value of \"crv\" is \"P-256\", the decoded argument must be 32 bytes."}}}},{"if":{"properties":{"kty":{"const":"OKP"}}},"then":{"required":["kty","crv","x"],"additionalProperties":false,"properties":{"kty":{"$ref":"#/definitions/keyType"},"crv":{"type":"string","title":"Curve name","description":"EdDSA curve name.","enum":["Ed25519","Ed448"]},"x":{"type":"string","title":"Coordinate","description":"EdDSA curve point X. The length of this field must be the full size of a coordinate for the curve specified in the \"crv\" parameter. For example, if the value of \"crv\" is \"Ed25519\", the decoded argument must be 32 bytes."}}}},{"if":{"properties":{"kty":{"const":"RSA"}}},"then":{"required":["kty","n","e"],"additionalProperties":false,"properties":{"kty":{"$ref":"#/definitions/keyType"},"n":{"type":"string","title":"Modulus","description":"RSA modulus."},"e":{"type":"string","title":"Exponent","description":"RSA exponent."}}}}]};const schema50 = {"type":"string","title":"Key type","description":"Key type indicator.","enum":["EC","OKP","RSA"]};function validate46(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;const _errs1 = errors;const _errs2 = errors;let valid1 = true;const _errs3 = errors;if(data && typeof data == "object" && !Array.isArray(data)){if(data.kty !== undefined){if("EC" !== data.kty){const err0 = {};if(vErrors === null){vErrors = [err0];}else {vErrors.push(err0);}errors++;}}}var _valid0 = _errs3 === errors;errors = _errs2;if(vErrors !== null){if(_errs2){vErrors.length = _errs2;}else {vErrors = null;}}if(_valid0){const _errs5 = errors;if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if(((((data.kty === undefined) && (missing0 = "kty")) || ((data.crv === undefined) && (missing0 = "crv"))) || ((data.x === undefined) && (missing0 = "x"))) || ((data.y === undefined) && (missing0 = "y"))){validate46.errors = [{instancePath,schemaPath:"#/allOf/0/then/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs6 = errors;for(const key0 in data){if(!((((key0 === "kty") || (key0 === "crv")) || (key0 === "x")) || (key0 === "y"))){validate46.errors = [{instancePath,schemaPath:"#/allOf/0/then/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs6 === errors){if(data.kty !== undefined){let data1 = data.kty;const _errs7 = errors;if(typeof data1 !== "string"){validate46.errors = [{instancePath:instancePath+"/kty",schemaPath:"#/definitions/keyType/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!(((data1 === "EC") || (data1 === "OKP")) || (data1 === "RSA"))){validate46.errors = [{instancePath:instancePath+"/kty",schemaPath:"#/definitions/keyType/enum",keyword:"enum",params:{allowedValues: schema50.enum},message:"must be equal to one of the allowed values"}];return false;}var valid3 = _errs7 === errors;}else {var valid3 = true;}if(valid3){if(data.crv !== undefined){let data2 = data.crv;const _errs10 = errors;if(typeof data2 !== "string"){validate46.errors = [{instancePath:instancePath+"/crv",schemaPath:"#/allOf/0/then/properties/crv/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!(((data2 === "P-256") || (data2 === "P-384")) || (data2 === "P-521"))){validate46.errors = [{instancePath:instancePath+"/crv",schemaPath:"#/allOf/0/then/properties/crv/enum",keyword:"enum",params:{allowedValues: schema49.allOf[0].then.properties.crv.enum},message:"must be equal to one of the allowed values"}];return false;}var valid3 = _errs10 === errors;}else {var valid3 = true;}if(valid3){if(data.x !== undefined){const _errs12 = errors;if(typeof data.x !== "string"){validate46.errors = [{instancePath:instancePath+"/x",schemaPath:"#/allOf/0/then/properties/x/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs12 === errors;}else {var valid3 = true;}if(valid3){if(data.y !== undefined){const _errs14 = errors;if(typeof data.y !== "string"){validate46.errors = [{instancePath:instancePath+"/y",schemaPath:"#/allOf/0/then/properties/y/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs14 === errors;}else {var valid3 = true;}}}}}}}var _valid0 = _errs5 === errors;valid1 = _valid0;}if(!valid1){const err1 = {instancePath,schemaPath:"#/allOf/0/if",keyword:"if",params:{failingKeyword: "then"},message:"must match \"then\" schema"};if(vErrors === null){vErrors = [err1];}else {vErrors.push(err1);}errors++;validate46.errors = vErrors;return false;}var valid0 = _errs1 === errors;if(valid0){const _errs16 = errors;const _errs17 = errors;let valid5 = true;const _errs18 = errors;if(data && typeof data == "object" && !Array.isArray(data)){if(data.kty !== undefined){if("OKP" !== data.kty){const err2 = {};if(vErrors === null){vErrors = [err2];}else {vErrors.push(err2);}errors++;}}}var _valid1 = _errs18 === errors;errors = _errs17;if(vErrors !== null){if(_errs17){vErrors.length = _errs17;}else {vErrors = null;}}if(_valid1){const _errs20 = errors;if(data && typeof data == "object" && !Array.isArray(data)){let missing1;if((((data.kty === undefined) && (missing1 = "kty")) || ((data.crv === undefined) && (missing1 = "crv"))) || ((data.x === undefined) && (missing1 = "x"))){validate46.errors = [{instancePath,schemaPath:"#/allOf/1/then/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {const _errs21 = errors;for(const key1 in data){if(!(((key1 === "kty") || (key1 === "crv")) || (key1 === "x"))){validate46.errors = [{instancePath,schemaPath:"#/allOf/1/then/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"}];return false;break;}}if(_errs21 === errors){if(data.kty !== undefined){let data6 = data.kty;const _errs22 = errors;if(typeof data6 !== "string"){validate46.errors = [{instancePath:instancePath+"/kty",schemaPath:"#/definitions/keyType/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!(((data6 === "EC") || (data6 === "OKP")) || (data6 === "RSA"))){validate46.errors = [{instancePath:instancePath+"/kty",schemaPath:"#/definitions/keyType/enum",keyword:"enum",params:{allowedValues: schema50.enum},message:"must be equal to one of the allowed values"}];return false;}var valid7 = _errs22 === errors;}else {var valid7 = true;}if(valid7){if(data.crv !== undefined){let data7 = data.crv;const _errs25 = errors;if(typeof data7 !== "string"){validate46.errors = [{instancePath:instancePath+"/crv",schemaPath:"#/allOf/1/then/properties/crv/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!((data7 === "Ed25519") || (data7 === "Ed448"))){validate46.errors = [{instancePath:instancePath+"/crv",schemaPath:"#/allOf/1/then/properties/crv/enum",keyword:"enum",params:{allowedValues: schema49.allOf[1].then.properties.crv.enum},message:"must be equal to one of the allowed values"}];return false;}var valid7 = _errs25 === errors;}else {var valid7 = true;}if(valid7){if(data.x !== undefined){const _errs27 = errors;if(typeof data.x !== "string"){validate46.errors = [{instancePath:instancePath+"/x",schemaPath:"#/allOf/1/then/properties/x/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid7 = _errs27 === errors;}else {var valid7 = true;}}}}}}var _valid1 = _errs20 === errors;valid5 = _valid1;}if(!valid5){const err3 = {instancePath,schemaPath:"#/allOf/1/if",keyword:"if",params:{failingKeyword: "then"},message:"must match \"then\" schema"};if(vErrors === null){vErrors = [err3];}else {vErrors.push(err3);}errors++;validate46.errors = vErrors;return false;}var valid0 = _errs16 === errors;if(valid0){const _errs29 = errors;const _errs30 = errors;let valid9 = true;const _errs31 = errors;if(data && typeof data == "object" && !Array.isArray(data)){if(data.kty !== undefined){if("RSA" !== data.kty){const err4 = {};if(vErrors === null){vErrors = [err4];}else {vErrors.push(err4);}errors++;}}}var _valid2 = _errs31 === errors;errors = _errs30;if(vErrors !== null){if(_errs30){vErrors.length = _errs30;}else {vErrors = null;}}if(_valid2){const _errs33 = errors;if(data && typeof data == "object" && !Array.isArray(data)){let missing2;if((((data.kty === undefined) && (missing2 = "kty")) || ((data.n === undefined) && (missing2 = "n"))) || ((data.e === undefined) && (missing2 = "e"))){validate46.errors = [{instancePath,schemaPath:"#/allOf/2/then/required",keyword:"required",params:{missingProperty: missing2},message:"must have required property '"+missing2+"'"}];return false;}else {const _errs34 = errors;for(const key2 in data){if(!(((key2 === "kty") || (key2 === "n")) || (key2 === "e"))){validate46.errors = [{instancePath,schemaPath:"#/allOf/2/then/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key2},message:"must NOT have additional properties"}];return false;break;}}if(_errs34 === errors){if(data.kty !== undefined){let data10 = data.kty;const _errs35 = errors;if(typeof data10 !== "string"){validate46.errors = [{instancePath:instancePath+"/kty",schemaPath:"#/definitions/keyType/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!(((data10 === "EC") || (data10 === "OKP")) || (data10 === "RSA"))){validate46.errors = [{instancePath:instancePath+"/kty",schemaPath:"#/definitions/keyType/enum",keyword:"enum",params:{allowedValues: schema50.enum},message:"must be equal to one of the allowed values"}];return false;}var valid11 = _errs35 === errors;}else {var valid11 = true;}if(valid11){if(data.n !== undefined){const _errs38 = errors;if(typeof data.n !== "string"){validate46.errors = [{instancePath:instancePath+"/n",schemaPath:"#/allOf/2/then/properties/n/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid11 = _errs38 === errors;}else {var valid11 = true;}if(valid11){if(data.e !== undefined){const _errs40 = errors;if(typeof data.e !== "string"){validate46.errors = [{instancePath:instancePath+"/e",schemaPath:"#/allOf/2/then/properties/e/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid11 = _errs40 === errors;}else {var valid11 = true;}}}}}}var _valid2 = _errs33 === errors;valid9 = _valid2;}if(!valid9){const err5 = {instancePath,schemaPath:"#/allOf/2/if",keyword:"if",params:{failingKeyword: "then"},message:"must match \"then\" schema"};if(vErrors === null){vErrors = [err5];}else {vErrors.push(err5);}errors++;validate46.errors = vErrors;return false;}var valid0 = _errs29 === errors;}}if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing3;if((data.kty === undefined) && (missing3 = "kty")){validate46.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing3},message:"must have required property '"+missing3+"'"}];return false;}else {if(data.kty !== undefined){let data13 = data.kty;if(typeof data13 !== "string"){validate46.errors = [{instancePath:instancePath+"/kty",schemaPath:"#/definitions/keyType/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!(((data13 === "EC") || (data13 === "OKP")) || (data13 === "RSA"))){validate46.errors = [{instancePath:instancePath+"/kty",schemaPath:"#/definitions/keyType/enum",keyword:"enum",params:{allowedValues: schema50.enum},message:"must be equal to one of the allowed values"}];return false;}}}}else {validate46.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate46.errors = vErrors;return errors === 0;}function validate45(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if(((data.algorithm === undefined) && (missing0 = "algorithm")) || ((data.value === undefined) && (missing0 = "value"))){validate45.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key0 in data){if(!((((((key0 === "algorithm") || (key0 === "keyId")) || (key0 === "publicKey")) || (key0 === "certificatePath")) || (key0 === "excludes")) || (key0 === "value"))){validate45.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.algorithm !== undefined){let data0 = data.algorithm;const _errs2 = errors;const _errs3 = errors;let valid1 = false;let passing0 = null;const _errs4 = errors;if(typeof data0 !== "string"){const err0 = {instancePath:instancePath+"/algorithm",schemaPath:"#/properties/algorithm/oneOf/0/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err0];}else {vErrors.push(err0);}errors++;}if(!((((((((((((((data0 === "RS256") || (data0 === "RS384")) || (data0 === "RS512")) || (data0 === "PS256")) || (data0 === "PS384")) || (data0 === "PS512")) || (data0 === "ES256")) || (data0 === "ES384")) || (data0 === "ES512")) || (data0 === "Ed25519")) || (data0 === "Ed448")) || (data0 === "HS256")) || (data0 === "HS384")) || (data0 === "HS512"))){const err1 = {instancePath:instancePath+"/algorithm",schemaPath:"#/properties/algorithm/oneOf/0/enum",keyword:"enum",params:{allowedValues: schema48.properties.algorithm.oneOf[0].enum},message:"must be equal to one of the allowed values"};if(vErrors === null){vErrors = [err1];}else {vErrors.push(err1);}errors++;}var _valid0 = _errs4 === errors;if(_valid0){valid1 = true;passing0 = 0;}const _errs6 = errors;if(errors === _errs6){if(errors === _errs6){if(typeof data0 === "string"){if(!(formats40(data0))){const err2 = {instancePath:instancePath+"/algorithm",schemaPath:"#/properties/algorithm/oneOf/1/format",keyword:"format",params:{format: "uri"},message:"must match format \""+"uri"+"\""};if(vErrors === null){vErrors = [err2];}else {vErrors.push(err2);}errors++;}}else {const err3 = {instancePath:instancePath+"/algorithm",schemaPath:"#/properties/algorithm/oneOf/1/type",keyword:"type",params:{type: "string"},message:"must be string"};if(vErrors === null){vErrors = [err3];}else {vErrors.push(err3);}errors++;}}}var _valid0 = _errs6 === errors;if(_valid0 && valid1){valid1 = false;passing0 = [passing0, 1];}else {if(_valid0){valid1 = true;passing0 = 1;}}if(!valid1){const err4 = {instancePath:instancePath+"/algorithm",schemaPath:"#/properties/algorithm/oneOf",keyword:"oneOf",params:{passingSchemas: passing0},message:"must match exactly one schema in oneOf"};if(vErrors === null){vErrors = [err4];}else {vErrors.push(err4);}errors++;validate45.errors = vErrors;return false;}else {errors = _errs3;if(vErrors !== null){if(_errs3){vErrors.length = _errs3;}else {vErrors = null;}}}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.keyId !== undefined){const _errs8 = errors;if(typeof data.keyId !== "string"){validate45.errors = [{instancePath:instancePath+"/keyId",schemaPath:"#/properties/keyId/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs8 === errors;}else {var valid0 = true;}if(valid0){if(data.publicKey !== undefined){const _errs10 = errors;if(!(validate46(data.publicKey, {instancePath:instancePath+"/publicKey",parentData:data,parentDataProperty:"publicKey",rootData}))){vErrors = vErrors === null ? validate46.errors : vErrors.concat(validate46.errors);errors = vErrors.length;}var valid0 = _errs10 === errors;}else {var valid0 = true;}if(valid0){if(data.certificatePath !== undefined){let data3 = data.certificatePath;const _errs11 = errors;if(errors === _errs11){if(Array.isArray(data3)){var valid2 = true;const len0 = data3.length;for(let i0=0; i0<len0; i0++){const _errs13 = errors;if(typeof data3[i0] !== "string"){validate45.errors = [{instancePath:instancePath+"/certificatePath/" + i0,schemaPath:"#/properties/certificatePath/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs13 === errors;if(!valid2){break;}}}else {validate45.errors = [{instancePath:instancePath+"/certificatePath",schemaPath:"#/properties/certificatePath/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs11 === errors;}else {var valid0 = true;}if(valid0){if(data.excludes !== undefined){let data5 = data.excludes;const _errs15 = errors;if(errors === _errs15){if(Array.isArray(data5)){var valid3 = true;const len1 = data5.length;for(let i1=0; i1<len1; i1++){const _errs17 = errors;if(typeof data5[i1] !== "string"){validate45.errors = [{instancePath:instancePath+"/excludes/" + i1,schemaPath:"#/properties/excludes/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs17 === errors;if(!valid3){break;}}}else {validate45.errors = [{instancePath:instancePath+"/excludes",schemaPath:"#/properties/excludes/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs15 === errors;}else {var valid0 = true;}if(valid0){if(data.value !== undefined){const _errs19 = errors;if(typeof data.value !== "string"){validate45.errors = [{instancePath:instancePath+"/value",schemaPath:"#/properties/value/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs19 === errors;}else {var valid0 = true;}}}}}}}}}else {validate45.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate45.errors = vErrors;return errors === 0;}function validate44(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(!(data && typeof data == "object" && !Array.isArray(data))){validate44.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}const _errs1 = errors;let valid0 = false;let passing0 = null;const _errs2 = errors;if(data && typeof data == "object" && !Array.isArray(data)){const _errs3 = errors;for(const key0 in data){if(!(key0 === "signers")){const err0 = {instancePath,schemaPath:"#/oneOf/0/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"};if(vErrors === null){vErrors = [err0];}else {vErrors.push(err0);}errors++;break;}}if(_errs3 === errors){if(data.signers !== undefined){let data0 = data.signers;const _errs4 = errors;if(errors === _errs4){if(Array.isArray(data0)){var valid2 = true;const len0 = data0.length;for(let i0=0; i0<len0; i0++){const _errs6 = errors;if(!(validate45(data0[i0], {instancePath:instancePath+"/signers/" + i0,parentData:data0,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate45.errors : vErrors.concat(validate45.errors);errors = vErrors.length;}var valid2 = _errs6 === errors;if(!valid2){break;}}}else {const err1 = {instancePath:instancePath+"/signers",schemaPath:"#/oneOf/0/properties/signers/type",keyword:"type",params:{type: "array"},message:"must be array"};if(vErrors === null){vErrors = [err1];}else {vErrors.push(err1);}errors++;}}}}}var _valid0 = _errs2 === errors;if(_valid0){valid0 = true;passing0 = 0;}const _errs7 = errors;if(data && typeof data == "object" && !Array.isArray(data)){const _errs8 = errors;for(const key1 in data){if(!(key1 === "chain")){const err2 = {instancePath,schemaPath:"#/oneOf/1/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"};if(vErrors === null){vErrors = [err2];}else {vErrors.push(err2);}errors++;break;}}if(_errs8 === errors){if(data.chain !== undefined){let data2 = data.chain;const _errs9 = errors;if(errors === _errs9){if(Array.isArray(data2)){var valid4 = true;const len1 = data2.length;for(let i1=0; i1<len1; i1++){const _errs11 = errors;if(!(validate45(data2[i1], {instancePath:instancePath+"/chain/" + i1,parentData:data2,parentDataProperty:i1,rootData}))){vErrors = vErrors === null ? validate45.errors : vErrors.concat(validate45.errors);errors = vErrors.length;}var valid4 = _errs11 === errors;if(!valid4){break;}}}else {const err3 = {instancePath:instancePath+"/chain",schemaPath:"#/oneOf/1/properties/chain/type",keyword:"type",params:{type: "array"},message:"must be array"};if(vErrors === null){vErrors = [err3];}else {vErrors.push(err3);}errors++;}}}}}var _valid0 = _errs7 === errors;if(_valid0 && valid0){valid0 = false;passing0 = [passing0, 1];}else {if(_valid0){valid0 = true;passing0 = 1;}const _errs12 = errors;if(!(validate45(data, {instancePath,parentData,parentDataProperty,rootData}))){vErrors = vErrors === null ? validate45.errors : vErrors.concat(validate45.errors);errors = vErrors.length;}var _valid0 = _errs12 === errors;if(_valid0 && valid0){valid0 = false;passing0 = [passing0, 2];}else {if(_valid0){valid0 = true;passing0 = 2;}}}if(!valid0){const err4 = {instancePath,schemaPath:"#/oneOf",keyword:"oneOf",params:{passingSchemas: passing0},message:"must match exactly one schema in oneOf"};if(vErrors === null){vErrors = [err4];}else {vErrors.push(err4);}errors++;validate44.errors = vErrors;return false;}else {errors = _errs1;if(vErrors !== null){if(_errs1){vErrors.length = _errs1;}else {vErrors = null;}}}validate44.errors = vErrors;return errors === 0;}const wrapper0 = {validate: validate19};function validate19(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if(((data.type === undefined) && (missing0 = "type")) || ((data.name === undefined) && (missing0 = "name"))){validate19.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key0 in data){if(!(func2.call(schema19.properties, key0))){validate19.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.type !== undefined){let data0 = data.type;const _errs2 = errors;if(typeof data0 !== "string"){validate19.errors = [{instancePath:instancePath+"/type",schemaPath:"#/properties/type/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!((((((((data0 === "application") || (data0 === "framework")) || (data0 === "library")) || (data0 === "container")) || (data0 === "operating-system")) || (data0 === "device")) || (data0 === "firmware")) || (data0 === "file"))){validate19.errors = [{instancePath:instancePath+"/type",schemaPath:"#/properties/type/enum",keyword:"enum",params:{allowedValues: schema19.properties.type.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data["mime-type"] !== undefined){let data1 = data["mime-type"];const _errs4 = errors;if(errors === _errs4){if(typeof data1 === "string"){if(!pattern2.test(data1)){validate19.errors = [{instancePath:instancePath+"/mime-type",schemaPath:"#/properties/mime-type/pattern",keyword:"pattern",params:{pattern: "^[-+a-z0-9.]+/[-+a-z0-9.]+$"},message:"must match pattern \""+"^[-+a-z0-9.]+/[-+a-z0-9.]+$"+"\""}];return false;}}else {validate19.errors = [{instancePath:instancePath+"/mime-type",schemaPath:"#/properties/mime-type/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data["bom-ref"] !== undefined){const _errs6 = errors;if(typeof data["bom-ref"] !== "string"){validate19.errors = [{instancePath:instancePath+"/bom-ref",schemaPath:"#/definitions/refType/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs6 === errors;}else {var valid0 = true;}if(valid0){if(data.supplier !== undefined){const _errs10 = errors;if(!(validate20(data.supplier, {instancePath:instancePath+"/supplier",parentData:data,parentDataProperty:"supplier",rootData}))){vErrors = vErrors === null ? validate20.errors : vErrors.concat(validate20.errors);errors = vErrors.length;}var valid0 = _errs10 === errors;}else {var valid0 = true;}if(valid0){if(data.author !== undefined){const _errs11 = errors;if(typeof data.author !== "string"){validate19.errors = [{instancePath:instancePath+"/author",schemaPath:"#/properties/author/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs11 === errors;}else {var valid0 = true;}if(valid0){if(data.publisher !== undefined){const _errs13 = errors;if(typeof data.publisher !== "string"){validate19.errors = [{instancePath:instancePath+"/publisher",schemaPath:"#/properties/publisher/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs13 === errors;}else {var valid0 = true;}if(valid0){if(data.group !== undefined){const _errs15 = errors;if(typeof data.group !== "string"){validate19.errors = [{instancePath:instancePath+"/group",schemaPath:"#/properties/group/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs15 === errors;}else {var valid0 = true;}if(valid0){if(data.name !== undefined){const _errs17 = errors;if(typeof data.name !== "string"){validate19.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs17 === errors;}else {var valid0 = true;}if(valid0){if(data.version !== undefined){const _errs19 = errors;if(typeof data.version !== "string"){validate19.errors = [{instancePath:instancePath+"/version",schemaPath:"#/properties/version/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs19 === errors;}else {var valid0 = true;}if(valid0){if(data.description !== undefined){const _errs21 = errors;if(typeof data.description !== "string"){validate19.errors = [{instancePath:instancePath+"/description",schemaPath:"#/properties/description/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs21 === errors;}else {var valid0 = true;}if(valid0){if(data.scope !== undefined){let data10 = data.scope;const _errs23 = errors;if(typeof data10 !== "string"){validate19.errors = [{instancePath:instancePath+"/scope",schemaPath:"#/properties/scope/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!(((data10 === "required") || (data10 === "optional")) || (data10 === "excluded"))){validate19.errors = [{instancePath:instancePath+"/scope",schemaPath:"#/properties/scope/enum",keyword:"enum",params:{allowedValues: schema19.properties.scope.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs23 === errors;}else {var valid0 = true;}if(valid0){if(data.hashes !== undefined){let data11 = data.hashes;const _errs25 = errors;if(errors === _errs25){if(Array.isArray(data11)){var valid2 = true;const len0 = data11.length;for(let i0=0; i0<len0; i0++){const _errs27 = errors;if(!(validate13(data11[i0], {instancePath:instancePath+"/hashes/" + i0,parentData:data11,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate13.errors : vErrors.concat(validate13.errors);errors = vErrors.length;}var valid2 = _errs27 === errors;if(!valid2){break;}}}else {validate19.errors = [{instancePath:instancePath+"/hashes",schemaPath:"#/properties/hashes/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs25 === errors;}else {var valid0 = true;}if(valid0){if(data.licenses !== undefined){let data13 = data.licenses;const _errs28 = errors;if(errors === _errs28){if(Array.isArray(data13)){var valid3 = true;const len1 = data13.length;for(let i1=0; i1<len1; i1++){const _errs30 = errors;if(!(validate23(data13[i1], {instancePath:instancePath+"/licenses/" + i1,parentData:data13,parentDataProperty:i1,rootData}))){vErrors = vErrors === null ? validate23.errors : vErrors.concat(validate23.errors);errors = vErrors.length;}var valid3 = _errs30 === errors;if(!valid3){break;}}}else {validate19.errors = [{instancePath:instancePath+"/licenses",schemaPath:"#/properties/licenses/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs28 === errors;}else {var valid0 = true;}if(valid0){if(data.copyright !== undefined){const _errs31 = errors;if(typeof data.copyright !== "string"){validate19.errors = [{instancePath:instancePath+"/copyright",schemaPath:"#/properties/copyright/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs31 === errors;}else {var valid0 = true;}if(valid0){if(data.cpe !== undefined){const _errs33 = errors;if(typeof data.cpe !== "string"){validate19.errors = [{instancePath:instancePath+"/cpe",schemaPath:"#/properties/cpe/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs33 === errors;}else {var valid0 = true;}if(valid0){if(data.purl !== undefined){const _errs35 = errors;if(typeof data.purl !== "string"){validate19.errors = [{instancePath:instancePath+"/purl",schemaPath:"#/properties/purl/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs35 === errors;}else {var valid0 = true;}if(valid0){if(data.swid !== undefined){const _errs37 = errors;if(!(validate27(data.swid, {instancePath:instancePath+"/swid",parentData:data,parentDataProperty:"swid",rootData}))){vErrors = vErrors === null ? validate27.errors : vErrors.concat(validate27.errors);errors = vErrors.length;}var valid0 = _errs37 === errors;}else {var valid0 = true;}if(valid0){if(data.modified !== undefined){const _errs38 = errors;if(typeof data.modified !== "boolean"){validate19.errors = [{instancePath:instancePath+"/modified",schemaPath:"#/properties/modified/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs38 === errors;}else {var valid0 = true;}if(valid0){if(data.pedigree !== undefined){let data20 = data.pedigree;const _errs40 = errors;if(errors === _errs40){if(data20 && typeof data20 == "object" && !Array.isArray(data20)){const _errs42 = errors;for(const key1 in data20){if(!((((((key1 === "ancestors") || (key1 === "descendants")) || (key1 === "variants")) || (key1 === "commits")) || (key1 === "patches")) || (key1 === "notes"))){validate19.errors = [{instancePath:instancePath+"/pedigree",schemaPath:"#/properties/pedigree/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"}];return false;break;}}if(_errs42 === errors){if(data20.ancestors !== undefined){let data21 = data20.ancestors;const _errs43 = errors;if(errors === _errs43){if(Array.isArray(data21)){var valid5 = true;const len2 = data21.length;for(let i2=0; i2<len2; i2++){const _errs45 = errors;if(!(wrapper0.validate(data21[i2], {instancePath:instancePath+"/pedigree/ancestors/" + i2,parentData:data21,parentDataProperty:i2,rootData}))){vErrors = vErrors === null ? wrapper0.validate.errors : vErrors.concat(wrapper0.validate.errors);errors = vErrors.length;}var valid5 = _errs45 === errors;if(!valid5){break;}}}else {validate19.errors = [{instancePath:instancePath+"/pedigree/ancestors",schemaPath:"#/properties/pedigree/properties/ancestors/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid4 = _errs43 === errors;}else {var valid4 = true;}if(valid4){if(data20.descendants !== undefined){let data23 = data20.descendants;const _errs46 = errors;if(errors === _errs46){if(Array.isArray(data23)){var valid6 = true;const len3 = data23.length;for(let i3=0; i3<len3; i3++){const _errs48 = errors;if(!(wrapper0.validate(data23[i3], {instancePath:instancePath+"/pedigree/descendants/" + i3,parentData:data23,parentDataProperty:i3,rootData}))){vErrors = vErrors === null ? wrapper0.validate.errors : vErrors.concat(wrapper0.validate.errors);errors = vErrors.length;}var valid6 = _errs48 === errors;if(!valid6){break;}}}else {validate19.errors = [{instancePath:instancePath+"/pedigree/descendants",schemaPath:"#/properties/pedigree/properties/descendants/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid4 = _errs46 === errors;}else {var valid4 = true;}if(valid4){if(data20.variants !== undefined){let data25 = data20.variants;const _errs49 = errors;if(errors === _errs49){if(Array.isArray(data25)){var valid7 = true;const len4 = data25.length;for(let i4=0; i4<len4; i4++){const _errs51 = errors;if(!(wrapper0.validate(data25[i4], {instancePath:instancePath+"/pedigree/variants/" + i4,parentData:data25,parentDataProperty:i4,rootData}))){vErrors = vErrors === null ? wrapper0.validate.errors : vErrors.concat(wrapper0.validate.errors);errors = vErrors.length;}var valid7 = _errs51 === errors;if(!valid7){break;}}}else {validate19.errors = [{instancePath:instancePath+"/pedigree/variants",schemaPath:"#/properties/pedigree/properties/variants/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid4 = _errs49 === errors;}else {var valid4 = true;}if(valid4){if(data20.commits !== undefined){let data27 = data20.commits;const _errs52 = errors;if(errors === _errs52){if(Array.isArray(data27)){var valid8 = true;const len5 = data27.length;for(let i5=0; i5<len5; i5++){const _errs54 = errors;if(!(validate29(data27[i5], {instancePath:instancePath+"/pedigree/commits/" + i5,parentData:data27,parentDataProperty:i5,rootData}))){vErrors = vErrors === null ? validate29.errors : vErrors.concat(validate29.errors);errors = vErrors.length;}var valid8 = _errs54 === errors;if(!valid8){break;}}}else {validate19.errors = [{instancePath:instancePath+"/pedigree/commits",schemaPath:"#/properties/pedigree/properties/commits/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid4 = _errs52 === errors;}else {var valid4 = true;}if(valid4){if(data20.patches !== undefined){let data29 = data20.patches;const _errs55 = errors;if(errors === _errs55){if(Array.isArray(data29)){var valid9 = true;const len6 = data29.length;for(let i6=0; i6<len6; i6++){const _errs57 = errors;if(!(validate31(data29[i6], {instancePath:instancePath+"/pedigree/patches/" + i6,parentData:data29,parentDataProperty:i6,rootData}))){vErrors = vErrors === null ? validate31.errors : vErrors.concat(validate31.errors);errors = vErrors.length;}var valid9 = _errs57 === errors;if(!valid9){break;}}}else {validate19.errors = [{instancePath:instancePath+"/pedigree/patches",schemaPath:"#/properties/pedigree/properties/patches/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid4 = _errs55 === errors;}else {var valid4 = true;}if(valid4){if(data20.notes !== undefined){const _errs58 = errors;if(typeof data20.notes !== "string"){validate19.errors = [{instancePath:instancePath+"/pedigree/notes",schemaPath:"#/properties/pedigree/properties/notes/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid4 = _errs58 === errors;}else {var valid4 = true;}}}}}}}}else {validate19.errors = [{instancePath:instancePath+"/pedigree",schemaPath:"#/properties/pedigree/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs40 === errors;}else {var valid0 = true;}if(valid0){if(data.externalReferences !== undefined){let data32 = data.externalReferences;const _errs60 = errors;if(errors === _errs60){if(Array.isArray(data32)){var valid10 = true;const len7 = data32.length;for(let i7=0; i7<len7; i7++){const _errs62 = errors;if(!(validate15(data32[i7], {instancePath:instancePath+"/externalReferences/" + i7,parentData:data32,parentDataProperty:i7,rootData}))){vErrors = vErrors === null ? validate15.errors : vErrors.concat(validate15.errors);errors = vErrors.length;}var valid10 = _errs62 === errors;if(!valid10){break;}}}else {validate19.errors = [{instancePath:instancePath+"/externalReferences",schemaPath:"#/properties/externalReferences/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs60 === errors;}else {var valid0 = true;}if(valid0){if(data.components !== undefined){let data34 = data.components;const _errs63 = errors;if(errors === _errs63){if(Array.isArray(data34)){var valid11 = true;const len8 = data34.length;for(let i8=0; i8<len8; i8++){const _errs65 = errors;if(!(wrapper0.validate(data34[i8], {instancePath:instancePath+"/components/" + i8,parentData:data34,parentDataProperty:i8,rootData}))){vErrors = vErrors === null ? wrapper0.validate.errors : vErrors.concat(wrapper0.validate.errors);errors = vErrors.length;}var valid11 = _errs65 === errors;if(!valid11){break;}}if(valid11){let i9 = data34.length;let j0;if(i9 > 1){outer0:for(;i9--;){for(j0 = i9; j0--;){if(func0(data34[i9], data34[j0])){validate19.errors = [{instancePath:instancePath+"/components",schemaPath:"#/properties/components/uniqueItems",keyword:"uniqueItems",params:{i: i9, j: j0},message:"must NOT have duplicate items (items ## "+j0+" and "+i9+" are identical)"}];return false;break outer0;}}}}}}else {validate19.errors = [{instancePath:instancePath+"/components",schemaPath:"#/properties/components/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs63 === errors;}else {var valid0 = true;}if(valid0){if(data.evidence !== undefined){const _errs66 = errors;if(!(validate36(data.evidence, {instancePath:instancePath+"/evidence",parentData:data,parentDataProperty:"evidence",rootData}))){vErrors = vErrors === null ? validate36.errors : vErrors.concat(validate36.errors);errors = vErrors.length;}var valid0 = _errs66 === errors;}else {var valid0 = true;}if(valid0){if(data.releaseNotes !== undefined){const _errs67 = errors;if(!(validate39(data.releaseNotes, {instancePath:instancePath+"/releaseNotes",parentData:data,parentDataProperty:"releaseNotes",rootData}))){vErrors = vErrors === null ? validate39.errors : vErrors.concat(validate39.errors);errors = vErrors.length;}var valid0 = _errs67 === errors;}else {var valid0 = true;}if(valid0){if(data.properties !== undefined){let data38 = data.properties;const _errs68 = errors;if(errors === _errs68){if(Array.isArray(data38)){var valid13 = true;const len9 = data38.length;for(let i10=0; i10<len9; i10++){let data39 = data38[i10];const _errs70 = errors;const _errs71 = errors;if(errors === _errs71){if(data39 && typeof data39 == "object" && !Array.isArray(data39)){if(data39.name !== undefined){const _errs73 = errors;if(typeof data39.name !== "string"){validate19.errors = [{instancePath:instancePath+"/properties/" + i10+"/name",schemaPath:"#/definitions/property/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid15 = _errs73 === errors;}else {var valid15 = true;}if(valid15){if(data39.value !== undefined){const _errs75 = errors;if(typeof data39.value !== "string"){validate19.errors = [{instancePath:instancePath+"/properties/" + i10+"/value",schemaPath:"#/definitions/property/properties/value/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid15 = _errs75 === errors;}else {var valid15 = true;}}}else {validate19.errors = [{instancePath:instancePath+"/properties/" + i10,schemaPath:"#/definitions/property/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid13 = _errs70 === errors;if(!valid13){break;}}}else {validate19.errors = [{instancePath:instancePath+"/properties",schemaPath:"#/properties/properties/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs68 === errors;}else {var valid0 = true;}if(valid0){if(data.signature !== undefined){const _errs77 = errors;if(!(validate44(data.signature, {instancePath:instancePath+"/signature",parentData:data,parentDataProperty:"signature",rootData}))){vErrors = vErrors === null ? validate44.errors : vErrors.concat(validate44.errors);errors = vErrors.length;}var valid0 = _errs77 === errors;}else {var valid0 = true;}}}}}}}}}}}}}}}}}}}}}}}}}}}}else {validate19.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate19.errors = vErrors;return errors === 0;}function validate11(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){const _errs1 = errors;for(const key0 in data){if(!((((((((key0 === "timestamp") || (key0 === "tools")) || (key0 === "authors")) || (key0 === "component")) || (key0 === "manufacture")) || (key0 === "supplier")) || (key0 === "licenses")) || (key0 === "properties"))){validate11.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.timestamp !== undefined){let data0 = data.timestamp;const _errs2 = errors;if(errors === _errs2){if(errors === _errs2){if(typeof data0 === "string"){if(!(formats0.validate(data0))){validate11.errors = [{instancePath:instancePath+"/timestamp",schemaPath:"#/properties/timestamp/format",keyword:"format",params:{format: "date-time"},message:"must match format \""+"date-time"+"\""}];return false;}}else {validate11.errors = [{instancePath:instancePath+"/timestamp",schemaPath:"#/properties/timestamp/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.tools !== undefined){let data1 = data.tools;const _errs4 = errors;if(errors === _errs4){if(Array.isArray(data1)){var valid1 = true;const len0 = data1.length;for(let i0=0; i0<len0; i0++){const _errs6 = errors;if(!(validate12(data1[i0], {instancePath:instancePath+"/tools/" + i0,parentData:data1,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate12.errors : vErrors.concat(validate12.errors);errors = vErrors.length;}var valid1 = _errs6 === errors;if(!valid1){break;}}}else {validate11.errors = [{instancePath:instancePath+"/tools",schemaPath:"#/properties/tools/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data.authors !== undefined){let data3 = data.authors;const _errs7 = errors;if(errors === _errs7){if(Array.isArray(data3)){var valid2 = true;const len1 = data3.length;for(let i1=0; i1<len1; i1++){let data4 = data3[i1];const _errs9 = errors;const _errs10 = errors;if(errors === _errs10){if(data4 && typeof data4 == "object" && !Array.isArray(data4)){const _errs12 = errors;for(const key1 in data4){if(!(((key1 === "name") || (key1 === "email")) || (key1 === "phone"))){validate11.errors = [{instancePath:instancePath+"/authors/" + i1,schemaPath:"#/definitions/organizationalContact/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"}];return false;break;}}if(_errs12 === errors){if(data4.name !== undefined){const _errs13 = errors;if(typeof data4.name !== "string"){validate11.errors = [{instancePath:instancePath+"/authors/" + i1+"/name",schemaPath:"#/definitions/organizationalContact/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid4 = _errs13 === errors;}else {var valid4 = true;}if(valid4){if(data4.email !== undefined){let data6 = data4.email;const _errs15 = errors;if(errors === _errs15){if(errors === _errs15){if(typeof data6 === "string"){if(!(formats4(data6))){validate11.errors = [{instancePath:instancePath+"/authors/" + i1+"/email",schemaPath:"#/definitions/organizationalContact/properties/email/format",keyword:"format",params:{format: "idn-email"},message:"must match format \""+"idn-email"+"\""}];return false;}}else {validate11.errors = [{instancePath:instancePath+"/authors/" + i1+"/email",schemaPath:"#/definitions/organizationalContact/properties/email/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid4 = _errs15 === errors;}else {var valid4 = true;}if(valid4){if(data4.phone !== undefined){const _errs17 = errors;if(typeof data4.phone !== "string"){validate11.errors = [{instancePath:instancePath+"/authors/" + i1+"/phone",schemaPath:"#/definitions/organizationalContact/properties/phone/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid4 = _errs17 === errors;}else {var valid4 = true;}}}}}else {validate11.errors = [{instancePath:instancePath+"/authors/" + i1,schemaPath:"#/definitions/organizationalContact/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid2 = _errs9 === errors;if(!valid2){break;}}}else {validate11.errors = [{instancePath:instancePath+"/authors",schemaPath:"#/properties/authors/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs7 === errors;}else {var valid0 = true;}if(valid0){if(data.component !== undefined){const _errs19 = errors;if(!(validate19(data.component, {instancePath:instancePath+"/component",parentData:data,parentDataProperty:"component",rootData}))){vErrors = vErrors === null ? validate19.errors : vErrors.concat(validate19.errors);errors = vErrors.length;}var valid0 = _errs19 === errors;}else {var valid0 = true;}if(valid0){if(data.manufacture !== undefined){const _errs20 = errors;if(!(validate20(data.manufacture, {instancePath:instancePath+"/manufacture",parentData:data,parentDataProperty:"manufacture",rootData}))){vErrors = vErrors === null ? validate20.errors : vErrors.concat(validate20.errors);errors = vErrors.length;}var valid0 = _errs20 === errors;}else {var valid0 = true;}if(valid0){if(data.supplier !== undefined){const _errs21 = errors;if(!(validate20(data.supplier, {instancePath:instancePath+"/supplier",parentData:data,parentDataProperty:"supplier",rootData}))){vErrors = vErrors === null ? validate20.errors : vErrors.concat(validate20.errors);errors = vErrors.length;}var valid0 = _errs21 === errors;}else {var valid0 = true;}if(valid0){if(data.licenses !== undefined){let data11 = data.licenses;const _errs22 = errors;if(errors === _errs22){if(Array.isArray(data11)){var valid5 = true;const len2 = data11.length;for(let i2=0; i2<len2; i2++){const _errs24 = errors;if(!(validate23(data11[i2], {instancePath:instancePath+"/licenses/" + i2,parentData:data11,parentDataProperty:i2,rootData}))){vErrors = vErrors === null ? validate23.errors : vErrors.concat(validate23.errors);errors = vErrors.length;}var valid5 = _errs24 === errors;if(!valid5){break;}}}else {validate11.errors = [{instancePath:instancePath+"/licenses",schemaPath:"#/properties/licenses/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs22 === errors;}else {var valid0 = true;}if(valid0){if(data.properties !== undefined){let data13 = data.properties;const _errs25 = errors;if(errors === _errs25){if(Array.isArray(data13)){var valid6 = true;const len3 = data13.length;for(let i3=0; i3<len3; i3++){let data14 = data13[i3];const _errs27 = errors;const _errs28 = errors;if(errors === _errs28){if(data14 && typeof data14 == "object" && !Array.isArray(data14)){if(data14.name !== undefined){const _errs30 = errors;if(typeof data14.name !== "string"){validate11.errors = [{instancePath:instancePath+"/properties/" + i3+"/name",schemaPath:"#/definitions/property/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid8 = _errs30 === errors;}else {var valid8 = true;}if(valid8){if(data14.value !== undefined){const _errs32 = errors;if(typeof data14.value !== "string"){validate11.errors = [{instancePath:instancePath+"/properties/" + i3+"/value",schemaPath:"#/definitions/property/properties/value/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid8 = _errs32 === errors;}else {var valid8 = true;}}}else {validate11.errors = [{instancePath:instancePath+"/properties/" + i3,schemaPath:"#/definitions/property/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid6 = _errs27 === errors;if(!valid6){break;}}}else {validate11.errors = [{instancePath:instancePath+"/properties",schemaPath:"#/properties/properties/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs25 === errors;}else {var valid0 = true;}}}}}}}}}}else {validate11.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate11.errors = vErrors;return errors === 0;}const schema55 = {"type":"object","title":"Service Object","required":["name"],"additionalProperties":false,"properties":{"bom-ref":{"$ref":"#/definitions/refType","title":"BOM Reference","description":"An optional identifier which can be used to reference the service elsewhere in the BOM. Every bom-ref MUST be unique within the BOM."},"provider":{"title":"Provider","description":"The organization that provides the service.","$ref":"#/definitions/organizationalEntity"},"group":{"type":"string","title":"Service Group","description":"The grouping name, namespace, or identifier. This will often be a shortened, single name of the company or project that produced the service or domain name. Whitespace and special characters should be avoided.","examples":["com.acme"]},"name":{"type":"string","title":"Service Name","description":"The name of the service. This will often be a shortened, single name of the service.","examples":["ticker-service"]},"version":{"type":"string","title":"Service Version","description":"The service version.","examples":["1.0.0"]},"description":{"type":"string","title":"Service Description","description":"Specifies a description for the service"},"endpoints":{"type":"array","items":{"type":"string","format":"iri-reference"},"title":"Endpoints","description":"The endpoint URIs of the service. Multiple endpoints are allowed.","examples":["https://example.com/api/v1/ticker"]},"authenticated":{"type":"boolean","title":"Authentication Required","description":"A boolean value indicating if the service requires authentication. A value of true indicates the service requires authentication prior to use. A value of false indicates the service does not require authentication."},"x-trust-boundary":{"type":"boolean","title":"Crosses Trust Boundary","description":"A boolean value indicating if use of the service crosses a trust zone or boundary. A value of true indicates that by using the service, a trust boundary is crossed. A value of false indicates that by using the service, a trust boundary is not crossed."},"data":{"type":"array","additionalItems":false,"items":{"$ref":"#/definitions/dataClassification"},"title":"Data Classification","description":"Specifies the data classification."},"licenses":{"type":"array","additionalItems":false,"items":{"$ref":"#/definitions/licenseChoice"},"title":"Component License(s)"},"externalReferences":{"type":"array","additionalItems":false,"items":{"$ref":"#/definitions/externalReference"},"title":"External References","description":"External references provide a way to document systems, sites, and information that may be relevant but which are not included with the BOM."},"services":{"type":"array","additionalItems":false,"items":{"$ref":"#/definitions/service"},"uniqueItems":true,"title":"Services","description":"A list of services included or deployed behind the parent service. This is not a dependency tree. It provides a way to specify a hierarchical representation of service assemblies."},"releaseNotes":{"$ref":"#/definitions/releaseNotes","title":"Release notes","description":"Specifies optional release notes."},"properties":{"type":"array","title":"Properties","description":"Provides the ability to document properties in a name-value store. This provides flexibility to include data not officially supported in the standard without having to use additional namespaces or create extensions. Unlike key-value stores, properties support duplicate names, each potentially having different values. Property names of interest to the general public are encouraged to be registered in the [CycloneDX Property Taxonomy](https://github.com/CycloneDX/cyclonedx-property-taxonomy). Formal registration is OPTIONAL.","additionalItems":false,"items":{"$ref":"#/definitions/property"}},"signature":{"$ref":"#/definitions/signature","title":"Signature","description":"Enveloped signature in [JSON Signature Format (JSF)](https://cyberphone.github.io/doc/security/jsf.html)."}}};const schema57 = {"type":"object","title":"Hash Objects","required":["flow","classification"],"additionalProperties":false,"properties":{"flow":{"$ref":"#/definitions/dataFlow","title":"Directional Flow","description":"Specifies the flow direction of the data. Direction is relative to the service. Inbound flow states that data enters the service. Outbound flow states that data leaves the service. Bi-directional states that data flows both ways, and unknown states that the direction is not known."},"classification":{"type":"string","title":"Classification","description":"Data classification tags data according to its type, sensitivity, and value if altered, stolen, or destroyed."}}};const schema58 = {"type":"string","enum":["inbound","outbound","bi-directional","unknown"],"title":"Data flow direction","description":"Specifies the flow direction of the data. Direction is relative to the service. Inbound flow states that data enters the service. Outbound flow states that data leaves the service. Bi-directional states that data flows both ways, and unknown states that the direction is not known."};function validate60(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if(((data.flow === undefined) && (missing0 = "flow")) || ((data.classification === undefined) && (missing0 = "classification"))){validate60.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key0 in data){if(!((key0 === "flow") || (key0 === "classification"))){validate60.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.flow !== undefined){let data0 = data.flow;const _errs2 = errors;if(typeof data0 !== "string"){validate60.errors = [{instancePath:instancePath+"/flow",schemaPath:"#/definitions/dataFlow/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!((((data0 === "inbound") || (data0 === "outbound")) || (data0 === "bi-directional")) || (data0 === "unknown"))){validate60.errors = [{instancePath:instancePath+"/flow",schemaPath:"#/definitions/dataFlow/enum",keyword:"enum",params:{allowedValues: schema58.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.classification !== undefined){const _errs5 = errors;if(typeof data.classification !== "string"){validate60.errors = [{instancePath:instancePath+"/classification",schemaPath:"#/properties/classification/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs5 === errors;}else {var valid0 = true;}}}}}else {validate60.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate60.errors = vErrors;return errors === 0;}const wrapper4 = {validate: validate58};function validate58(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.name === undefined) && (missing0 = "name")){validate58.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key0 in data){if(!(func2.call(schema55.properties, key0))){validate58.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data["bom-ref"] !== undefined){const _errs2 = errors;if(typeof data["bom-ref"] !== "string"){validate58.errors = [{instancePath:instancePath+"/bom-ref",schemaPath:"#/definitions/refType/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.provider !== undefined){const _errs6 = errors;if(!(validate20(data.provider, {instancePath:instancePath+"/provider",parentData:data,parentDataProperty:"provider",rootData}))){vErrors = vErrors === null ? validate20.errors : vErrors.concat(validate20.errors);errors = vErrors.length;}var valid0 = _errs6 === errors;}else {var valid0 = true;}if(valid0){if(data.group !== undefined){const _errs7 = errors;if(typeof data.group !== "string"){validate58.errors = [{instancePath:instancePath+"/group",schemaPath:"#/properties/group/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs7 === errors;}else {var valid0 = true;}if(valid0){if(data.name !== undefined){const _errs9 = errors;if(typeof data.name !== "string"){validate58.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs9 === errors;}else {var valid0 = true;}if(valid0){if(data.version !== undefined){const _errs11 = errors;if(typeof data.version !== "string"){validate58.errors = [{instancePath:instancePath+"/version",schemaPath:"#/properties/version/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs11 === errors;}else {var valid0 = true;}if(valid0){if(data.description !== undefined){const _errs13 = errors;if(typeof data.description !== "string"){validate58.errors = [{instancePath:instancePath+"/description",schemaPath:"#/properties/description/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs13 === errors;}else {var valid0 = true;}if(valid0){if(data.endpoints !== undefined){let data6 = data.endpoints;const _errs15 = errors;if(errors === _errs15){if(Array.isArray(data6)){var valid2 = true;const len0 = data6.length;for(let i0=0; i0<len0; i0++){let data7 = data6[i0];const _errs17 = errors;if(errors === _errs17){if(errors === _errs17){if(typeof data7 === "string"){if(!(formats2(data7))){validate58.errors = [{instancePath:instancePath+"/endpoints/" + i0,schemaPath:"#/properties/endpoints/items/format",keyword:"format",params:{format: "iri-reference"},message:"must match format \""+"iri-reference"+"\""}];return false;}}else {validate58.errors = [{instancePath:instancePath+"/endpoints/" + i0,schemaPath:"#/properties/endpoints/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid2 = _errs17 === errors;if(!valid2){break;}}}else {validate58.errors = [{instancePath:instancePath+"/endpoints",schemaPath:"#/properties/endpoints/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs15 === errors;}else {var valid0 = true;}if(valid0){if(data.authenticated !== undefined){const _errs19 = errors;if(typeof data.authenticated !== "boolean"){validate58.errors = [{instancePath:instancePath+"/authenticated",schemaPath:"#/properties/authenticated/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs19 === errors;}else {var valid0 = true;}if(valid0){if(data["x-trust-boundary"] !== undefined){const _errs21 = errors;if(typeof data["x-trust-boundary"] !== "boolean"){validate58.errors = [{instancePath:instancePath+"/x-trust-boundary",schemaPath:"#/properties/x-trust-boundary/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs21 === errors;}else {var valid0 = true;}if(valid0){if(data.data !== undefined){let data10 = data.data;const _errs23 = errors;if(errors === _errs23){if(Array.isArray(data10)){var valid3 = true;const len1 = data10.length;for(let i1=0; i1<len1; i1++){const _errs25 = errors;if(!(validate60(data10[i1], {instancePath:instancePath+"/data/" + i1,parentData:data10,parentDataProperty:i1,rootData}))){vErrors = vErrors === null ? validate60.errors : vErrors.concat(validate60.errors);errors = vErrors.length;}var valid3 = _errs25 === errors;if(!valid3){break;}}}else {validate58.errors = [{instancePath:instancePath+"/data",schemaPath:"#/properties/data/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs23 === errors;}else {var valid0 = true;}if(valid0){if(data.licenses !== undefined){let data12 = data.licenses;const _errs26 = errors;if(errors === _errs26){if(Array.isArray(data12)){var valid4 = true;const len2 = data12.length;for(let i2=0; i2<len2; i2++){const _errs28 = errors;if(!(validate23(data12[i2], {instancePath:instancePath+"/licenses/" + i2,parentData:data12,parentDataProperty:i2,rootData}))){vErrors = vErrors === null ? validate23.errors : vErrors.concat(validate23.errors);errors = vErrors.length;}var valid4 = _errs28 === errors;if(!valid4){break;}}}else {validate58.errors = [{instancePath:instancePath+"/licenses",schemaPath:"#/properties/licenses/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs26 === errors;}else {var valid0 = true;}if(valid0){if(data.externalReferences !== undefined){let data14 = data.externalReferences;const _errs29 = errors;if(errors === _errs29){if(Array.isArray(data14)){var valid5 = true;const len3 = data14.length;for(let i3=0; i3<len3; i3++){const _errs31 = errors;if(!(validate15(data14[i3], {instancePath:instancePath+"/externalReferences/" + i3,parentData:data14,parentDataProperty:i3,rootData}))){vErrors = vErrors === null ? validate15.errors : vErrors.concat(validate15.errors);errors = vErrors.length;}var valid5 = _errs31 === errors;if(!valid5){break;}}}else {validate58.errors = [{instancePath:instancePath+"/externalReferences",schemaPath:"#/properties/externalReferences/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs29 === errors;}else {var valid0 = true;}if(valid0){if(data.services !== undefined){let data16 = data.services;const _errs32 = errors;if(errors === _errs32){if(Array.isArray(data16)){var valid6 = true;const len4 = data16.length;for(let i4=0; i4<len4; i4++){const _errs34 = errors;if(!(wrapper4.validate(data16[i4], {instancePath:instancePath+"/services/" + i4,parentData:data16,parentDataProperty:i4,rootData}))){vErrors = vErrors === null ? wrapper4.validate.errors : vErrors.concat(wrapper4.validate.errors);errors = vErrors.length;}var valid6 = _errs34 === errors;if(!valid6){break;}}if(valid6){let i5 = data16.length;let j0;if(i5 > 1){outer0:for(;i5--;){for(j0 = i5; j0--;){if(func0(data16[i5], data16[j0])){validate58.errors = [{instancePath:instancePath+"/services",schemaPath:"#/properties/services/uniqueItems",keyword:"uniqueItems",params:{i: i5, j: j0},message:"must NOT have duplicate items (items ## "+j0+" and "+i5+" are identical)"}];return false;break outer0;}}}}}}else {validate58.errors = [{instancePath:instancePath+"/services",schemaPath:"#/properties/services/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs32 === errors;}else {var valid0 = true;}if(valid0){if(data.releaseNotes !== undefined){const _errs35 = errors;if(!(validate39(data.releaseNotes, {instancePath:instancePath+"/releaseNotes",parentData:data,parentDataProperty:"releaseNotes",rootData}))){vErrors = vErrors === null ? validate39.errors : vErrors.concat(validate39.errors);errors = vErrors.length;}var valid0 = _errs35 === errors;}else {var valid0 = true;}if(valid0){if(data.properties !== undefined){let data19 = data.properties;const _errs36 = errors;if(errors === _errs36){if(Array.isArray(data19)){var valid8 = true;const len5 = data19.length;for(let i6=0; i6<len5; i6++){let data20 = data19[i6];const _errs38 = errors;const _errs39 = errors;if(errors === _errs39){if(data20 && typeof data20 == "object" && !Array.isArray(data20)){if(data20.name !== undefined){const _errs41 = errors;if(typeof data20.name !== "string"){validate58.errors = [{instancePath:instancePath+"/properties/" + i6+"/name",schemaPath:"#/definitions/property/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid10 = _errs41 === errors;}else {var valid10 = true;}if(valid10){if(data20.value !== undefined){const _errs43 = errors;if(typeof data20.value !== "string"){validate58.errors = [{instancePath:instancePath+"/properties/" + i6+"/value",schemaPath:"#/definitions/property/properties/value/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid10 = _errs43 === errors;}else {var valid10 = true;}}}else {validate58.errors = [{instancePath:instancePath+"/properties/" + i6,schemaPath:"#/definitions/property/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid8 = _errs38 === errors;if(!valid8){break;}}}else {validate58.errors = [{instancePath:instancePath+"/properties",schemaPath:"#/properties/properties/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs36 === errors;}else {var valid0 = true;}if(valid0){if(data.signature !== undefined){const _errs45 = errors;if(!(validate44(data.signature, {instancePath:instancePath+"/signature",parentData:data,parentDataProperty:"signature",rootData}))){vErrors = vErrors === null ? validate44.errors : vErrors.concat(validate44.errors);errors = vErrors.length;}var valid0 = _errs45 === errors;}else {var valid0 = true;}}}}}}}}}}}}}}}}}}}else {validate58.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate58.errors = vErrors;return errors === 0;}const schema60 = {"type":"object","title":"Dependency","description":"Defines the direct dependencies of a component. Components that do not have their own dependencies MUST be declared as empty elements within the graph. Components that are not represented in the dependency graph MAY have unknown dependencies. It is RECOMMENDED that implementations assume this to be opaque and not an indicator of a component being dependency-free.","required":["ref"],"additionalProperties":false,"properties":{"ref":{"$ref":"#/definitions/refType","title":"Reference","description":"References a component by the components bom-ref attribute"},"dependsOn":{"type":"array","uniqueItems":true,"additionalItems":false,"items":{"$ref":"#/definitions/refType"},"title":"Depends On","description":"The bom-ref identifiers of the components that are dependencies of this dependency object."}}};function validate68(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.ref === undefined) && (missing0 = "ref")){validate68.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key0 in data){if(!((key0 === "ref") || (key0 === "dependsOn"))){validate68.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.ref !== undefined){const _errs2 = errors;if(typeof data.ref !== "string"){validate68.errors = [{instancePath:instancePath+"/ref",schemaPath:"#/definitions/refType/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.dependsOn !== undefined){let data1 = data.dependsOn;const _errs6 = errors;if(errors === _errs6){if(Array.isArray(data1)){var valid2 = true;const len0 = data1.length;for(let i0=0; i0<len0; i0++){const _errs8 = errors;if(typeof data1[i0] !== "string"){validate68.errors = [{instancePath:instancePath+"/dependsOn/" + i0,schemaPath:"#/definitions/refType/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs8 === errors;if(!valid2){break;}}if(valid2){let i1 = data1.length;let j0;if(i1 > 1){outer0:for(;i1--;){for(j0 = i1; j0--;){if(func0(data1[i1], data1[j0])){validate68.errors = [{instancePath:instancePath+"/dependsOn",schemaPath:"#/properties/dependsOn/uniqueItems",keyword:"uniqueItems",params:{i: i1, j: j0},message:"must NOT have duplicate items (items ## "+j0+" and "+i1+" are identical)"}];return false;break outer0;}}}}}}else {validate68.errors = [{instancePath:instancePath+"/dependsOn",schemaPath:"#/properties/dependsOn/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs6 === errors;}else {var valid0 = true;}}}}}else {validate68.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate68.errors = vErrors;return errors === 0;}const schema63 = {"type":"object","title":"Compositions","required":["aggregate"],"additionalProperties":false,"properties":{"aggregate":{"$ref":"#/definitions/aggregateType","title":"Aggregate","description":"Specifies an aggregate type that describe how complete a relationship is."},"assemblies":{"type":"array","uniqueItems":true,"items":{"type":"string"},"title":"BOM references","description":"The bom-ref identifiers of the components or services being described. Assemblies refer to nested relationships whereby a constituent part may include other constituent parts. References do not cascade to child parts. References are explicit for the specified constituent part only."},"dependencies":{"type":"array","uniqueItems":true,"items":{"type":"string"},"title":"BOM references","description":"The bom-ref identifiers of the components or services being described. Dependencies refer to a relationship whereby an independent constituent part requires another independent constituent part. References do not cascade to transitive dependencies. References are explicit for the specified dependency only."},"signature":{"$ref":"#/definitions/signature","title":"Signature","description":"Enveloped signature in [JSON Signature Format (JSF)](https://cyberphone.github.io/doc/security/jsf.html)."}}};const schema64 = {"type":"string","default":"not_specified","enum":["complete","incomplete","incomplete_first_party_only","incomplete_third_party_only","unknown","not_specified"]};function validate70(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.aggregate === undefined) && (missing0 = "aggregate")){validate70.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key0 in data){if(!((((key0 === "aggregate") || (key0 === "assemblies")) || (key0 === "dependencies")) || (key0 === "signature"))){validate70.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.aggregate !== undefined){let data0 = data.aggregate;const _errs2 = errors;if(typeof data0 !== "string"){validate70.errors = [{instancePath:instancePath+"/aggregate",schemaPath:"#/definitions/aggregateType/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!((((((data0 === "complete") || (data0 === "incomplete")) || (data0 === "incomplete_first_party_only")) || (data0 === "incomplete_third_party_only")) || (data0 === "unknown")) || (data0 === "not_specified"))){validate70.errors = [{instancePath:instancePath+"/aggregate",schemaPath:"#/definitions/aggregateType/enum",keyword:"enum",params:{allowedValues: schema64.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.assemblies !== undefined){let data1 = data.assemblies;const _errs5 = errors;if(errors === _errs5){if(Array.isArray(data1)){var valid2 = true;const len0 = data1.length;for(let i0=0; i0<len0; i0++){const _errs7 = errors;if(typeof data1[i0] !== "string"){validate70.errors = [{instancePath:instancePath+"/assemblies/" + i0,schemaPath:"#/properties/assemblies/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs7 === errors;if(!valid2){break;}}if(valid2){let i1 = data1.length;let j0;if(i1 > 1){const indices0 = {};for(;i1--;){let item0 = data1[i1];if(typeof item0 !== "string"){continue;}if(typeof indices0[item0] == "number"){j0 = indices0[item0];validate70.errors = [{instancePath:instancePath+"/assemblies",schemaPath:"#/properties/assemblies/uniqueItems",keyword:"uniqueItems",params:{i: i1, j: j0},message:"must NOT have duplicate items (items ## "+j0+" and "+i1+" are identical)"}];return false;break;}indices0[item0] = i1;}}}}else {validate70.errors = [{instancePath:instancePath+"/assemblies",schemaPath:"#/properties/assemblies/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs5 === errors;}else {var valid0 = true;}if(valid0){if(data.dependencies !== undefined){let data3 = data.dependencies;const _errs9 = errors;if(errors === _errs9){if(Array.isArray(data3)){var valid4 = true;const len1 = data3.length;for(let i2=0; i2<len1; i2++){const _errs11 = errors;if(typeof data3[i2] !== "string"){validate70.errors = [{instancePath:instancePath+"/dependencies/" + i2,schemaPath:"#/properties/dependencies/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid4 = _errs11 === errors;if(!valid4){break;}}if(valid4){let i3 = data3.length;let j1;if(i3 > 1){const indices1 = {};for(;i3--;){let item1 = data3[i3];if(typeof item1 !== "string"){continue;}if(typeof indices1[item1] == "number"){j1 = indices1[item1];validate70.errors = [{instancePath:instancePath+"/dependencies",schemaPath:"#/properties/dependencies/uniqueItems",keyword:"uniqueItems",params:{i: i3, j: j1},message:"must NOT have duplicate items (items ## "+j1+" and "+i3+" are identical)"}];return false;break;}indices1[item1] = i3;}}}}else {validate70.errors = [{instancePath:instancePath+"/dependencies",schemaPath:"#/properties/dependencies/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs9 === errors;}else {var valid0 = true;}if(valid0){if(data.signature !== undefined){const _errs13 = errors;if(!(validate44(data.signature, {instancePath:instancePath+"/signature",parentData:data,parentDataProperty:"signature",rootData}))){vErrors = vErrors === null ? validate44.errors : vErrors.concat(validate44.errors);errors = vErrors.length;}var valid0 = _errs13 === errors;}else {var valid0 = true;}}}}}}}else {validate70.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate70.errors = vErrors;return errors === 0;}const schema65 = {"type":"object","title":"Vulnerability","description":"Defines a weakness in an component or service that could be exploited or triggered by a threat source.","additionalProperties":false,"properties":{"bom-ref":{"$ref":"#/definitions/refType","title":"BOM Reference","description":"An optional identifier which can be used to reference the vulnerability elsewhere in the BOM. Every bom-ref MUST be unique within the BOM."},"id":{"type":"string","title":"ID","description":"The identifier that uniquely identifies the vulnerability.","examples":["CVE-2021-39182","GHSA-35m5-8cvj-8783","SNYK-PYTHON-ENROCRYPT-1912876"]},"source":{"$ref":"#/definitions/vulnerabilitySource","description":"The source that published the vulnerability."},"references":{"type":"array","title":"References","description":"Zero or more pointers to vulnerabilities that are the equivalent of the vulnerability specified. Often times, the same vulnerability may exist in multiple sources of vulnerability intelligence, but have different identifiers. References provide a way to correlate vulnerabilities across multiple sources of vulnerability intelligence.","additionalItems":false,"items":{"required":["id","source"],"additionalProperties":false,"properties":{"id":{"type":"string","title":"ID","description":"An identifier that uniquely identifies the vulnerability.","examples":["CVE-2021-39182","GHSA-35m5-8cvj-8783","SNYK-PYTHON-ENROCRYPT-1912876"]},"source":{"$ref":"#/definitions/vulnerabilitySource","description":"The source that published the vulnerability."}}}},"ratings":{"type":"array","title":"Ratings","description":"List of vulnerability ratings","additionalItems":false,"items":{"$ref":"#/definitions/rating"}},"cwes":{"type":"array","title":"CWEs","description":"List of Common Weaknesses Enumerations (CWEs) codes that describes this vulnerability. For example 399 (of https://cwe.mitre.org/data/definitions/399.html)","examples":[399],"additionalItems":false,"items":{"$ref":"#/definitions/cwe"}},"description":{"type":"string","title":"Description","description":"A description of the vulnerability as provided by the source."},"detail":{"type":"string","title":"Details","description":"If available, an in-depth description of the vulnerability as provided by the source organization. Details often include examples, proof-of-concepts, and other information useful in understanding root cause."},"recommendation":{"type":"string","title":"Details","description":"Recommendations of how the vulnerability can be remediated or mitigated."},"advisories":{"type":"array","title":"Advisories","description":"Published advisories of the vulnerability if provided.","additionalItems":false,"items":{"$ref":"#/definitions/advisory"}},"created":{"type":"string","format":"date-time","title":"Created","description":"The date and time (timestamp) when the vulnerability record was created in the vulnerability database."},"published":{"type":"string","format":"date-time","title":"Published","description":"The date and time (timestamp) when the vulnerability record was first published."},"updated":{"type":"string","format":"date-time","title":"Updated","description":"The date and time (timestamp) when the vulnerability record was last updated."},"credits":{"type":"object","title":"Credits","description":"Individuals or organizations credited with the discovery of the vulnerability.","additionalProperties":false,"properties":{"organizations":{"type":"array","title":"Organizations","description":"The organizations credited with vulnerability discovery.","additionalItems":false,"items":{"$ref":"#/definitions/organizationalEntity"}},"individuals":{"type":"array","title":"Individuals","description":"The individuals, not associated with organizations, that are credited with vulnerability discovery.","additionalItems":false,"items":{"$ref":"#/definitions/organizationalContact"}}}},"tools":{"type":"array","title":"Creation Tools","description":"The tool(s) used to identify, confirm, or score the vulnerability.","additionalItems":false,"items":{"$ref":"#/definitions/tool"}},"analysis":{"type":"object","title":"Impact Analysis","description":"An assessment of the impact and exploitability of the vulnerability.","additionalProperties":false,"properties":{"state":{"$ref":"#/definitions/impactAnalysisState"},"justification":{"$ref":"#/definitions/impactAnalysisJustification"},"response":{"type":"array","title":"Response","description":"A response to the vulnerability by the manufacturer, supplier, or project responsible for the affected component or service. More than one response is allowed. Responses are strongly encouraged for vulnerabilities where the analysis state is exploitable.","additionalItems":false,"items":{"type":"string","enum":["can_not_fix","will_not_fix","update","rollback","workaround_available"]}},"detail":{"type":"string","title":"Detail","description":"Detailed description of the impact including methods used during assessment. If a vulnerability is not exploitable, this field should include specific details on why the component or service is not impacted by this vulnerability."}}},"affects":{"type":"array","uniqueItems":true,"additionalItems":false,"items":{"required":["ref"],"additionalProperties":false,"properties":{"ref":{"$ref":"#/definitions/refType","title":"Reference","description":"References a component or service by the objects bom-ref"},"versions":{"type":"array","title":"Versions","description":"Zero or more individual versions or range of versions.","additionalItems":false,"items":{"oneOf":[{"required":["version"]},{"required":["range"]}],"additionalProperties":false,"properties":{"version":{"description":"A single version of a component or service.","$ref":"#/definitions/version"},"range":{"description":"A version range specified in Package URL Version Range syntax (vers) which is defined at https://github.com/package-url/purl-spec/VERSION-RANGE-SPEC.rst","$ref":"#/definitions/version"},"status":{"description":"The vulnerability status for the version or range of versions.","$ref":"#/definitions/affectedStatus","default":"affected"}}}}}},"title":"Affects","description":"The components or services that are affected by the vulnerability."},"properties":{"type":"array","title":"Properties","description":"Provides the ability to document properties in a name-value store. This provides flexibility to include data not officially supported in the standard without having to use additional namespaces or create extensions. Unlike key-value stores, properties support duplicate names, each potentially having different values. Property names of interest to the general public are encouraged to be registered in the [CycloneDX Property Taxonomy](https://github.com/CycloneDX/cyclonedx-property-taxonomy). Formal registration is OPTIONAL.","additionalItems":false,"items":{"$ref":"#/definitions/property"}}}};const schema67 = {"type":"object","title":"Source","description":"The source of vulnerability information. This is often the organization that published the vulnerability.","additionalProperties":false,"properties":{"url":{"type":"string","title":"URL","description":"The url of the vulnerability documentation as provided by the source.","examples":["https://nvd.nist.gov/vuln/detail/CVE-2021-39182"]},"name":{"type":"string","title":"Name","description":"The name of the source.","examples":["NVD","National Vulnerability Database","OSS Index","VulnDB","GitHub Advisories"]}}};const schema73 = {"type":"integer","minimum":1,"title":"CWE","description":"Integer representation of a Common Weaknesses Enumerations (CWE). For example 399 (of https://cwe.mitre.org/data/definitions/399.html)"};const schema74 = {"type":"object","title":"Advisory","description":"Title and location where advisory information can be obtained. An advisory is a notification of a threat to a component, service, or system.","required":["url"],"additionalProperties":false,"properties":{"title":{"type":"string","title":"Title","description":"An optional name of the advisory."},"url":{"type":"string","title":"URL","format":"iri-reference","description":"Location where the advisory can be obtained."}}};const schema76 = {"type":"string","title":"Impact Analysis State","description":"Declares the current state of an occurrence of a vulnerability, after automated or manual analysis. \n\n* __resolved__ = the vulnerability has been remediated. \n* __resolved\\_with\\_pedigree__ = the vulnerability has been remediated and evidence of the changes are provided in the affected components pedigree containing verifiable commit history and/or diff(s). \n* __exploitable__ = the vulnerability may be directly or indirectly exploitable. \n* __in\\_triage__ = the vulnerability is being investigated. \n* __false\\_positive__ = the vulnerability is not specific to the component or service and was falsely identified or associated. \n* __not\\_affected__ = the component or service is not affected by the vulnerability. Justification should be specified for all not_affected cases.","enum":["resolved","resolved_with_pedigree","exploitable","in_triage","false_positive","not_affected"]};const schema77 = {"type":"string","title":"Impact Analysis Justification","description":"The rationale of why the impact analysis state was asserted. \n\n* __code\\_not\\_present__ = the code has been removed or tree-shaked. \n* __code\\_not\\_reachable__ = the vulnerable code is not invoked at runtime. \n* __requires\\_configuration__ = exploitability requires a configurable option to be set/unset. \n* __requires\\_dependency__ = exploitability requires a dependency that is not present. \n* __requires\\_environment__ = exploitability requires a certain environment which is not present. \n* __protected\\_by\\_compiler__ = exploitability requires a compiler flag to be set/unset. \n* __protected\\_at\\_runtime__ = exploits are prevented at runtime. \n* __protected\\_at\\_perimeter__ = attacks are blocked at physical, logical, or network perimeter. \n* __protected\\_by\\_mitigating\\_control__ = preventative measures have been implemented that reduce the likelihood and/or impact of the vulnerability.","enum":["code_not_present","code_not_reachable","requires_configuration","requires_dependency","requires_environment","protected_by_compiler","protected_at_runtime","protected_at_perimeter","protected_by_mitigating_control"]};const schema79 = {"description":"A single version of a component or service.","type":"string","minLength":1,"maxLength":1024};const schema81 = {"description":"The vulnerability status of a given version or range of versions of a product. The statuses 'affected' and 'unaffected' indicate that the version is affected or unaffected by the vulnerability. The status 'unknown' indicates that it is unknown or unspecified whether the given version is affected. There can be many reasons for an 'unknown' status, including that an investigation has not been undertaken or that a vendor has not disclosed the status.","type":"string","enum":["affected","unaffected","unknown"]};const func15 = require("ajv/dist/runtime/ucs2length").default;const schema69 = {"type":"object","title":"Rating","description":"Defines the severity or risk ratings of a vulnerability.","additionalProperties":false,"properties":{"source":{"$ref":"#/definitions/vulnerabilitySource","description":"The source that calculated the severity or risk rating of the vulnerability."},"score":{"type":"number","title":"Score","description":"The numerical score of the rating."},"severity":{"$ref":"#/definitions/severity","description":"Textual representation of the severity that corresponds to the numerical score of the rating."},"method":{"$ref":"#/definitions/scoreMethod"},"vector":{"type":"string","title":"Vector","description":"Textual representation of the metric values used to score the vulnerability"},"justification":{"type":"string","title":"Justification","description":"An optional reason for rating the vulnerability as it was"}}};const schema71 = {"type":"string","title":"Severity","description":"Textual representation of the severity of the vulnerability adopted by the analysis method. If the analysis method uses values other than what is provided, the user is expected to translate appropriately.","enum":["critical","high","medium","low","info","none","unknown"]};const schema72 = {"type":"string","title":"Method","description":"Specifies the severity or risk scoring methodology or standard used.\n\n* CVSSv2 - [Common Vulnerability Scoring System v2](https://www.first.org/cvss/v2/)\n* CVSSv3 - [Common Vulnerability Scoring System v3](https://www.first.org/cvss/v3-0/)\n* CVSSv31 - [Common Vulnerability Scoring System v3.1](https://www.first.org/cvss/v3-1/)\n* OWASP - [OWASP Risk Rating Methodology](https://owasp.org/www-community/OWASP_Risk_Rating_Methodology)","enum":["CVSSv2","CVSSv3","CVSSv31","OWASP","other"]};function validate74(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){const _errs1 = errors;for(const key0 in data){if(!((((((key0 === "source") || (key0 === "score")) || (key0 === "severity")) || (key0 === "method")) || (key0 === "vector")) || (key0 === "justification"))){validate74.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.source !== undefined){let data0 = data.source;const _errs2 = errors;const _errs3 = errors;if(errors === _errs3){if(data0 && typeof data0 == "object" && !Array.isArray(data0)){const _errs5 = errors;for(const key1 in data0){if(!((key1 === "url") || (key1 === "name"))){validate74.errors = [{instancePath:instancePath+"/source",schemaPath:"#/definitions/vulnerabilitySource/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"}];return false;break;}}if(_errs5 === errors){if(data0.url !== undefined){const _errs6 = errors;if(typeof data0.url !== "string"){validate74.errors = [{instancePath:instancePath+"/source/url",schemaPath:"#/definitions/vulnerabilitySource/properties/url/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs6 === errors;}else {var valid2 = true;}if(valid2){if(data0.name !== undefined){const _errs8 = errors;if(typeof data0.name !== "string"){validate74.errors = [{instancePath:instancePath+"/source/name",schemaPath:"#/definitions/vulnerabilitySource/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs8 === errors;}else {var valid2 = true;}}}}else {validate74.errors = [{instancePath:instancePath+"/source",schemaPath:"#/definitions/vulnerabilitySource/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.score !== undefined){const _errs10 = errors;if(!(typeof data.score == "number")){validate74.errors = [{instancePath:instancePath+"/score",schemaPath:"#/properties/score/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}var valid0 = _errs10 === errors;}else {var valid0 = true;}if(valid0){if(data.severity !== undefined){let data4 = data.severity;const _errs12 = errors;if(typeof data4 !== "string"){validate74.errors = [{instancePath:instancePath+"/severity",schemaPath:"#/definitions/severity/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!(((((((data4 === "critical") || (data4 === "high")) || (data4 === "medium")) || (data4 === "low")) || (data4 === "info")) || (data4 === "none")) || (data4 === "unknown"))){validate74.errors = [{instancePath:instancePath+"/severity",schemaPath:"#/definitions/severity/enum",keyword:"enum",params:{allowedValues: schema71.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs12 === errors;}else {var valid0 = true;}if(valid0){if(data.method !== undefined){let data5 = data.method;const _errs15 = errors;if(typeof data5 !== "string"){validate74.errors = [{instancePath:instancePath+"/method",schemaPath:"#/definitions/scoreMethod/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!(((((data5 === "CVSSv2") || (data5 === "CVSSv3")) || (data5 === "CVSSv31")) || (data5 === "OWASP")) || (data5 === "other"))){validate74.errors = [{instancePath:instancePath+"/method",schemaPath:"#/definitions/scoreMethod/enum",keyword:"enum",params:{allowedValues: schema72.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs15 === errors;}else {var valid0 = true;}if(valid0){if(data.vector !== undefined){const _errs18 = errors;if(typeof data.vector !== "string"){validate74.errors = [{instancePath:instancePath+"/vector",schemaPath:"#/properties/vector/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs18 === errors;}else {var valid0 = true;}if(valid0){if(data.justification !== undefined){const _errs20 = errors;if(typeof data.justification !== "string"){validate74.errors = [{instancePath:instancePath+"/justification",schemaPath:"#/properties/justification/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs20 === errors;}else {var valid0 = true;}}}}}}}}else {validate74.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate74.errors = vErrors;return errors === 0;}function validate73(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){const _errs1 = errors;for(const key0 in data){if(!(func2.call(schema65.properties, key0))){validate73.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data["bom-ref"] !== undefined){const _errs2 = errors;if(typeof data["bom-ref"] !== "string"){validate73.errors = [{instancePath:instancePath+"/bom-ref",schemaPath:"#/definitions/refType/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.id !== undefined){const _errs6 = errors;if(typeof data.id !== "string"){validate73.errors = [{instancePath:instancePath+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs6 === errors;}else {var valid0 = true;}if(valid0){if(data.source !== undefined){let data2 = data.source;const _errs8 = errors;const _errs9 = errors;if(errors === _errs9){if(data2 && typeof data2 == "object" && !Array.isArray(data2)){const _errs11 = errors;for(const key1 in data2){if(!((key1 === "url") || (key1 === "name"))){validate73.errors = [{instancePath:instancePath+"/source",schemaPath:"#/definitions/vulnerabilitySource/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"}];return false;break;}}if(_errs11 === errors){if(data2.url !== undefined){const _errs12 = errors;if(typeof data2.url !== "string"){validate73.errors = [{instancePath:instancePath+"/source/url",schemaPath:"#/definitions/vulnerabilitySource/properties/url/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs12 === errors;}else {var valid3 = true;}if(valid3){if(data2.name !== undefined){const _errs14 = errors;if(typeof data2.name !== "string"){validate73.errors = [{instancePath:instancePath+"/source/name",schemaPath:"#/definitions/vulnerabilitySource/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs14 === errors;}else {var valid3 = true;}}}}else {validate73.errors = [{instancePath:instancePath+"/source",schemaPath:"#/definitions/vulnerabilitySource/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs8 === errors;}else {var valid0 = true;}if(valid0){if(data.references !== undefined){let data5 = data.references;const _errs16 = errors;if(errors === _errs16){if(Array.isArray(data5)){var valid4 = true;const len0 = data5.length;for(let i0=0; i0<len0; i0++){let data6 = data5[i0];const _errs18 = errors;if(data6 && typeof data6 == "object" && !Array.isArray(data6)){let missing0;if(((data6.id === undefined) && (missing0 = "id")) || ((data6.source === undefined) && (missing0 = "source"))){validate73.errors = [{instancePath:instancePath+"/references/" + i0,schemaPath:"#/properties/references/items/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs19 = errors;for(const key2 in data6){if(!((key2 === "id") || (key2 === "source"))){validate73.errors = [{instancePath:instancePath+"/references/" + i0,schemaPath:"#/properties/references/items/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key2},message:"must NOT have additional properties"}];return false;break;}}if(_errs19 === errors){if(data6.id !== undefined){const _errs20 = errors;if(typeof data6.id !== "string"){validate73.errors = [{instancePath:instancePath+"/references/" + i0+"/id",schemaPath:"#/properties/references/items/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid5 = _errs20 === errors;}else {var valid5 = true;}if(valid5){if(data6.source !== undefined){let data8 = data6.source;const _errs22 = errors;const _errs23 = errors;if(errors === _errs23){if(data8 && typeof data8 == "object" && !Array.isArray(data8)){const _errs25 = errors;for(const key3 in data8){if(!((key3 === "url") || (key3 === "name"))){validate73.errors = [{instancePath:instancePath+"/references/" + i0+"/source",schemaPath:"#/definitions/vulnerabilitySource/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key3},message:"must NOT have additional properties"}];return false;break;}}if(_errs25 === errors){if(data8.url !== undefined){const _errs26 = errors;if(typeof data8.url !== "string"){validate73.errors = [{instancePath:instancePath+"/references/" + i0+"/source/url",schemaPath:"#/definitions/vulnerabilitySource/properties/url/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid7 = _errs26 === errors;}else {var valid7 = true;}if(valid7){if(data8.name !== undefined){const _errs28 = errors;if(typeof data8.name !== "string"){validate73.errors = [{instancePath:instancePath+"/references/" + i0+"/source/name",schemaPath:"#/definitions/vulnerabilitySource/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid7 = _errs28 === errors;}else {var valid7 = true;}}}}else {validate73.errors = [{instancePath:instancePath+"/references/" + i0+"/source",schemaPath:"#/definitions/vulnerabilitySource/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid5 = _errs22 === errors;}else {var valid5 = true;}}}}}var valid4 = _errs18 === errors;if(!valid4){break;}}}else {validate73.errors = [{instancePath:instancePath+"/references",schemaPath:"#/properties/references/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs16 === errors;}else {var valid0 = true;}if(valid0){if(data.ratings !== undefined){let data11 = data.ratings;const _errs30 = errors;if(errors === _errs30){if(Array.isArray(data11)){var valid8 = true;const len1 = data11.length;for(let i1=0; i1<len1; i1++){const _errs32 = errors;if(!(validate74(data11[i1], {instancePath:instancePath+"/ratings/" + i1,parentData:data11,parentDataProperty:i1,rootData}))){vErrors = vErrors === null ? validate74.errors : vErrors.concat(validate74.errors);errors = vErrors.length;}var valid8 = _errs32 === errors;if(!valid8){break;}}}else {validate73.errors = [{instancePath:instancePath+"/ratings",schemaPath:"#/properties/ratings/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs30 === errors;}else {var valid0 = true;}if(valid0){if(data.cwes !== undefined){let data13 = data.cwes;const _errs33 = errors;if(errors === _errs33){if(Array.isArray(data13)){var valid9 = true;const len2 = data13.length;for(let i2=0; i2<len2; i2++){let data14 = data13[i2];const _errs35 = errors;const _errs36 = errors;if(!((typeof data14 == "number") && (!(data14 % 1) && !isNaN(data14)))){validate73.errors = [{instancePath:instancePath+"/cwes/" + i2,schemaPath:"#/definitions/cwe/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}if(errors === _errs36){if(typeof data14 == "number"){if(data14 < 1 || isNaN(data14)){validate73.errors = [{instancePath:instancePath+"/cwes/" + i2,schemaPath:"#/definitions/cwe/minimum",keyword:"minimum",params:{comparison: ">=", limit: 1},message:"must be >= 1"}];return false;}}}var valid9 = _errs35 === errors;if(!valid9){break;}}}else {validate73.errors = [{instancePath:instancePath+"/cwes",schemaPath:"#/properties/cwes/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs33 === errors;}else {var valid0 = true;}if(valid0){if(data.description !== undefined){const _errs38 = errors;if(typeof data.description !== "string"){validate73.errors = [{instancePath:instancePath+"/description",schemaPath:"#/properties/description/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs38 === errors;}else {var valid0 = true;}if(valid0){if(data.detail !== undefined){const _errs40 = errors;if(typeof data.detail !== "string"){validate73.errors = [{instancePath:instancePath+"/detail",schemaPath:"#/properties/detail/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs40 === errors;}else {var valid0 = true;}if(valid0){if(data.recommendation !== undefined){const _errs42 = errors;if(typeof data.recommendation !== "string"){validate73.errors = [{instancePath:instancePath+"/recommendation",schemaPath:"#/properties/recommendation/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs42 === errors;}else {var valid0 = true;}if(valid0){if(data.advisories !== undefined){let data18 = data.advisories;const _errs44 = errors;if(errors === _errs44){if(Array.isArray(data18)){var valid11 = true;const len3 = data18.length;for(let i3=0; i3<len3; i3++){let data19 = data18[i3];const _errs46 = errors;const _errs47 = errors;if(errors === _errs47){if(data19 && typeof data19 == "object" && !Array.isArray(data19)){let missing1;if((data19.url === undefined) && (missing1 = "url")){validate73.errors = [{instancePath:instancePath+"/advisories/" + i3,schemaPath:"#/definitions/advisory/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {const _errs49 = errors;for(const key4 in data19){if(!((key4 === "title") || (key4 === "url"))){validate73.errors = [{instancePath:instancePath+"/advisories/" + i3,schemaPath:"#/definitions/advisory/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key4},message:"must NOT have additional properties"}];return false;break;}}if(_errs49 === errors){if(data19.title !== undefined){const _errs50 = errors;if(typeof data19.title !== "string"){validate73.errors = [{instancePath:instancePath+"/advisories/" + i3+"/title",schemaPath:"#/definitions/advisory/properties/title/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid13 = _errs50 === errors;}else {var valid13 = true;}if(valid13){if(data19.url !== undefined){let data21 = data19.url;const _errs52 = errors;if(errors === _errs52){if(errors === _errs52){if(typeof data21 === "string"){if(!(formats2(data21))){validate73.errors = [{instancePath:instancePath+"/advisories/" + i3+"/url",schemaPath:"#/definitions/advisory/properties/url/format",keyword:"format",params:{format: "iri-reference"},message:"must match format \""+"iri-reference"+"\""}];return false;}}else {validate73.errors = [{instancePath:instancePath+"/advisories/" + i3+"/url",schemaPath:"#/definitions/advisory/properties/url/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid13 = _errs52 === errors;}else {var valid13 = true;}}}}}else {validate73.errors = [{instancePath:instancePath+"/advisories/" + i3,schemaPath:"#/definitions/advisory/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid11 = _errs46 === errors;if(!valid11){break;}}}else {validate73.errors = [{instancePath:instancePath+"/advisories",schemaPath:"#/properties/advisories/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs44 === errors;}else {var valid0 = true;}if(valid0){if(data.created !== undefined){let data22 = data.created;const _errs54 = errors;if(errors === _errs54){if(errors === _errs54){if(typeof data22 === "string"){if(!(formats0.validate(data22))){validate73.errors = [{instancePath:instancePath+"/created",schemaPath:"#/properties/created/format",keyword:"format",params:{format: "date-time"},message:"must match format \""+"date-time"+"\""}];return false;}}else {validate73.errors = [{instancePath:instancePath+"/created",schemaPath:"#/properties/created/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs54 === errors;}else {var valid0 = true;}if(valid0){if(data.published !== undefined){let data23 = data.published;const _errs56 = errors;if(errors === _errs56){if(errors === _errs56){if(typeof data23 === "string"){if(!(formats0.validate(data23))){validate73.errors = [{instancePath:instancePath+"/published",schemaPath:"#/properties/published/format",keyword:"format",params:{format: "date-time"},message:"must match format \""+"date-time"+"\""}];return false;}}else {validate73.errors = [{instancePath:instancePath+"/published",schemaPath:"#/properties/published/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs56 === errors;}else {var valid0 = true;}if(valid0){if(data.updated !== undefined){let data24 = data.updated;const _errs58 = errors;if(errors === _errs58){if(errors === _errs58){if(typeof data24 === "string"){if(!(formats0.validate(data24))){validate73.errors = [{instancePath:instancePath+"/updated",schemaPath:"#/properties/updated/format",keyword:"format",params:{format: "date-time"},message:"must match format \""+"date-time"+"\""}];return false;}}else {validate73.errors = [{instancePath:instancePath+"/updated",schemaPath:"#/properties/updated/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs58 === errors;}else {var valid0 = true;}if(valid0){if(data.credits !== undefined){let data25 = data.credits;const _errs60 = errors;if(errors === _errs60){if(data25 && typeof data25 == "object" && !Array.isArray(data25)){const _errs62 = errors;for(const key5 in data25){if(!((key5 === "organizations") || (key5 === "individuals"))){validate73.errors = [{instancePath:instancePath+"/credits",schemaPath:"#/properties/credits/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key5},message:"must NOT have additional properties"}];return false;break;}}if(_errs62 === errors){if(data25.organizations !== undefined){let data26 = data25.organizations;const _errs63 = errors;if(errors === _errs63){if(Array.isArray(data26)){var valid15 = true;const len4 = data26.length;for(let i4=0; i4<len4; i4++){const _errs65 = errors;if(!(validate20(data26[i4], {instancePath:instancePath+"/credits/organizations/" + i4,parentData:data26,parentDataProperty:i4,rootData}))){vErrors = vErrors === null ? validate20.errors : vErrors.concat(validate20.errors);errors = vErrors.length;}var valid15 = _errs65 === errors;if(!valid15){break;}}}else {validate73.errors = [{instancePath:instancePath+"/credits/organizations",schemaPath:"#/properties/credits/properties/organizations/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid14 = _errs63 === errors;}else {var valid14 = true;}if(valid14){if(data25.individuals !== undefined){let data28 = data25.individuals;const _errs66 = errors;if(errors === _errs66){if(Array.isArray(data28)){var valid16 = true;const len5 = data28.length;for(let i5=0; i5<len5; i5++){let data29 = data28[i5];const _errs68 = errors;const _errs69 = errors;if(errors === _errs69){if(data29 && typeof data29 == "object" && !Array.isArray(data29)){const _errs71 = errors;for(const key6 in data29){if(!(((key6 === "name") || (key6 === "email")) || (key6 === "phone"))){validate73.errors = [{instancePath:instancePath+"/credits/individuals/" + i5,schemaPath:"#/definitions/organizationalContact/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key6},message:"must NOT have additional properties"}];return false;break;}}if(_errs71 === errors){if(data29.name !== undefined){const _errs72 = errors;if(typeof data29.name !== "string"){validate73.errors = [{instancePath:instancePath+"/credits/individuals/" + i5+"/name",schemaPath:"#/definitions/organizationalContact/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid18 = _errs72 === errors;}else {var valid18 = true;}if(valid18){if(data29.email !== undefined){let data31 = data29.email;const _errs74 = errors;if(errors === _errs74){if(errors === _errs74){if(typeof data31 === "string"){if(!(formats4(data31))){validate73.errors = [{instancePath:instancePath+"/credits/individuals/" + i5+"/email",schemaPath:"#/definitions/organizationalContact/properties/email/format",keyword:"format",params:{format: "idn-email"},message:"must match format \""+"idn-email"+"\""}];return false;}}else {validate73.errors = [{instancePath:instancePath+"/credits/individuals/" + i5+"/email",schemaPath:"#/definitions/organizationalContact/properties/email/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid18 = _errs74 === errors;}else {var valid18 = true;}if(valid18){if(data29.phone !== undefined){const _errs76 = errors;if(typeof data29.phone !== "string"){validate73.errors = [{instancePath:instancePath+"/credits/individuals/" + i5+"/phone",schemaPath:"#/definitions/organizationalContact/properties/phone/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid18 = _errs76 === errors;}else {var valid18 = true;}}}}}else {validate73.errors = [{instancePath:instancePath+"/credits/individuals/" + i5,schemaPath:"#/definitions/organizationalContact/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid16 = _errs68 === errors;if(!valid16){break;}}}else {validate73.errors = [{instancePath:instancePath+"/credits/individuals",schemaPath:"#/properties/credits/properties/individuals/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid14 = _errs66 === errors;}else {var valid14 = true;}}}}else {validate73.errors = [{instancePath:instancePath+"/credits",schemaPath:"#/properties/credits/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs60 === errors;}else {var valid0 = true;}if(valid0){if(data.tools !== undefined){let data33 = data.tools;const _errs78 = errors;if(errors === _errs78){if(Array.isArray(data33)){var valid19 = true;const len6 = data33.length;for(let i6=0; i6<len6; i6++){const _errs80 = errors;if(!(validate12(data33[i6], {instancePath:instancePath+"/tools/" + i6,parentData:data33,parentDataProperty:i6,rootData}))){vErrors = vErrors === null ? validate12.errors : vErrors.concat(validate12.errors);errors = vErrors.length;}var valid19 = _errs80 === errors;if(!valid19){break;}}}else {validate73.errors = [{instancePath:instancePath+"/tools",schemaPath:"#/properties/tools/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs78 === errors;}else {var valid0 = true;}if(valid0){if(data.analysis !== undefined){let data35 = data.analysis;const _errs81 = errors;if(errors === _errs81){if(data35 && typeof data35 == "object" && !Array.isArray(data35)){const _errs83 = errors;for(const key7 in data35){if(!((((key7 === "state") || (key7 === "justification")) || (key7 === "response")) || (key7 === "detail"))){validate73.errors = [{instancePath:instancePath+"/analysis",schemaPath:"#/properties/analysis/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key7},message:"must NOT have additional properties"}];return false;break;}}if(_errs83 === errors){if(data35.state !== undefined){let data36 = data35.state;const _errs84 = errors;if(typeof data36 !== "string"){validate73.errors = [{instancePath:instancePath+"/analysis/state",schemaPath:"#/definitions/impactAnalysisState/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!((((((data36 === "resolved") || (data36 === "resolved_with_pedigree")) || (data36 === "exploitable")) || (data36 === "in_triage")) || (data36 === "false_positive")) || (data36 === "not_affected"))){validate73.errors = [{instancePath:instancePath+"/analysis/state",schemaPath:"#/definitions/impactAnalysisState/enum",keyword:"enum",params:{allowedValues: schema76.enum},message:"must be equal to one of the allowed values"}];return false;}var valid20 = _errs84 === errors;}else {var valid20 = true;}if(valid20){if(data35.justification !== undefined){let data37 = data35.justification;const _errs87 = errors;if(typeof data37 !== "string"){validate73.errors = [{instancePath:instancePath+"/analysis/justification",schemaPath:"#/definitions/impactAnalysisJustification/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!(((((((((data37 === "code_not_present") || (data37 === "code_not_reachable")) || (data37 === "requires_configuration")) || (data37 === "requires_dependency")) || (data37 === "requires_environment")) || (data37 === "protected_by_compiler")) || (data37 === "protected_at_runtime")) || (data37 === "protected_at_perimeter")) || (data37 === "protected_by_mitigating_control"))){validate73.errors = [{instancePath:instancePath+"/analysis/justification",schemaPath:"#/definitions/impactAnalysisJustification/enum",keyword:"enum",params:{allowedValues: schema77.enum},message:"must be equal to one of the allowed values"}];return false;}var valid20 = _errs87 === errors;}else {var valid20 = true;}if(valid20){if(data35.response !== undefined){let data38 = data35.response;const _errs90 = errors;if(errors === _errs90){if(Array.isArray(data38)){var valid23 = true;const len7 = data38.length;for(let i7=0; i7<len7; i7++){let data39 = data38[i7];const _errs92 = errors;if(typeof data39 !== "string"){validate73.errors = [{instancePath:instancePath+"/analysis/response/" + i7,schemaPath:"#/properties/analysis/properties/response/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!(((((data39 === "can_not_fix") || (data39 === "will_not_fix")) || (data39 === "update")) || (data39 === "rollback")) || (data39 === "workaround_available"))){validate73.errors = [{instancePath:instancePath+"/analysis/response/" + i7,schemaPath:"#/properties/analysis/properties/response/items/enum",keyword:"enum",params:{allowedValues: schema65.properties.analysis.properties.response.items.enum},message:"must be equal to one of the allowed values"}];return false;}var valid23 = _errs92 === errors;if(!valid23){break;}}}else {validate73.errors = [{instancePath:instancePath+"/analysis/response",schemaPath:"#/properties/analysis/properties/response/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid20 = _errs90 === errors;}else {var valid20 = true;}if(valid20){if(data35.detail !== undefined){const _errs94 = errors;if(typeof data35.detail !== "string"){validate73.errors = [{instancePath:instancePath+"/analysis/detail",schemaPath:"#/properties/analysis/properties/detail/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid20 = _errs94 === errors;}else {var valid20 = true;}}}}}}else {validate73.errors = [{instancePath:instancePath+"/analysis",schemaPath:"#/properties/analysis/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs81 === errors;}else {var valid0 = true;}if(valid0){if(data.affects !== undefined){let data41 = data.affects;const _errs96 = errors;if(errors === _errs96){if(Array.isArray(data41)){var valid24 = true;const len8 = data41.length;for(let i8=0; i8<len8; i8++){let data42 = data41[i8];const _errs98 = errors;if(data42 && typeof data42 == "object" && !Array.isArray(data42)){let missing2;if((data42.ref === undefined) && (missing2 = "ref")){validate73.errors = [{instancePath:instancePath+"/affects/" + i8,schemaPath:"#/properties/affects/items/required",keyword:"required",params:{missingProperty: missing2},message:"must have required property '"+missing2+"'"}];return false;}else {const _errs99 = errors;for(const key8 in data42){if(!((key8 === "ref") || (key8 === "versions"))){validate73.errors = [{instancePath:instancePath+"/affects/" + i8,schemaPath:"#/properties/affects/items/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key8},message:"must NOT have additional properties"}];return false;break;}}if(_errs99 === errors){if(data42.ref !== undefined){const _errs100 = errors;if(typeof data42.ref !== "string"){validate73.errors = [{instancePath:instancePath+"/affects/" + i8+"/ref",schemaPath:"#/definitions/refType/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid25 = _errs100 === errors;}else {var valid25 = true;}if(valid25){if(data42.versions !== undefined){let data44 = data42.versions;const _errs104 = errors;if(errors === _errs104){if(Array.isArray(data44)){var valid27 = true;const len9 = data44.length;for(let i9=0; i9<len9; i9++){let data45 = data44[i9];const _errs106 = errors;const _errs107 = errors;let valid28 = false;let passing0 = null;const _errs108 = errors;if(data45 && typeof data45 == "object" && !Array.isArray(data45)){let missing3;if((data45.version === undefined) && (missing3 = "version")){const err0 = {instancePath:instancePath+"/affects/" + i8+"/versions/" + i9,schemaPath:"#/properties/affects/items/properties/versions/items/oneOf/0/required",keyword:"required",params:{missingProperty: missing3},message:"must have required property '"+missing3+"'"};if(vErrors === null){vErrors = [err0];}else {vErrors.push(err0);}errors++;}}var _valid0 = _errs108 === errors;if(_valid0){valid28 = true;passing0 = 0;}const _errs109 = errors;if(data45 && typeof data45 == "object" && !Array.isArray(data45)){let missing4;if((data45.range === undefined) && (missing4 = "range")){const err1 = {instancePath:instancePath+"/affects/" + i8+"/versions/" + i9,schemaPath:"#/properties/affects/items/properties/versions/items/oneOf/1/required",keyword:"required",params:{missingProperty: missing4},message:"must have required property '"+missing4+"'"};if(vErrors === null){vErrors = [err1];}else {vErrors.push(err1);}errors++;}}var _valid0 = _errs109 === errors;if(_valid0 && valid28){valid28 = false;passing0 = [passing0, 1];}else {if(_valid0){valid28 = true;passing0 = 1;}}if(!valid28){const err2 = {instancePath:instancePath+"/affects/" + i8+"/versions/" + i9,schemaPath:"#/properties/affects/items/properties/versions/items/oneOf",keyword:"oneOf",params:{passingSchemas: passing0},message:"must match exactly one schema in oneOf"};if(vErrors === null){vErrors = [err2];}else {vErrors.push(err2);}errors++;validate73.errors = vErrors;return false;}else {errors = _errs107;if(vErrors !== null){if(_errs107){vErrors.length = _errs107;}else {vErrors = null;}}}if(errors === _errs106){if(data45 && typeof data45 == "object" && !Array.isArray(data45)){const _errs110 = errors;for(const key9 in data45){if(!(((key9 === "version") || (key9 === "range")) || (key9 === "status"))){validate73.errors = [{instancePath:instancePath+"/affects/" + i8+"/versions/" + i9,schemaPath:"#/properties/affects/items/properties/versions/items/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key9},message:"must NOT have additional properties"}];return false;break;}}if(_errs110 === errors){if(data45.version !== undefined){let data46 = data45.version;const _errs111 = errors;const _errs112 = errors;if(errors === _errs112){if(typeof data46 === "string"){if(func15(data46) > 1024){validate73.errors = [{instancePath:instancePath+"/affects/" + i8+"/versions/" + i9+"/version",schemaPath:"#/definitions/version/maxLength",keyword:"maxLength",params:{limit: 1024},message:"must NOT have more than 1024 characters"}];return false;}else {if(func15(data46) < 1){validate73.errors = [{instancePath:instancePath+"/affects/" + i8+"/versions/" + i9+"/version",schemaPath:"#/definitions/version/minLength",keyword:"minLength",params:{limit: 1},message:"must NOT have fewer than 1 characters"}];return false;}}}else {validate73.errors = [{instancePath:instancePath+"/affects/" + i8+"/versions/" + i9+"/version",schemaPath:"#/definitions/version/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid29 = _errs111 === errors;}else {var valid29 = true;}if(valid29){if(data45.range !== undefined){let data47 = data45.range;const _errs114 = errors;const _errs115 = errors;if(errors === _errs115){if(typeof data47 === "string"){if(func15(data47) > 1024){validate73.errors = [{instancePath:instancePath+"/affects/" + i8+"/versions/" + i9+"/range",schemaPath:"#/definitions/version/maxLength",keyword:"maxLength",params:{limit: 1024},message:"must NOT have more than 1024 characters"}];return false;}else {if(func15(data47) < 1){validate73.errors = [{instancePath:instancePath+"/affects/" + i8+"/versions/" + i9+"/range",schemaPath:"#/definitions/version/minLength",keyword:"minLength",params:{limit: 1},message:"must NOT have fewer than 1 characters"}];return false;}}}else {validate73.errors = [{instancePath:instancePath+"/affects/" + i8+"/versions/" + i9+"/range",schemaPath:"#/definitions/version/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid29 = _errs114 === errors;}else {var valid29 = true;}if(valid29){if(data45.status !== undefined){let data48 = data45.status;const _errs117 = errors;if(typeof data48 !== "string"){validate73.errors = [{instancePath:instancePath+"/affects/" + i8+"/versions/" + i9+"/status",schemaPath:"#/definitions/affectedStatus/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!(((data48 === "affected") || (data48 === "unaffected")) || (data48 === "unknown"))){validate73.errors = [{instancePath:instancePath+"/affects/" + i8+"/versions/" + i9+"/status",schemaPath:"#/definitions/affectedStatus/enum",keyword:"enum",params:{allowedValues: schema81.enum},message:"must be equal to one of the allowed values"}];return false;}var valid29 = _errs117 === errors;}else {var valid29 = true;}}}}}}var valid27 = _errs106 === errors;if(!valid27){break;}}}else {validate73.errors = [{instancePath:instancePath+"/affects/" + i8+"/versions",schemaPath:"#/properties/affects/items/properties/versions/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid25 = _errs104 === errors;}else {var valid25 = true;}}}}}var valid24 = _errs98 === errors;if(!valid24){break;}}if(valid24){let i10 = data41.length;let j0;if(i10 > 1){outer0:for(;i10--;){for(j0 = i10; j0--;){if(func0(data41[i10], data41[j0])){validate73.errors = [{instancePath:instancePath+"/affects",schemaPath:"#/properties/affects/uniqueItems",keyword:"uniqueItems",params:{i: i10, j: j0},message:"must NOT have duplicate items (items ## "+j0+" and "+i10+" are identical)"}];return false;break outer0;}}}}}}else {validate73.errors = [{instancePath:instancePath+"/affects",schemaPath:"#/properties/affects/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs96 === errors;}else {var valid0 = true;}if(valid0){if(data.properties !== undefined){let data49 = data.properties;const _errs120 = errors;if(errors === _errs120){if(Array.isArray(data49)){var valid34 = true;const len10 = data49.length;for(let i11=0; i11<len10; i11++){let data50 = data49[i11];const _errs122 = errors;const _errs123 = errors;if(errors === _errs123){if(data50 && typeof data50 == "object" && !Array.isArray(data50)){if(data50.name !== undefined){const _errs125 = errors;if(typeof data50.name !== "string"){validate73.errors = [{instancePath:instancePath+"/properties/" + i11+"/name",schemaPath:"#/definitions/property/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid36 = _errs125 === errors;}else {var valid36 = true;}if(valid36){if(data50.value !== undefined){const _errs127 = errors;if(typeof data50.value !== "string"){validate73.errors = [{instancePath:instancePath+"/properties/" + i11+"/value",schemaPath:"#/definitions/property/properties/value/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid36 = _errs127 === errors;}else {var valid36 = true;}}}else {validate73.errors = [{instancePath:instancePath+"/properties/" + i11,schemaPath:"#/definitions/property/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid34 = _errs122 === errors;if(!valid34){break;}}}else {validate73.errors = [{instancePath:instancePath+"/properties",schemaPath:"#/properties/properties/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs120 === errors;}else {var valid0 = true;}}}}}}}}}}}}}}}}}}}}else {validate73.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate73.errors = vErrors;return errors === 0;}function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){/*# sourceURL="http://cyclonedx.org/schema/bom-1.4.schema.json" */;let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((((data.bomFormat === undefined) && (missing0 = "bomFormat")) || ((data.specVersion === undefined) && (missing0 = "specVersion"))) || ((data.version === undefined) && (missing0 = "version"))){validate10.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs2 = errors;for(const key0 in data){if(!(func2.call(schema11.properties, key0))){validate10.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs2 === errors){if(data.$schema !== undefined){let data0 = data.$schema;const _errs3 = errors;if(typeof data0 !== "string"){validate10.errors = [{instancePath:instancePath+"/$schema",schemaPath:"#/properties/%24schema/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!(data0 === "http://cyclonedx.org/schema/bom-1.4.schema.json")){validate10.errors = [{instancePath:instancePath+"/$schema",schemaPath:"#/properties/%24schema/enum",keyword:"enum",params:{allowedValues: schema11.properties.$schema.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs3 === errors;}else {var valid0 = true;}if(valid0){if(data.bomFormat !== undefined){let data1 = data.bomFormat;const _errs5 = errors;if(typeof data1 !== "string"){validate10.errors = [{instancePath:instancePath+"/bomFormat",schemaPath:"#/properties/bomFormat/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!(data1 === "CycloneDX")){validate10.errors = [{instancePath:instancePath+"/bomFormat",schemaPath:"#/properties/bomFormat/enum",keyword:"enum",params:{allowedValues: schema11.properties.bomFormat.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs5 === errors;}else {var valid0 = true;}if(valid0){if(data.specVersion !== undefined){const _errs7 = errors;if(typeof data.specVersion !== "string"){validate10.errors = [{instancePath:instancePath+"/specVersion",schemaPath:"#/properties/specVersion/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs7 === errors;}else {var valid0 = true;}if(valid0){if(data.serialNumber !== undefined){let data3 = data.serialNumber;const _errs9 = errors;if(errors === _errs9){if(typeof data3 === "string"){if(!pattern0.test(data3)){validate10.errors = [{instancePath:instancePath+"/serialNumber",schemaPath:"#/properties/serialNumber/pattern",keyword:"pattern",params:{pattern: "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"},message:"must match pattern \""+"^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"+"\""}];return false;}}else {validate10.errors = [{instancePath:instancePath+"/serialNumber",schemaPath:"#/properties/serialNumber/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs9 === errors;}else {var valid0 = true;}if(valid0){if(data.version !== undefined){let data4 = data.version;const _errs11 = errors;if(!((typeof data4 == "number") && (!(data4 % 1) && !isNaN(data4)))){validate10.errors = [{instancePath:instancePath+"/version",schemaPath:"#/properties/version/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid0 = _errs11 === errors;}else {var valid0 = true;}if(valid0){if(data.metadata !== undefined){const _errs13 = errors;if(!(validate11(data.metadata, {instancePath:instancePath+"/metadata",parentData:data,parentDataProperty:"metadata",rootData}))){vErrors = vErrors === null ? validate11.errors : vErrors.concat(validate11.errors);errors = vErrors.length;}var valid0 = _errs13 === errors;}else {var valid0 = true;}if(valid0){if(data.components !== undefined){let data6 = data.components;const _errs14 = errors;if(errors === _errs14){if(Array.isArray(data6)){var valid1 = true;const len0 = data6.length;for(let i0=0; i0<len0; i0++){const _errs16 = errors;if(!(validate19(data6[i0], {instancePath:instancePath+"/components/" + i0,parentData:data6,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate19.errors : vErrors.concat(validate19.errors);errors = vErrors.length;}var valid1 = _errs16 === errors;if(!valid1){break;}}if(valid1){let i1 = data6.length;let j0;if(i1 > 1){outer0:for(;i1--;){for(j0 = i1; j0--;){if(func0(data6[i1], data6[j0])){validate10.errors = [{instancePath:instancePath+"/components",schemaPath:"#/properties/components/uniqueItems",keyword:"uniqueItems",params:{i: i1, j: j0},message:"must NOT have duplicate items (items ## "+j0+" and "+i1+" are identical)"}];return false;break outer0;}}}}}}else {validate10.errors = [{instancePath:instancePath+"/components",schemaPath:"#/properties/components/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs14 === errors;}else {var valid0 = true;}if(valid0){if(data.services !== undefined){let data8 = data.services;const _errs17 = errors;if(errors === _errs17){if(Array.isArray(data8)){var valid3 = true;const len1 = data8.length;for(let i2=0; i2<len1; i2++){const _errs19 = errors;if(!(validate58(data8[i2], {instancePath:instancePath+"/services/" + i2,parentData:data8,parentDataProperty:i2,rootData}))){vErrors = vErrors === null ? validate58.errors : vErrors.concat(validate58.errors);errors = vErrors.length;}var valid3 = _errs19 === errors;if(!valid3){break;}}if(valid3){let i3 = data8.length;let j1;if(i3 > 1){outer1:for(;i3--;){for(j1 = i3; j1--;){if(func0(data8[i3], data8[j1])){validate10.errors = [{instancePath:instancePath+"/services",schemaPath:"#/properties/services/uniqueItems",keyword:"uniqueItems",params:{i: i3, j: j1},message:"must NOT have duplicate items (items ## "+j1+" and "+i3+" are identical)"}];return false;break outer1;}}}}}}else {validate10.errors = [{instancePath:instancePath+"/services",schemaPath:"#/properties/services/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs17 === errors;}else {var valid0 = true;}if(valid0){if(data.externalReferences !== undefined){let data10 = data.externalReferences;const _errs20 = errors;if(errors === _errs20){if(Array.isArray(data10)){var valid5 = true;const len2 = data10.length;for(let i4=0; i4<len2; i4++){const _errs22 = errors;if(!(validate15(data10[i4], {instancePath:instancePath+"/externalReferences/" + i4,parentData:data10,parentDataProperty:i4,rootData}))){vErrors = vErrors === null ? validate15.errors : vErrors.concat(validate15.errors);errors = vErrors.length;}var valid5 = _errs22 === errors;if(!valid5){break;}}}else {validate10.errors = [{instancePath:instancePath+"/externalReferences",schemaPath:"#/properties/externalReferences/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs20 === errors;}else {var valid0 = true;}if(valid0){if(data.dependencies !== undefined){let data12 = data.dependencies;const _errs23 = errors;if(errors === _errs23){if(Array.isArray(data12)){var valid6 = true;const len3 = data12.length;for(let i5=0; i5<len3; i5++){const _errs25 = errors;if(!(validate68(data12[i5], {instancePath:instancePath+"/dependencies/" + i5,parentData:data12,parentDataProperty:i5,rootData}))){vErrors = vErrors === null ? validate68.errors : vErrors.concat(validate68.errors);errors = vErrors.length;}var valid6 = _errs25 === errors;if(!valid6){break;}}if(valid6){let i6 = data12.length;let j2;if(i6 > 1){outer2:for(;i6--;){for(j2 = i6; j2--;){if(func0(data12[i6], data12[j2])){validate10.errors = [{instancePath:instancePath+"/dependencies",schemaPath:"#/properties/dependencies/uniqueItems",keyword:"uniqueItems",params:{i: i6, j: j2},message:"must NOT have duplicate items (items ## "+j2+" and "+i6+" are identical)"}];return false;break outer2;}}}}}}else {validate10.errors = [{instancePath:instancePath+"/dependencies",schemaPath:"#/properties/dependencies/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs23 === errors;}else {var valid0 = true;}if(valid0){if(data.compositions !== undefined){let data14 = data.compositions;const _errs26 = errors;if(errors === _errs26){if(Array.isArray(data14)){var valid8 = true;const len4 = data14.length;for(let i7=0; i7<len4; i7++){const _errs28 = errors;if(!(validate70(data14[i7], {instancePath:instancePath+"/compositions/" + i7,parentData:data14,parentDataProperty:i7,rootData}))){vErrors = vErrors === null ? validate70.errors : vErrors.concat(validate70.errors);errors = vErrors.length;}var valid8 = _errs28 === errors;if(!valid8){break;}}if(valid8){let i8 = data14.length;let j3;if(i8 > 1){outer3:for(;i8--;){for(j3 = i8; j3--;){if(func0(data14[i8], data14[j3])){validate10.errors = [{instancePath:instancePath+"/compositions",schemaPath:"#/properties/compositions/uniqueItems",keyword:"uniqueItems",params:{i: i8, j: j3},message:"must NOT have duplicate items (items ## "+j3+" and "+i8+" are identical)"}];return false;break outer3;}}}}}}else {validate10.errors = [{instancePath:instancePath+"/compositions",schemaPath:"#/properties/compositions/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs26 === errors;}else {var valid0 = true;}if(valid0){if(data.vulnerabilities !== undefined){let data16 = data.vulnerabilities;const _errs29 = errors;if(errors === _errs29){if(Array.isArray(data16)){var valid10 = true;const len5 = data16.length;for(let i9=0; i9<len5; i9++){const _errs31 = errors;if(!(validate73(data16[i9], {instancePath:instancePath+"/vulnerabilities/" + i9,parentData:data16,parentDataProperty:i9,rootData}))){vErrors = vErrors === null ? validate73.errors : vErrors.concat(validate73.errors);errors = vErrors.length;}var valid10 = _errs31 === errors;if(!valid10){break;}}if(valid10){let i10 = data16.length;let j4;if(i10 > 1){outer4:for(;i10--;){for(j4 = i10; j4--;){if(func0(data16[i10], data16[j4])){validate10.errors = [{instancePath:instancePath+"/vulnerabilities",schemaPath:"#/properties/vulnerabilities/uniqueItems",keyword:"uniqueItems",params:{i: i10, j: j4},message:"must NOT have duplicate items (items ## "+j4+" and "+i10+" are identical)"}];return false;break outer4;}}}}}}else {validate10.errors = [{instancePath:instancePath+"/vulnerabilities",schemaPath:"#/properties/vulnerabilities/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs29 === errors;}else {var valid0 = true;}if(valid0){if(data.signature !== undefined){const _errs32 = errors;if(!(validate44(data.signature, {instancePath:instancePath+"/signature",parentData:data,parentDataProperty:"signature",rootData}))){vErrors = vErrors === null ? validate44.errors : vErrors.concat(validate44.errors);errors = vErrors.length;}var valid0 = _errs32 === errors;}else {var valid0 = true;}}}}}}}}}}}}}}}}else {validate10.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate10.errors = vErrors;return errors === 0;}exports["1.3"] = validate80;const schema83 = {"$schema":"http://json-schema.org/draft-07/schema#","$id":"http://cyclonedx.org/schema/bom-1.3a.schema.json","type":"object","title":"CycloneDX Software Bill-of-Material Specification","$comment":"CycloneDX JSON schema is published under the terms of the Apache License 2.0.","required":["bomFormat","specVersion","version"],"properties":{"bomFormat":{"$id":"#/properties/bomFormat","type":"string","title":"BOM Format","description":"Specifies the format of the BOM. This helps to identify the file as CycloneDX since BOMs do not have a filename convention nor does JSON schema support namespaces.","enum":["CycloneDX"]},"specVersion":{"$id":"#/properties/specVersion","type":"string","title":"CycloneDX Specification Version","description":"The version of the CycloneDX specification a BOM is written to (starting at version 1.2)","examples":["1.3"]},"serialNumber":{"$id":"#/properties/serialNumber","type":"string","title":"BOM Serial Number","description":"Every BOM generated should have a unique serial number, even if the contents of the BOM being generated have not changed over time. The process or tool responsible for creating the BOM should create random UUID's for every BOM generated.","examples":["urn:uuid:3e671687-395b-41f5-a30f-a58921a69b79"],"pattern":"^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"},"version":{"$id":"#/properties/version","type":"integer","title":"BOM Version","description":"The version allows component publishers/authors to make changes to existing BOMs to update various aspects of the document such as description or licenses. When a system is presented with multiple BOMs for the same component, the system should use the most recent version of the BOM. The default version is '1' and should be incremented for each version of the BOM that is published. Each version of a component should have a unique BOM and if no changes are made to the BOMs, then each BOM will have a version of '1'.","default":1,"examples":[1]},"metadata":{"$id":"#/properties/metadata","$ref":"#/definitions/metadata","title":"BOM Metadata","description":"Provides additional information about a BOM."},"components":{"$id":"#/properties/components","type":"array","items":{"$ref":"#/definitions/component"},"uniqueItems":true,"title":"Components"},"services":{"$id":"#/properties/services","type":"array","items":{"$ref":"#/definitions/service"},"uniqueItems":true,"title":"Services"},"externalReferences":{"$id":"#/properties/externalReferences","type":"array","items":{"$ref":"#/definitions/externalReference"},"title":"External References","description":"External references provide a way to document systems, sites, and information that may be relevant but which are not included with the BOM."},"dependencies":{"$id":"#/properties/dependencies","type":"array","items":{"$ref":"#/definitions/dependency"},"uniqueItems":true,"title":"Dependencies","description":"Provides the ability to document dependency relationships."},"compositions":{"$id":"#/properties/compositions","type":"array","items":{"$ref":"#/definitions/compositions"},"uniqueItems":true,"title":"Compositions","description":"Compositions describe constituent parts (including components, services, and dependency relationships) and their completeness."}},"definitions":{"metadata":{"type":"object","title":"BOM Metadata Object","properties":{"timestamp":{"type":"string","format":"date-time","title":"Timestamp","description":"The date and time (timestamp) when the document was created."},"tools":{"type":"array","title":"Creation Tools","description":"The tool(s) used in the creation of the BOM.","items":{"$ref":"#/definitions/tool"}},"authors":{"type":"array","title":"Authors","description":"The person(s) who created the BOM. Authors are common in BOMs created through manual processes. BOMs created through automated means may not have authors.","items":{"$ref":"#/definitions/organizationalContact"}},"component":{"title":"Component","description":"The component that the BOM describes.","$ref":"#/definitions/component"},"manufacture":{"title":"Manufacture","description":"The organization that manufactured the component that the BOM describes.","$ref":"#/definitions/organizationalEntity"},"supplier":{"title":"Supplier","description":" The organization that supplied the component that the BOM describes. The supplier may often be the manufacturer, but may also be a distributor or repackager.","$ref":"#/definitions/organizationalEntity"},"licenses":{"type":"array","title":"BOM License(s)","items":{"$ref":"#/definitions/licenseChoice"}},"properties":{"type":"array","title":"Properties","description":"Provides the ability to document properties in a name-value store. This provides flexibility to include data not officially supported in the standard without having to use additional namespaces or create extensions. Unlike key-value stores, properties support duplicate names, each potentially having different values.","items":{"$ref":"#/definitions/property"}}}},"tool":{"type":"object","title":"Tool","description":"The tool used to create the BOM.","properties":{"vendor":{"type":"string","title":"Tool Vendor","description":"The date and time (timestamp) when the document was created."},"name":{"type":"string","title":"Tool Name","description":"The date and time (timestamp) when the document was created."},"version":{"type":"string","title":"Tool Version","description":"The date and time (timestamp) when the document was created."},"hashes":{"$id":"#/definitions/tool/properties/hashes","type":"array","items":{"$ref":"#/definitions/hash"},"title":"Hashes","description":"The hashes of the tool (if applicable)."}}},"organizationalEntity":{"type":"object","title":"Organizational Entity Object","description":"","properties":{"name":{"type":"string","title":"Name","description":"The name of the organization","examples":["Example Inc."]},"url":{"type":"array","items":{"type":"string","format":"iri-reference"},"title":"URL","description":"The URL of the organization. Multiple URLs are allowed.","examples":["https://example.com"]},"contact":{"type":"array","title":"Contact","description":"A contact at the organization. Multiple contacts are allowed.","items":{"$ref":"#/definitions/organizationalContact"}}}},"organizationalContact":{"type":"object","title":"Organizational Contact Object","description":"","properties":{"name":{"type":"string","title":"Name","description":"The name of a contact","examples":["Contact name"]},"email":{"type":"string","title":"Email Address","description":"The email address of the contact.","examples":["firstname.lastname@example.com"]},"phone":{"type":"string","title":"Phone","description":"The phone number of the contact.","examples":["800-555-1212"]}}},"component":{"type":"object","title":"Component Object","required":["type","name","version"],"properties":{"type":{"type":"string","enum":["application","framework","library","container","operating-system","device","firmware","file"],"title":"Component Type","description":"Specifies the type of component. For software components, classify as application if no more specific appropriate classification is available or cannot be determined for the component.","examples":["library"]},"mime-type":{"type":"string","title":"Mime-Type","description":"The optional mime-type of the component. When used on file components, the mime-type can provide additional context about the kind of file being represented such as an image, font, or executable. Some library or framework components may also have an associated mime-type.","examples":["image/jpeg"],"pattern":"^[-+a-z0-9.]+/[-+a-z0-9.]+$"},"bom-ref":{"type":"string","title":"BOM Reference","description":"An optional identifier which can be used to reference the component elsewhere in the BOM. Every bom-ref should be unique."},"supplier":{"title":"Component Supplier","description":" The organization that supplied the component. The supplier may often be the manufacturer, but may also be a distributor or repackager.","$ref":"#/definitions/organizationalEntity"},"author":{"type":"string","title":"Component Author","description":"The person(s) or organization(s) that authored the component","examples":["Acme Inc"]},"publisher":{"type":"string","title":"Component Publisher","description":"The person(s) or organization(s) that published the component","examples":["Acme Inc"]},"group":{"type":"string","title":"Component Group","description":"The grouping name or identifier. This will often be a shortened, single name of the company or project that produced the component, or the source package or domain name. Whitespace and special characters should be avoided. Examples include: apache, org.apache.commons, and apache.org.","examples":["com.acme"]},"name":{"type":"string","title":"Component Name","description":"The name of the component. This will often be a shortened, single name of the component. Examples: commons-lang3 and jquery","examples":["tomcat-catalina"]},"version":{"type":"string","title":"Component Version","description":"The component version. The version should ideally comply with semantic versioning but is not enforced.","examples":["9.0.14"]},"description":{"type":"string","title":"Component Description","description":"Specifies a description for the component"},"scope":{"type":"string","enum":["required","optional","excluded"],"title":"Component Scope","description":"Specifies the scope of the component. If scope is not specified, 'required' scope should be assumed by the consumer of the BOM","default":"required"},"hashes":{"type":"array","title":"Component Hashes","items":{"$ref":"#/definitions/hash"}},"licenses":{"type":"array","items":{"$ref":"#/definitions/licenseChoice"},"title":"Component License(s)"},"copyright":{"type":"string","title":"Component Copyright","description":"An optional copyright notice informing users of the underlying claims to copyright ownership in a published work.","examples":["Acme Inc"]},"cpe":{"type":"string","title":"Component Common Platform Enumeration (CPE)","description":"DEPRECATED - DO NOT USE. This will be removed in a future version. Specifies a well-formed CPE name. See https://nvd.nist.gov/products/cpe","examples":["cpe:2.3:a:acme:component_framework:-:*:*:*:*:*:*:*"]},"purl":{"type":"string","title":"Component Package URL (purl)","examples":["pkg:maven/com.acme/tomcat-catalina@9.0.14?packaging=jar"]},"swid":{"$ref":"#/definitions/swid","title":"SWID Tag","description":"Specifies metadata and content for ISO-IEC 19770-2 Software Identification (SWID) Tags."},"modified":{"type":"boolean","title":"Component Modified From Original","description":"DEPRECATED - DO NOT USE. This will be removed in a future version. Use the pedigree element instead to supply information on exactly how the component was modified. A boolean value indicating is the component has been modified from the original. A value of true indicates the component is a derivative of the original. A value of false indicates the component has not been modified from the original."},"pedigree":{"type":"object","title":"Component Pedigree","description":"Component pedigree is a way to document complex supply chain scenarios where components are created, distributed, modified, redistributed, combined with other components, etc. Pedigree supports viewing this complex chain from the beginning, the end, or anywhere in the middle. It also provides a way to document variants where the exact relation may not be known.","properties":{"ancestors":{"type":"array","title":"Ancestors","description":"Describes zero or more components in which a component is derived from. This is commonly used to describe forks from existing projects where the forked version contains a ancestor node containing the original component it was forked from. For example, Component A is the original component. Component B is the component being used and documented in the BOM. However, Component B contains a pedigree node with a single ancestor documenting Component A - the original component from which Component B is derived from.","items":{"$ref":"#/definitions/component"}},"descendants":{"type":"array","title":"Descendants","description":"Descendants are the exact opposite of ancestors. This provides a way to document all forks (and their forks) of an original or root component.","items":{"$ref":"#/definitions/component"}},"variants":{"type":"array","title":"Variants","description":"Variants describe relations where the relationship between the components are not known. For example, if Component A contains nearly identical code to Component B. They are both related, but it is unclear if one is derived from the other, or if they share a common ancestor.","items":{"$ref":"#/definitions/component"}},"commits":{"type":"array","title":"Commits","description":"A list of zero or more commits which provide a trail describing how the component deviates from an ancestor, descendant, or variant.","items":{"$ref":"#/definitions/commit"}},"patches":{"type":"array","title":"Patches","description":">A list of zero or more patches describing how the component deviates from an ancestor, descendant, or variant. Patches may be complimentary to commits or may be used in place of commits.","items":{"$ref":"#/definitions/patch"}},"notes":{"type":"string","title":"Notes","description":"Notes, observations, and other non-structured commentary describing the components pedigree."}}},"externalReferences":{"type":"array","items":{"$ref":"#/definitions/externalReference"},"title":"External References"},"components":{"$id":"#/definitions/component/properties/components","type":"array","items":{"$ref":"#/definitions/component"},"uniqueItems":true,"title":"Components"},"evidence":{"$ref":"#/definitions/componentEvidence","title":"Evidence","description":"Provides the ability to document evidence collected through various forms of extraction or analysis."},"properties":{"type":"array","title":"Properties","description":"Provides the ability to document properties in a name-value store. This provides flexibility to include data not officially supported in the standard without having to use additional namespaces or create extensions. Unlike key-value stores, properties support duplicate names, each potentially having different values.","items":{"$ref":"#/definitions/property"}}}},"swid":{"type":"object","title":"SWID Tag","description":"Specifies metadata and content for ISO-IEC 19770-2 Software Identification (SWID) Tags.","required":["tagId","name"],"properties":{"tagId":{"type":"string","title":"Tag ID","description":"Maps to the tagId of a SoftwareIdentity."},"name":{"type":"string","title":"Name","description":"Maps to the name of a SoftwareIdentity."},"version":{"type":"string","title":"Version","default":"0.0","description":"Maps to the version of a SoftwareIdentity."},"tagVersion":{"type":"integer","title":"Tag Version","default":0,"description":"Maps to the tagVersion of a SoftwareIdentity."},"patch":{"type":"boolean","title":"Patch","default":false,"description":"Maps to the patch of a SoftwareIdentity."},"text":{"title":"Attachment text","description":"Specifies the metadata and content of the SWID tag.","$ref":"#/definitions/attachment"},"url":{"type":"string","title":"URL","description":"The URL to the SWID file.","format":"iri-reference"}}},"attachment":{"type":"object","title":"Attachment","description":"Specifies the metadata and content for an attachment.","required":["content"],"properties":{"contentType":{"type":"string","title":"Content-Type","description":"Specifies the content type of the text. Defaults to text/plain if not specified.","default":"text/plain"},"encoding":{"type":"string","title":"Encoding","description":"Specifies the optional encoding the text is represented in.","enum":["base64"]},"content":{"type":"string","title":"Attachment Text","description":"The attachment data"}}},"hash":{"type":"object","title":"Hash Objects","required":["alg","content"],"properties":{"alg":{"$ref":"#/definitions/hash-alg"},"content":{"$ref":"#/definitions/hash-content"}}},"hash-alg":{"type":"string","enum":["MD5","SHA-1","SHA-256","SHA-384","SHA-512","SHA3-256","SHA3-384","SHA3-512","BLAKE2b-256","BLAKE2b-384","BLAKE2b-512","BLAKE3"],"title":"Hash Algorithm"},"hash-content":{"type":"string","title":"Hash Content (value)","examples":["3942447fac867ae5cdb3229b658f4d48"],"pattern":"^([a-fA-F0-9]{32}|[a-fA-F0-9]{40}|[a-fA-F0-9]{64}|[a-fA-F0-9]{96}|[a-fA-F0-9]{128})$"},"license":{"type":"object","title":"License Object","oneOf":[{"required":["id"]},{"required":["name"]}],"properties":{"id":{"$ref":"spdx.SNAPSHOT.schema.json","title":"License ID (SPDX)","description":"A valid SPDX license ID","examples":["Apache-2.0"]},"name":{"type":"string","title":"License Name","description":"If SPDX does not define the license used, this field may be used to provide the license name","examples":["Acme Software License"]},"text":{"title":"License text","description":"An optional way to include the textual content of a license.","$ref":"#/definitions/attachment"},"url":{"type":"string","title":"License URL","description":"The URL to the license file. If specified, a 'license' externalReference should also be specified for completeness","examples":["https://www.apache.org/licenses/LICENSE-2.0.txt"],"format":"iri-reference"}}},"licenseChoice":{"type":"object","title":"License(s)","properties":{"license":{"$ref":"#/definitions/license"},"expression":{"type":"string","title":"SPDX License Expression","examples":["Apache-2.0 AND (MIT OR GPL-2.0-only)","GPL-3.0-only WITH Classpath-exception-2.0"]}},"oneOf":[{"required":["license"]},{"required":["expression"]}]},"commit":{"type":"object","title":"Commit","description":"Specifies an individual commit","properties":{"uid":{"type":"string","title":"UID","description":"A unique identifier of the commit. This may be version control specific. For example, Subversion uses revision numbers whereas git uses commit hashes."},"url":{"type":"string","title":"URL","description":"The URL to the commit. This URL will typically point to a commit in a version control system.","format":"iri-reference"},"author":{"title":"Author","description":"The author who created the changes in the commit","$ref":"#/definitions/identifiableAction"},"committer":{"title":"Committer","description":"The person who committed or pushed the commit","$ref":"#/definitions/identifiableAction"},"message":{"type":"string","title":"Message","description":"The text description of the contents of the commit"}}},"patch":{"type":"object","title":"Patch","description":"Specifies an individual patch","required":["type"],"properties":{"type":{"type":"string","enum":["unofficial","monkey","backport","cherry-pick"],"title":"Type","description":"Specifies the purpose for the patch including the resolution of defects, security issues, or new behavior or functionality"},"diff":{"title":"Diff","description":"The patch file (or diff) that show changes. Refer to https://en.wikipedia.org/wiki/Diff","$ref":"#/definitions/diff"},"resolves":{"type":"array","items":{"$ref":"#/definitions/issue"},"title":"Resolves","description":"A collection of issues the patch resolves"}}},"diff":{"type":"object","title":"Diff","description":"The patch file (or diff) that show changes. Refer to https://en.wikipedia.org/wiki/Diff","properties":{"text":{"title":"Diff text","description":"Specifies the optional text of the diff","$ref":"#/definitions/attachment"},"url":{"type":"string","title":"URL","description":"Specifies the URL to the diff","format":"iri-reference"}}},"issue":{"type":"object","title":"Diff","description":"The patch file (or diff) that show changes. Refer to https://en.wikipedia.org/wiki/Diff","required":["type"],"properties":{"type":{"type":"string","enum":["defect","enhancement","security"],"title":"Type","description":"Specifies the type of issue"},"id":{"type":"string","title":"ID","description":"The identifier of the issue assigned by the source of the issue"},"name":{"type":"string","title":"Name","description":"The name of the issue"},"description":{"type":"string","title":"Description","description":"A description of the issue"},"source":{"type":"object","title":"Source","description":"The source of the issue where it is documented","properties":{"name":{"type":"string","title":"Name","description":"The name of the source. For example 'National Vulnerability Database', 'NVD', and 'Apache'"},"url":{"type":"string","title":"URL","description":"The url of the issue documentation as provided by the source","format":"iri-reference"}}},"references":{"type":"array","items":{"type":"string","format":"iri-reference"},"title":"References","description":"A collection of URL's for reference. Multiple URLs are allowed.","examples":["https://example.com"]}}},"identifiableAction":{"type":"object","title":"Identifiable Action","description":"Specifies an individual commit","properties":{"timestamp":{"type":"string","format":"date-time","title":"Timestamp","description":"The timestamp in which the action occurred"},"name":{"type":"string","title":"Name","description":"The name of the individual who performed the action"},"email":{"type":"string","format":"idn-email","title":"E-mail","description":"The email address of the individual who performed the action"}}},"externalReference":{"type":"object","title":"External Reference","description":"Specifies an individual external reference","required":["url","type"],"properties":{"url":{"type":"string","title":"URL","description":"The URL to the external reference","format":"iri-reference"},"comment":{"type":"string","title":"Comment","description":"An optional comment describing the external reference"},"type":{"type":"string","title":"Type","description":"Specifies the type of external reference. There are built-in types to describe common references. If a type does not exist for the reference being referred to, use the \"other\" type.","enum":["vcs","issue-tracker","website","advisories","bom","mailing-list","social","chat","documentation","support","distribution","license","build-meta","build-system","other"]},"hashes":{"$id":"#/definitions/externalReference/properties/hashes","type":"array","items":{"$ref":"#/definitions/hash"},"title":"Hashes","description":"The hashes of the external reference (if applicable)."}}},"dependency":{"type":"object","title":"Dependency","description":"Defines the direct dependencies of a component. Components that do not have their own dependencies MUST be declared as empty elements within the graph. Components that are not represented in the dependency graph MAY have unknown dependencies. It is RECOMMENDED that implementations assume this to be opaque and not an indicator of a component being dependency-free.","required":["ref"],"properties":{"ref":{"type":"string","title":"Reference","description":"References a component by the components bom-ref attribute"},"dependsOn":{"type":"array","uniqueItems":true,"items":{"type":"string"},"title":"Depends On","description":"The bom-ref identifiers of the components that are dependencies of this dependency object."}}},"service":{"type":"object","title":"Service Object","required":["name"],"properties":{"bom-ref":{"type":"string","title":"BOM Reference","description":"An optional identifier which can be used to reference the service elsewhere in the BOM. Every bom-ref should be unique."},"provider":{"title":"Provider","description":"The organization that provides the service.","$ref":"#/definitions/organizationalEntity"},"group":{"type":"string","title":"Service Group","description":"The grouping name, namespace, or identifier. This will often be a shortened, single name of the company or project that produced the service or domain name. Whitespace and special characters should be avoided.","examples":["com.acme"]},"name":{"type":"string","title":"Service Name","description":"The name of the service. This will often be a shortened, single name of the service.","examples":["ticker-service"]},"version":{"type":"string","title":"Service Version","description":"The service version.","examples":["1.0.0"]},"description":{"type":"string","title":"Service Description","description":"Specifies a description for the service"},"endpoints":{"type":"array","items":{"type":"string","format":"iri-reference"},"title":"Endpoints","description":"The endpoint URIs of the service. Multiple endpoints are allowed.","examples":["https://example.com/api/v1/ticker"]},"authenticated":{"type":"boolean","title":"Authentication Required","description":"A boolean value indicating if the service requires authentication. A value of true indicates the service requires authentication prior to use. A value of false indicates the service does not require authentication."},"x-trust-boundary":{"type":"boolean","title":"Crosses Trust Boundary","description":"A boolean value indicating if use of the service crosses a trust zone or boundary. A value of true indicates that by using the service, a trust boundary is crossed. A value of false indicates that by using the service, a trust boundary is not crossed."},"data":{"type":"array","items":{"$ref":"#/definitions/dataClassification"},"title":"Data Classification","description":"Specifies the data classification."},"licenses":{"type":"array","items":{"$ref":"#/definitions/licenseChoice"},"title":"Component License(s)"},"externalReferences":{"type":"array","items":{"$ref":"#/definitions/externalReference"},"title":"External References"},"services":{"$id":"#/definitions/service/properties/services","type":"array","items":{"$ref":"#/definitions/service"},"uniqueItems":true,"title":"Services"},"properties":{"type":"array","title":"Properties","description":"Provides the ability to document properties in a name-value store. This provides flexibility to include data not officially supported in the standard without having to use additional namespaces or create extensions. Unlike key-value stores, properties support duplicate names, each potentially having different values.","items":{"$ref":"#/definitions/property"}}}},"dataClassification":{"type":"object","title":"Hash Objects","required":["flow","classification"],"properties":{"flow":{"$ref":"#/definitions/dataFlow"},"classification":{"type":"string"}}},"dataFlow":{"type":"string","enum":["inbound","outbound","bi-directional","unknown"],"title":"Data flow direction"},"copyright":{"type":"object","title":"Copyright","required":["text"],"properties":{"text":{"type":"string","title":"Copyright Text"}}},"componentEvidence":{"type":"object","title":"Evidence","description":"Provides the ability to document evidence collected through various forms of extraction or analysis.","properties":{"licenses":{"type":"array","items":{"$ref":"#/definitions/licenseChoice"},"title":"Component License(s)"},"copyright":{"type":"array","items":{"$ref":"#/definitions/copyright"},"title":"Copyright"}}},"compositions":{"type":"object","title":"Compositions","required":["aggregate"],"properties":{"aggregate":{"$ref":"#/definitions/aggregateType","title":"Aggregate","description":"Specifies an aggregate type that describe how complete a relationship is."},"assemblies":{"type":"array","uniqueItems":true,"items":{"type":"string"},"title":"BOM references","description":"The bom-ref identifiers of the components or services being described. Assemblies refer to nested relationships whereby a constituent part may include other constituent parts. References do not cascade to child parts. References are explicit for the specified constituent part only."},"dependencies":{"type":"array","uniqueItems":true,"items":{"type":"string"},"title":"BOM references","description":"The bom-ref identifiers of the components or services being described. Dependencies refer to a relationship whereby an independent constituent part requires another independent constituent part. References do not cascade to transitive dependencies. References are explicit for the specified dependency only."}}},"aggregateType":{"type":"string","default":"not_specified","enum":["complete","incomplete","incomplete_first_party_only","incomplete_third_party_only","unknown","not_specified"]},"property":{"type":"object","title":"Lightweight name-value pair","properties":{"name":{"type":"string","title":"Name","description":"The name of the property. Duplicate names are allowed, each potentially having a different value."},"value":{"type":"string","title":"Value","description":"The value of the property."}}}}};const schema115 = {"type":"object","title":"Dependency","description":"Defines the direct dependencies of a component. Components that do not have their own dependencies MUST be declared as empty elements within the graph. Components that are not represented in the dependency graph MAY have unknown dependencies. It is RECOMMENDED that implementations assume this to be opaque and not an indicator of a component being dependency-free.","required":["ref"],"properties":{"ref":{"type":"string","title":"Reference","description":"References a component by the components bom-ref attribute"},"dependsOn":{"type":"array","uniqueItems":true,"items":{"type":"string"},"title":"Depends On","description":"The bom-ref identifiers of the components that are dependencies of this dependency object."}}};const schema84 = {"type":"object","title":"BOM Metadata Object","properties":{"timestamp":{"type":"string","format":"date-time","title":"Timestamp","description":"The date and time (timestamp) when the document was created."},"tools":{"type":"array","title":"Creation Tools","description":"The tool(s) used in the creation of the BOM.","items":{"$ref":"#/definitions/tool"}},"authors":{"type":"array","title":"Authors","description":"The person(s) who created the BOM. Authors are common in BOMs created through manual processes. BOMs created through automated means may not have authors.","items":{"$ref":"#/definitions/organizationalContact"}},"component":{"title":"Component","description":"The component that the BOM describes.","$ref":"#/definitions/component"},"manufacture":{"title":"Manufacture","description":"The organization that manufactured the component that the BOM describes.","$ref":"#/definitions/organizationalEntity"},"supplier":{"title":"Supplier","description":" The organization that supplied the component that the BOM describes. The supplier may often be the manufacturer, but may also be a distributor or repackager.","$ref":"#/definitions/organizationalEntity"},"licenses":{"type":"array","title":"BOM License(s)","items":{"$ref":"#/definitions/licenseChoice"}},"properties":{"type":"array","title":"Properties","description":"Provides the ability to document properties in a name-value store. This provides flexibility to include data not officially supported in the standard without having to use additional namespaces or create extensions. Unlike key-value stores, properties support duplicate names, each potentially having different values.","items":{"$ref":"#/definitions/property"}}}};const schema89 = {"type":"object","title":"Organizational Contact Object","description":"","properties":{"name":{"type":"string","title":"Name","description":"The name of a contact","examples":["Contact name"]},"email":{"type":"string","title":"Email Address","description":"The email address of the contact.","examples":["firstname.lastname@example.com"]},"phone":{"type":"string","title":"Phone","description":"The phone number of the contact.","examples":["800-555-1212"]}}};const schema109 = {"type":"object","title":"Lightweight name-value pair","properties":{"name":{"type":"string","title":"Name","description":"The name of the property. Duplicate names are allowed, each potentially having a different value."},"value":{"type":"string","title":"Value","description":"The value of the property."}}};const schema85 = {"type":"object","title":"Tool","description":"The tool used to create the BOM.","properties":{"vendor":{"type":"string","title":"Tool Vendor","description":"The date and time (timestamp) when the document was created."},"name":{"type":"string","title":"Tool Name","description":"The date and time (timestamp) when the document was created."},"version":{"type":"string","title":"Tool Version","description":"The date and time (timestamp) when the document was created."},"hashes":{"$id":"#/definitions/tool/properties/hashes","type":"array","items":{"$ref":"#/definitions/hash"},"title":"Hashes","description":"The hashes of the tool (if applicable)."}}};const schema86 = {"type":"object","title":"Hash Objects","required":["alg","content"],"properties":{"alg":{"$ref":"#/definitions/hash-alg"},"content":{"$ref":"#/definitions/hash-content"}}};const schema87 = {"type":"string","enum":["MD5","SHA-1","SHA-256","SHA-384","SHA-512","SHA3-256","SHA3-384","SHA3-512","BLAKE2b-256","BLAKE2b-384","BLAKE2b-512","BLAKE3"],"title":"Hash Algorithm"};const schema88 = {"type":"string","title":"Hash Content (value)","examples":["3942447fac867ae5cdb3229b658f4d48"],"pattern":"^([a-fA-F0-9]{32}|[a-fA-F0-9]{40}|[a-fA-F0-9]{64}|[a-fA-F0-9]{96}|[a-fA-F0-9]{128})$"};function validate83(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if(((data.alg === undefined) && (missing0 = "alg")) || ((data.content === undefined) && (missing0 = "content"))){validate83.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.alg !== undefined){let data0 = data.alg;const _errs1 = errors;if(typeof data0 !== "string"){validate83.errors = [{instancePath:instancePath+"/alg",schemaPath:"#/definitions/hash-alg/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!((((((((((((data0 === "MD5") || (data0 === "SHA-1")) || (data0 === "SHA-256")) || (data0 === "SHA-384")) || (data0 === "SHA-512")) || (data0 === "SHA3-256")) || (data0 === "SHA3-384")) || (data0 === "SHA3-512")) || (data0 === "BLAKE2b-256")) || (data0 === "BLAKE2b-384")) || (data0 === "BLAKE2b-512")) || (data0 === "BLAKE3"))){validate83.errors = [{instancePath:instancePath+"/alg",schemaPath:"#/definitions/hash-alg/enum",keyword:"enum",params:{allowedValues: schema87.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.content !== undefined){let data1 = data.content;const _errs4 = errors;const _errs5 = errors;if(errors === _errs5){if(typeof data1 === "string"){if(!pattern1.test(data1)){validate83.errors = [{instancePath:instancePath+"/content",schemaPath:"#/definitions/hash-content/pattern",keyword:"pattern",params:{pattern: "^([a-fA-F0-9]{32}|[a-fA-F0-9]{40}|[a-fA-F0-9]{64}|[a-fA-F0-9]{96}|[a-fA-F0-9]{128})$"},message:"must match pattern \""+"^([a-fA-F0-9]{32}|[a-fA-F0-9]{40}|[a-fA-F0-9]{64}|[a-fA-F0-9]{96}|[a-fA-F0-9]{128})$"+"\""}];return false;}}else {validate83.errors = [{instancePath:instancePath+"/content",schemaPath:"#/definitions/hash-content/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs4 === errors;}else {var valid0 = true;}}}}else {validate83.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate83.errors = vErrors;return errors === 0;}function validate82(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){if(data.vendor !== undefined){const _errs1 = errors;if(typeof data.vendor !== "string"){validate82.errors = [{instancePath:instancePath+"/vendor",schemaPath:"#/properties/vendor/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.name !== undefined){const _errs3 = errors;if(typeof data.name !== "string"){validate82.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs3 === errors;}else {var valid0 = true;}if(valid0){if(data.version !== undefined){const _errs5 = errors;if(typeof data.version !== "string"){validate82.errors = [{instancePath:instancePath+"/version",schemaPath:"#/properties/version/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs5 === errors;}else {var valid0 = true;}if(valid0){if(data.hashes !== undefined){let data3 = data.hashes;const _errs7 = errors;if(errors === _errs7){if(Array.isArray(data3)){var valid1 = true;const len0 = data3.length;for(let i0=0; i0<len0; i0++){const _errs9 = errors;if(!(validate83(data3[i0], {instancePath:instancePath+"/hashes/" + i0,parentData:data3,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate83.errors : vErrors.concat(validate83.errors);errors = vErrors.length;}var valid1 = _errs9 === errors;if(!valid1){break;}}}else {validate82.errors = [{instancePath:instancePath+"/hashes",schemaPath:"#/properties/hashes/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs7 === errors;}else {var valid0 = true;}}}}}else {validate82.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate82.errors = vErrors;return errors === 0;}const schema90 = {"type":"object","title":"Component Object","required":["type","name","version"],"properties":{"type":{"type":"string","enum":["application","framework","library","container","operating-system","device","firmware","file"],"title":"Component Type","description":"Specifies the type of component. For software components, classify as application if no more specific appropriate classification is available or cannot be determined for the component.","examples":["library"]},"mime-type":{"type":"string","title":"Mime-Type","description":"The optional mime-type of the component. When used on file components, the mime-type can provide additional context about the kind of file being represented such as an image, font, or executable. Some library or framework components may also have an associated mime-type.","examples":["image/jpeg"],"pattern":"^[-+a-z0-9.]+/[-+a-z0-9.]+$"},"bom-ref":{"type":"string","title":"BOM Reference","description":"An optional identifier which can be used to reference the component elsewhere in the BOM. Every bom-ref should be unique."},"supplier":{"title":"Component Supplier","description":" The organization that supplied the component. The supplier may often be the manufacturer, but may also be a distributor or repackager.","$ref":"#/definitions/organizationalEntity"},"author":{"type":"string","title":"Component Author","description":"The person(s) or organization(s) that authored the component","examples":["Acme Inc"]},"publisher":{"type":"string","title":"Component Publisher","description":"The person(s) or organization(s) that published the component","examples":["Acme Inc"]},"group":{"type":"string","title":"Component Group","description":"The grouping name or identifier. This will often be a shortened, single name of the company or project that produced the component, or the source package or domain name. Whitespace and special characters should be avoided. Examples include: apache, org.apache.commons, and apache.org.","examples":["com.acme"]},"name":{"type":"string","title":"Component Name","description":"The name of the component. This will often be a shortened, single name of the component. Examples: commons-lang3 and jquery","examples":["tomcat-catalina"]},"version":{"type":"string","title":"Component Version","description":"The component version. The version should ideally comply with semantic versioning but is not enforced.","examples":["9.0.14"]},"description":{"type":"string","title":"Component Description","description":"Specifies a description for the component"},"scope":{"type":"string","enum":["required","optional","excluded"],"title":"Component Scope","description":"Specifies the scope of the component. If scope is not specified, 'required' scope should be assumed by the consumer of the BOM","default":"required"},"hashes":{"type":"array","title":"Component Hashes","items":{"$ref":"#/definitions/hash"}},"licenses":{"type":"array","items":{"$ref":"#/definitions/licenseChoice"},"title":"Component License(s)"},"copyright":{"type":"string","title":"Component Copyright","description":"An optional copyright notice informing users of the underlying claims to copyright ownership in a published work.","examples":["Acme Inc"]},"cpe":{"type":"string","title":"Component Common Platform Enumeration (CPE)","description":"DEPRECATED - DO NOT USE. This will be removed in a future version. Specifies a well-formed CPE name. See https://nvd.nist.gov/products/cpe","examples":["cpe:2.3:a:acme:component_framework:-:*:*:*:*:*:*:*"]},"purl":{"type":"string","title":"Component Package URL (purl)","examples":["pkg:maven/com.acme/tomcat-catalina@9.0.14?packaging=jar"]},"swid":{"$ref":"#/definitions/swid","title":"SWID Tag","description":"Specifies metadata and content for ISO-IEC 19770-2 Software Identification (SWID) Tags."},"modified":{"type":"boolean","title":"Component Modified From Original","description":"DEPRECATED - DO NOT USE. This will be removed in a future version. Use the pedigree element instead to supply information on exactly how the component was modified. A boolean value indicating is the component has been modified from the original. A value of true indicates the component is a derivative of the original. A value of false indicates the component has not been modified from the original."},"pedigree":{"type":"object","title":"Component Pedigree","description":"Component pedigree is a way to document complex supply chain scenarios where components are created, distributed, modified, redistributed, combined with other components, etc. Pedigree supports viewing this complex chain from the beginning, the end, or anywhere in the middle. It also provides a way to document variants where the exact relation may not be known.","properties":{"ancestors":{"type":"array","title":"Ancestors","description":"Describes zero or more components in which a component is derived from. This is commonly used to describe forks from existing projects where the forked version contains a ancestor node containing the original component it was forked from. For example, Component A is the original component. Component B is the component being used and documented in the BOM. However, Component B contains a pedigree node with a single ancestor documenting Component A - the original component from which Component B is derived from.","items":{"$ref":"#/definitions/component"}},"descendants":{"type":"array","title":"Descendants","description":"Descendants are the exact opposite of ancestors. This provides a way to document all forks (and their forks) of an original or root component.","items":{"$ref":"#/definitions/component"}},"variants":{"type":"array","title":"Variants","description":"Variants describe relations where the relationship between the components are not known. For example, if Component A contains nearly identical code to Component B. They are both related, but it is unclear if one is derived from the other, or if they share a common ancestor.","items":{"$ref":"#/definitions/component"}},"commits":{"type":"array","title":"Commits","description":"A list of zero or more commits which provide a trail describing how the component deviates from an ancestor, descendant, or variant.","items":{"$ref":"#/definitions/commit"}},"patches":{"type":"array","title":"Patches","description":">A list of zero or more patches describing how the component deviates from an ancestor, descendant, or variant. Patches may be complimentary to commits or may be used in place of commits.","items":{"$ref":"#/definitions/patch"}},"notes":{"type":"string","title":"Notes","description":"Notes, observations, and other non-structured commentary describing the components pedigree."}}},"externalReferences":{"type":"array","items":{"$ref":"#/definitions/externalReference"},"title":"External References"},"components":{"$id":"#/definitions/component/properties/components","type":"array","items":{"$ref":"#/definitions/component"},"uniqueItems":true,"title":"Components"},"evidence":{"$ref":"#/definitions/componentEvidence","title":"Evidence","description":"Provides the ability to document evidence collected through various forms of extraction or analysis."},"properties":{"type":"array","title":"Properties","description":"Provides the ability to document properties in a name-value store. This provides flexibility to include data not officially supported in the standard without having to use additional namespaces or create extensions. Unlike key-value stores, properties support duplicate names, each potentially having different values.","items":{"$ref":"#/definitions/property"}}}};const schema91 = {"type":"object","title":"Organizational Entity Object","description":"","properties":{"name":{"type":"string","title":"Name","description":"The name of the organization","examples":["Example Inc."]},"url":{"type":"array","items":{"type":"string","format":"iri-reference"},"title":"URL","description":"The URL of the organization. Multiple URLs are allowed.","examples":["https://example.com"]},"contact":{"type":"array","title":"Contact","description":"A contact at the organization. Multiple contacts are allowed.","items":{"$ref":"#/definitions/organizationalContact"}}}};function validate87(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){if(data.name !== undefined){const _errs1 = errors;if(typeof data.name !== "string"){validate87.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.url !== undefined){let data1 = data.url;const _errs3 = errors;if(errors === _errs3){if(Array.isArray(data1)){var valid1 = true;const len0 = data1.length;for(let i0=0; i0<len0; i0++){let data2 = data1[i0];const _errs5 = errors;if(errors === _errs5){if(errors === _errs5){if(typeof data2 === "string"){if(!(formats2(data2))){validate87.errors = [{instancePath:instancePath+"/url/" + i0,schemaPath:"#/properties/url/items/format",keyword:"format",params:{format: "iri-reference"},message:"must match format \""+"iri-reference"+"\""}];return false;}}else {validate87.errors = [{instancePath:instancePath+"/url/" + i0,schemaPath:"#/properties/url/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid1 = _errs5 === errors;if(!valid1){break;}}}else {validate87.errors = [{instancePath:instancePath+"/url",schemaPath:"#/properties/url/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs3 === errors;}else {var valid0 = true;}if(valid0){if(data.contact !== undefined){let data3 = data.contact;const _errs7 = errors;if(errors === _errs7){if(Array.isArray(data3)){var valid2 = true;const len1 = data3.length;for(let i1=0; i1<len1; i1++){let data4 = data3[i1];const _errs9 = errors;const _errs10 = errors;if(errors === _errs10){if(data4 && typeof data4 == "object" && !Array.isArray(data4)){if(data4.name !== undefined){const _errs12 = errors;if(typeof data4.name !== "string"){validate87.errors = [{instancePath:instancePath+"/contact/" + i1+"/name",schemaPath:"#/definitions/organizationalContact/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid4 = _errs12 === errors;}else {var valid4 = true;}if(valid4){if(data4.email !== undefined){const _errs14 = errors;if(typeof data4.email !== "string"){validate87.errors = [{instancePath:instancePath+"/contact/" + i1+"/email",schemaPath:"#/definitions/organizationalContact/properties/email/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid4 = _errs14 === errors;}else {var valid4 = true;}if(valid4){if(data4.phone !== undefined){const _errs16 = errors;if(typeof data4.phone !== "string"){validate87.errors = [{instancePath:instancePath+"/contact/" + i1+"/phone",schemaPath:"#/definitions/organizationalContact/properties/phone/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid4 = _errs16 === errors;}else {var valid4 = true;}}}}else {validate87.errors = [{instancePath:instancePath+"/contact/" + i1,schemaPath:"#/definitions/organizationalContact/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid2 = _errs9 === errors;if(!valid2){break;}}}else {validate87.errors = [{instancePath:instancePath+"/contact",schemaPath:"#/properties/contact/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs7 === errors;}else {var valid0 = true;}}}}else {validate87.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate87.errors = vErrors;return errors === 0;}const schema93 = {"type":"object","title":"License(s)","properties":{"license":{"$ref":"#/definitions/license"},"expression":{"type":"string","title":"SPDX License Expression","examples":["Apache-2.0 AND (MIT OR GPL-2.0-only)","GPL-3.0-only WITH Classpath-exception-2.0"]}},"oneOf":[{"required":["license"]},{"required":["expression"]}]};const schema94 = {"type":"object","title":"License Object","oneOf":[{"required":["id"]},{"required":["name"]}],"properties":{"id":{"$ref":"spdx.SNAPSHOT.schema.json","title":"License ID (SPDX)","description":"A valid SPDX license ID","examples":["Apache-2.0"]},"name":{"type":"string","title":"License Name","description":"If SPDX does not define the license used, this field may be used to provide the license name","examples":["Acme Software License"]},"text":{"title":"License text","description":"An optional way to include the textual content of a license.","$ref":"#/definitions/attachment"},"url":{"type":"string","title":"License URL","description":"The URL to the license file. If specified, a 'license' externalReference should also be specified for completeness","examples":["https://www.apache.org/licenses/LICENSE-2.0.txt"],"format":"iri-reference"}}};const schema96 = {"type":"object","title":"Attachment","description":"Specifies the metadata and content for an attachment.","required":["content"],"properties":{"contentType":{"type":"string","title":"Content-Type","description":"Specifies the content type of the text. Defaults to text/plain if not specified.","default":"text/plain"},"encoding":{"type":"string","title":"Encoding","description":"Specifies the optional encoding the text is represented in.","enum":["base64"]},"content":{"type":"string","title":"Attachment Text","description":"The attachment data"}}};function validate91(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;const _errs1 = errors;let valid0 = false;let passing0 = null;const _errs2 = errors;if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.id === undefined) && (missing0 = "id")){const err0 = {instancePath,schemaPath:"#/oneOf/0/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"};if(vErrors === null){vErrors = [err0];}else {vErrors.push(err0);}errors++;}}var _valid0 = _errs2 === errors;if(_valid0){valid0 = true;passing0 = 0;}const _errs3 = errors;if(data && typeof data == "object" && !Array.isArray(data)){let missing1;if((data.name === undefined) && (missing1 = "name")){const err1 = {instancePath,schemaPath:"#/oneOf/1/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"};if(vErrors === null){vErrors = [err1];}else {vErrors.push(err1);}errors++;}}var _valid0 = _errs3 === errors;if(_valid0 && valid0){valid0 = false;passing0 = [passing0, 1];}else {if(_valid0){valid0 = true;passing0 = 1;}}if(!valid0){const err2 = {instancePath,schemaPath:"#/oneOf",keyword:"oneOf",params:{passingSchemas: passing0},message:"must match exactly one schema in oneOf"};if(vErrors === null){vErrors = [err2];}else {vErrors.push(err2);}errors++;validate91.errors = vErrors;return false;}else {errors = _errs1;if(vErrors !== null){if(_errs1){vErrors.length = _errs1;}else {vErrors = null;}}}if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){if(data.id !== undefined){let data0 = data.id;const _errs4 = errors;if(typeof data0 !== "string"){validate91.errors = [{instancePath:instancePath+"/id",schemaPath:"spdx.SNAPSHOT.schema.json/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}let valid3;valid3 = false;for(const v0 of schema25.enum){if(func0(data0, v0)){valid3 = true;break;}}if(!valid3){validate91.errors = [{instancePath:instancePath+"/id",schemaPath:"spdx.SNAPSHOT.schema.json/enum",keyword:"enum",params:{allowedValues: schema25.enum},message:"must be equal to one of the allowed values"}];return false;}var valid1 = _errs4 === errors;}else {var valid1 = true;}if(valid1){if(data.name !== undefined){const _errs8 = errors;if(typeof data.name !== "string"){validate91.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid1 = _errs8 === errors;}else {var valid1 = true;}if(valid1){if(data.text !== undefined){let data2 = data.text;const _errs10 = errors;const _errs11 = errors;if(errors === _errs11){if(data2 && typeof data2 == "object" && !Array.isArray(data2)){let missing2;if((data2.content === undefined) && (missing2 = "content")){validate91.errors = [{instancePath:instancePath+"/text",schemaPath:"#/definitions/attachment/required",keyword:"required",params:{missingProperty: missing2},message:"must have required property '"+missing2+"'"}];return false;}else {if(data2.contentType !== undefined){const _errs13 = errors;if(typeof data2.contentType !== "string"){validate91.errors = [{instancePath:instancePath+"/text/contentType",schemaPath:"#/definitions/attachment/properties/contentType/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid5 = _errs13 === errors;}else {var valid5 = true;}if(valid5){if(data2.encoding !== undefined){let data4 = data2.encoding;const _errs15 = errors;if(typeof data4 !== "string"){validate91.errors = [{instancePath:instancePath+"/text/encoding",schemaPath:"#/definitions/attachment/properties/encoding/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!(data4 === "base64")){validate91.errors = [{instancePath:instancePath+"/text/encoding",schemaPath:"#/definitions/attachment/properties/encoding/enum",keyword:"enum",params:{allowedValues: schema96.properties.encoding.enum},message:"must be equal to one of the allowed values"}];return false;}var valid5 = _errs15 === errors;}else {var valid5 = true;}if(valid5){if(data2.content !== undefined){const _errs17 = errors;if(typeof data2.content !== "string"){validate91.errors = [{instancePath:instancePath+"/text/content",schemaPath:"#/definitions/attachment/properties/content/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid5 = _errs17 === errors;}else {var valid5 = true;}}}}}else {validate91.errors = [{instancePath:instancePath+"/text",schemaPath:"#/definitions/attachment/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid1 = _errs10 === errors;}else {var valid1 = true;}if(valid1){if(data.url !== undefined){let data6 = data.url;const _errs19 = errors;if(errors === _errs19){if(errors === _errs19){if(typeof data6 === "string"){if(!(formats2(data6))){validate91.errors = [{instancePath:instancePath+"/url",schemaPath:"#/properties/url/format",keyword:"format",params:{format: "iri-reference"},message:"must match format \""+"iri-reference"+"\""}];return false;}}else {validate91.errors = [{instancePath:instancePath+"/url",schemaPath:"#/properties/url/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid1 = _errs19 === errors;}else {var valid1 = true;}}}}}else {validate91.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate91.errors = vErrors;return errors === 0;}function validate90(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;const _errs1 = errors;let valid0 = false;let passing0 = null;const _errs2 = errors;if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.license === undefined) && (missing0 = "license")){const err0 = {instancePath,schemaPath:"#/oneOf/0/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"};if(vErrors === null){vErrors = [err0];}else {vErrors.push(err0);}errors++;}}var _valid0 = _errs2 === errors;if(_valid0){valid0 = true;passing0 = 0;}const _errs3 = errors;if(data && typeof data == "object" && !Array.isArray(data)){let missing1;if((data.expression === undefined) && (missing1 = "expression")){const err1 = {instancePath,schemaPath:"#/oneOf/1/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"};if(vErrors === null){vErrors = [err1];}else {vErrors.push(err1);}errors++;}}var _valid0 = _errs3 === errors;if(_valid0 && valid0){valid0 = false;passing0 = [passing0, 1];}else {if(_valid0){valid0 = true;passing0 = 1;}}if(!valid0){const err2 = {instancePath,schemaPath:"#/oneOf",keyword:"oneOf",params:{passingSchemas: passing0},message:"must match exactly one schema in oneOf"};if(vErrors === null){vErrors = [err2];}else {vErrors.push(err2);}errors++;validate90.errors = vErrors;return false;}else {errors = _errs1;if(vErrors !== null){if(_errs1){vErrors.length = _errs1;}else {vErrors = null;}}}if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){if(data.license !== undefined){const _errs4 = errors;if(!(validate91(data.license, {instancePath:instancePath+"/license",parentData:data,parentDataProperty:"license",rootData}))){vErrors = vErrors === null ? validate91.errors : vErrors.concat(validate91.errors);errors = vErrors.length;}var valid1 = _errs4 === errors;}else {var valid1 = true;}if(valid1){if(data.expression !== undefined){const _errs5 = errors;if(typeof data.expression !== "string"){validate90.errors = [{instancePath:instancePath+"/expression",schemaPath:"#/properties/expression/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid1 = _errs5 === errors;}else {var valid1 = true;}}}else {validate90.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate90.errors = vErrors;return errors === 0;}const schema97 = {"type":"object","title":"SWID Tag","description":"Specifies metadata and content for ISO-IEC 19770-2 Software Identification (SWID) Tags.","required":["tagId","name"],"properties":{"tagId":{"type":"string","title":"Tag ID","description":"Maps to the tagId of a SoftwareIdentity."},"name":{"type":"string","title":"Name","description":"Maps to the name of a SoftwareIdentity."},"version":{"type":"string","title":"Version","default":"0.0","description":"Maps to the version of a SoftwareIdentity."},"tagVersion":{"type":"integer","title":"Tag Version","default":0,"description":"Maps to the tagVersion of a SoftwareIdentity."},"patch":{"type":"boolean","title":"Patch","default":false,"description":"Maps to the patch of a SoftwareIdentity."},"text":{"title":"Attachment text","description":"Specifies the metadata and content of the SWID tag.","$ref":"#/definitions/attachment"},"url":{"type":"string","title":"URL","description":"The URL to the SWID file.","format":"iri-reference"}}};function validate94(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if(((data.tagId === undefined) && (missing0 = "tagId")) || ((data.name === undefined) && (missing0 = "name"))){validate94.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.tagId !== undefined){const _errs1 = errors;if(typeof data.tagId !== "string"){validate94.errors = [{instancePath:instancePath+"/tagId",schemaPath:"#/properties/tagId/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.name !== undefined){const _errs3 = errors;if(typeof data.name !== "string"){validate94.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs3 === errors;}else {var valid0 = true;}if(valid0){if(data.version !== undefined){const _errs5 = errors;if(typeof data.version !== "string"){validate94.errors = [{instancePath:instancePath+"/version",schemaPath:"#/properties/version/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs5 === errors;}else {var valid0 = true;}if(valid0){if(data.tagVersion !== undefined){let data3 = data.tagVersion;const _errs7 = errors;if(!((typeof data3 == "number") && (!(data3 % 1) && !isNaN(data3)))){validate94.errors = [{instancePath:instancePath+"/tagVersion",schemaPath:"#/properties/tagVersion/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid0 = _errs7 === errors;}else {var valid0 = true;}if(valid0){if(data.patch !== undefined){const _errs9 = errors;if(typeof data.patch !== "boolean"){validate94.errors = [{instancePath:instancePath+"/patch",schemaPath:"#/properties/patch/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs9 === errors;}else {var valid0 = true;}if(valid0){if(data.text !== undefined){let data5 = data.text;const _errs11 = errors;const _errs12 = errors;if(errors === _errs12){if(data5 && typeof data5 == "object" && !Array.isArray(data5)){let missing1;if((data5.content === undefined) && (missing1 = "content")){validate94.errors = [{instancePath:instancePath+"/text",schemaPath:"#/definitions/attachment/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {if(data5.contentType !== undefined){const _errs14 = errors;if(typeof data5.contentType !== "string"){validate94.errors = [{instancePath:instancePath+"/text/contentType",schemaPath:"#/definitions/attachment/properties/contentType/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs14 === errors;}else {var valid2 = true;}if(valid2){if(data5.encoding !== undefined){let data7 = data5.encoding;const _errs16 = errors;if(typeof data7 !== "string"){validate94.errors = [{instancePath:instancePath+"/text/encoding",schemaPath:"#/definitions/attachment/properties/encoding/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!(data7 === "base64")){validate94.errors = [{instancePath:instancePath+"/text/encoding",schemaPath:"#/definitions/attachment/properties/encoding/enum",keyword:"enum",params:{allowedValues: schema96.properties.encoding.enum},message:"must be equal to one of the allowed values"}];return false;}var valid2 = _errs16 === errors;}else {var valid2 = true;}if(valid2){if(data5.content !== undefined){const _errs18 = errors;if(typeof data5.content !== "string"){validate94.errors = [{instancePath:instancePath+"/text/content",schemaPath:"#/definitions/attachment/properties/content/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs18 === errors;}else {var valid2 = true;}}}}}else {validate94.errors = [{instancePath:instancePath+"/text",schemaPath:"#/definitions/attachment/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs11 === errors;}else {var valid0 = true;}if(valid0){if(data.url !== undefined){let data9 = data.url;const _errs20 = errors;if(errors === _errs20){if(errors === _errs20){if(typeof data9 === "string"){if(!(formats2(data9))){validate94.errors = [{instancePath:instancePath+"/url",schemaPath:"#/properties/url/format",keyword:"format",params:{format: "iri-reference"},message:"must match format \""+"iri-reference"+"\""}];return false;}}else {validate94.errors = [{instancePath:instancePath+"/url",schemaPath:"#/properties/url/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs20 === errors;}else {var valid0 = true;}}}}}}}}}else {validate94.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate94.errors = vErrors;return errors === 0;}const schema99 = {"type":"object","title":"Commit","description":"Specifies an individual commit","properties":{"uid":{"type":"string","title":"UID","description":"A unique identifier of the commit. This may be version control specific. For example, Subversion uses revision numbers whereas git uses commit hashes."},"url":{"type":"string","title":"URL","description":"The URL to the commit. This URL will typically point to a commit in a version control system.","format":"iri-reference"},"author":{"title":"Author","description":"The author who created the changes in the commit","$ref":"#/definitions/identifiableAction"},"committer":{"title":"Committer","description":"The person who committed or pushed the commit","$ref":"#/definitions/identifiableAction"},"message":{"type":"string","title":"Message","description":"The text description of the contents of the commit"}}};const schema100 = {"type":"object","title":"Identifiable Action","description":"Specifies an individual commit","properties":{"timestamp":{"type":"string","format":"date-time","title":"Timestamp","description":"The timestamp in which the action occurred"},"name":{"type":"string","title":"Name","description":"The name of the individual who performed the action"},"email":{"type":"string","format":"idn-email","title":"E-mail","description":"The email address of the individual who performed the action"}}};function validate96(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){if(data.uid !== undefined){const _errs1 = errors;if(typeof data.uid !== "string"){validate96.errors = [{instancePath:instancePath+"/uid",schemaPath:"#/properties/uid/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.url !== undefined){let data1 = data.url;const _errs3 = errors;if(errors === _errs3){if(errors === _errs3){if(typeof data1 === "string"){if(!(formats2(data1))){validate96.errors = [{instancePath:instancePath+"/url",schemaPath:"#/properties/url/format",keyword:"format",params:{format: "iri-reference"},message:"must match format \""+"iri-reference"+"\""}];return false;}}else {validate96.errors = [{instancePath:instancePath+"/url",schemaPath:"#/properties/url/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs3 === errors;}else {var valid0 = true;}if(valid0){if(data.author !== undefined){let data2 = data.author;const _errs5 = errors;const _errs6 = errors;if(errors === _errs6){if(data2 && typeof data2 == "object" && !Array.isArray(data2)){if(data2.timestamp !== undefined){let data3 = data2.timestamp;const _errs8 = errors;if(errors === _errs8){if(errors === _errs8){if(typeof data3 === "string"){if(!(formats0.validate(data3))){validate96.errors = [{instancePath:instancePath+"/author/timestamp",schemaPath:"#/definitions/identifiableAction/properties/timestamp/format",keyword:"format",params:{format: "date-time"},message:"must match format \""+"date-time"+"\""}];return false;}}else {validate96.errors = [{instancePath:instancePath+"/author/timestamp",schemaPath:"#/definitions/identifiableAction/properties/timestamp/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid2 = _errs8 === errors;}else {var valid2 = true;}if(valid2){if(data2.name !== undefined){const _errs10 = errors;if(typeof data2.name !== "string"){validate96.errors = [{instancePath:instancePath+"/author/name",schemaPath:"#/definitions/identifiableAction/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs10 === errors;}else {var valid2 = true;}if(valid2){if(data2.email !== undefined){let data5 = data2.email;const _errs12 = errors;if(errors === _errs12){if(errors === _errs12){if(typeof data5 === "string"){if(!(formats4(data5))){validate96.errors = [{instancePath:instancePath+"/author/email",schemaPath:"#/definitions/identifiableAction/properties/email/format",keyword:"format",params:{format: "idn-email"},message:"must match format \""+"idn-email"+"\""}];return false;}}else {validate96.errors = [{instancePath:instancePath+"/author/email",schemaPath:"#/definitions/identifiableAction/properties/email/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid2 = _errs12 === errors;}else {var valid2 = true;}}}}else {validate96.errors = [{instancePath:instancePath+"/author",schemaPath:"#/definitions/identifiableAction/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs5 === errors;}else {var valid0 = true;}if(valid0){if(data.committer !== undefined){let data6 = data.committer;const _errs14 = errors;const _errs15 = errors;if(errors === _errs15){if(data6 && typeof data6 == "object" && !Array.isArray(data6)){if(data6.timestamp !== undefined){let data7 = data6.timestamp;const _errs17 = errors;if(errors === _errs17){if(errors === _errs17){if(typeof data7 === "string"){if(!(formats0.validate(data7))){validate96.errors = [{instancePath:instancePath+"/committer/timestamp",schemaPath:"#/definitions/identifiableAction/properties/timestamp/format",keyword:"format",params:{format: "date-time"},message:"must match format \""+"date-time"+"\""}];return false;}}else {validate96.errors = [{instancePath:instancePath+"/committer/timestamp",schemaPath:"#/definitions/identifiableAction/properties/timestamp/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid4 = _errs17 === errors;}else {var valid4 = true;}if(valid4){if(data6.name !== undefined){const _errs19 = errors;if(typeof data6.name !== "string"){validate96.errors = [{instancePath:instancePath+"/committer/name",schemaPath:"#/definitions/identifiableAction/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid4 = _errs19 === errors;}else {var valid4 = true;}if(valid4){if(data6.email !== undefined){let data9 = data6.email;const _errs21 = errors;if(errors === _errs21){if(errors === _errs21){if(typeof data9 === "string"){if(!(formats4(data9))){validate96.errors = [{instancePath:instancePath+"/committer/email",schemaPath:"#/definitions/identifiableAction/properties/email/format",keyword:"format",params:{format: "idn-email"},message:"must match format \""+"idn-email"+"\""}];return false;}}else {validate96.errors = [{instancePath:instancePath+"/committer/email",schemaPath:"#/definitions/identifiableAction/properties/email/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid4 = _errs21 === errors;}else {var valid4 = true;}}}}else {validate96.errors = [{instancePath:instancePath+"/committer",schemaPath:"#/definitions/identifiableAction/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs14 === errors;}else {var valid0 = true;}if(valid0){if(data.message !== undefined){const _errs23 = errors;if(typeof data.message !== "string"){validate96.errors = [{instancePath:instancePath+"/message",schemaPath:"#/properties/message/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs23 === errors;}else {var valid0 = true;}}}}}}else {validate96.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate96.errors = vErrors;return errors === 0;}const schema102 = {"type":"object","title":"Patch","description":"Specifies an individual patch","required":["type"],"properties":{"type":{"type":"string","enum":["unofficial","monkey","backport","cherry-pick"],"title":"Type","description":"Specifies the purpose for the patch including the resolution of defects, security issues, or new behavior or functionality"},"diff":{"title":"Diff","description":"The patch file (or diff) that show changes. Refer to https://en.wikipedia.org/wiki/Diff","$ref":"#/definitions/diff"},"resolves":{"type":"array","items":{"$ref":"#/definitions/issue"},"title":"Resolves","description":"A collection of issues the patch resolves"}}};const schema105 = {"type":"object","title":"Diff","description":"The patch file (or diff) that show changes. Refer to https://en.wikipedia.org/wiki/Diff","required":["type"],"properties":{"type":{"type":"string","enum":["defect","enhancement","security"],"title":"Type","description":"Specifies the type of issue"},"id":{"type":"string","title":"ID","description":"The identifier of the issue assigned by the source of the issue"},"name":{"type":"string","title":"Name","description":"The name of the issue"},"description":{"type":"string","title":"Description","description":"A description of the issue"},"source":{"type":"object","title":"Source","description":"The source of the issue where it is documented","properties":{"name":{"type":"string","title":"Name","description":"The name of the source. For example 'National Vulnerability Database', 'NVD', and 'Apache'"},"url":{"type":"string","title":"URL","description":"The url of the issue documentation as provided by the source","format":"iri-reference"}}},"references":{"type":"array","items":{"type":"string","format":"iri-reference"},"title":"References","description":"A collection of URL's for reference. Multiple URLs are allowed.","examples":["https://example.com"]}}};const schema103 = {"type":"object","title":"Diff","description":"The patch file (or diff) that show changes. Refer to https://en.wikipedia.org/wiki/Diff","properties":{"text":{"title":"Diff text","description":"Specifies the optional text of the diff","$ref":"#/definitions/attachment"},"url":{"type":"string","title":"URL","description":"Specifies the URL to the diff","format":"iri-reference"}}};function validate99(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){if(data.text !== undefined){let data0 = data.text;const _errs1 = errors;const _errs2 = errors;if(errors === _errs2){if(data0 && typeof data0 == "object" && !Array.isArray(data0)){let missing0;if((data0.content === undefined) && (missing0 = "content")){validate99.errors = [{instancePath:instancePath+"/text",schemaPath:"#/definitions/attachment/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data0.contentType !== undefined){const _errs4 = errors;if(typeof data0.contentType !== "string"){validate99.errors = [{instancePath:instancePath+"/text/contentType",schemaPath:"#/definitions/attachment/properties/contentType/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs4 === errors;}else {var valid2 = true;}if(valid2){if(data0.encoding !== undefined){let data2 = data0.encoding;const _errs6 = errors;if(typeof data2 !== "string"){validate99.errors = [{instancePath:instancePath+"/text/encoding",schemaPath:"#/definitions/attachment/properties/encoding/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!(data2 === "base64")){validate99.errors = [{instancePath:instancePath+"/text/encoding",schemaPath:"#/definitions/attachment/properties/encoding/enum",keyword:"enum",params:{allowedValues: schema96.properties.encoding.enum},message:"must be equal to one of the allowed values"}];return false;}var valid2 = _errs6 === errors;}else {var valid2 = true;}if(valid2){if(data0.content !== undefined){const _errs8 = errors;if(typeof data0.content !== "string"){validate99.errors = [{instancePath:instancePath+"/text/content",schemaPath:"#/definitions/attachment/properties/content/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs8 === errors;}else {var valid2 = true;}}}}}else {validate99.errors = [{instancePath:instancePath+"/text",schemaPath:"#/definitions/attachment/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.url !== undefined){let data4 = data.url;const _errs10 = errors;if(errors === _errs10){if(errors === _errs10){if(typeof data4 === "string"){if(!(formats2(data4))){validate99.errors = [{instancePath:instancePath+"/url",schemaPath:"#/properties/url/format",keyword:"format",params:{format: "iri-reference"},message:"must match format \""+"iri-reference"+"\""}];return false;}}else {validate99.errors = [{instancePath:instancePath+"/url",schemaPath:"#/properties/url/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs10 === errors;}else {var valid0 = true;}}}else {validate99.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate99.errors = vErrors;return errors === 0;}function validate98(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.type === undefined) && (missing0 = "type")){validate98.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.type !== undefined){let data0 = data.type;const _errs1 = errors;if(typeof data0 !== "string"){validate98.errors = [{instancePath:instancePath+"/type",schemaPath:"#/properties/type/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!((((data0 === "unofficial") || (data0 === "monkey")) || (data0 === "backport")) || (data0 === "cherry-pick"))){validate98.errors = [{instancePath:instancePath+"/type",schemaPath:"#/properties/type/enum",keyword:"enum",params:{allowedValues: schema102.properties.type.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.diff !== undefined){const _errs3 = errors;if(!(validate99(data.diff, {instancePath:instancePath+"/diff",parentData:data,parentDataProperty:"diff",rootData}))){vErrors = vErrors === null ? validate99.errors : vErrors.concat(validate99.errors);errors = vErrors.length;}var valid0 = _errs3 === errors;}else {var valid0 = true;}if(valid0){if(data.resolves !== undefined){let data2 = data.resolves;const _errs4 = errors;if(errors === _errs4){if(Array.isArray(data2)){var valid1 = true;const len0 = data2.length;for(let i0=0; i0<len0; i0++){let data3 = data2[i0];const _errs6 = errors;const _errs7 = errors;if(errors === _errs7){if(data3 && typeof data3 == "object" && !Array.isArray(data3)){let missing1;if((data3.type === undefined) && (missing1 = "type")){validate98.errors = [{instancePath:instancePath+"/resolves/" + i0,schemaPath:"#/definitions/issue/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {if(data3.type !== undefined){let data4 = data3.type;const _errs9 = errors;if(typeof data4 !== "string"){validate98.errors = [{instancePath:instancePath+"/resolves/" + i0+"/type",schemaPath:"#/definitions/issue/properties/type/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!(((data4 === "defect") || (data4 === "enhancement")) || (data4 === "security"))){validate98.errors = [{instancePath:instancePath+"/resolves/" + i0+"/type",schemaPath:"#/definitions/issue/properties/type/enum",keyword:"enum",params:{allowedValues: schema105.properties.type.enum},message:"must be equal to one of the allowed values"}];return false;}var valid3 = _errs9 === errors;}else {var valid3 = true;}if(valid3){if(data3.id !== undefined){const _errs11 = errors;if(typeof data3.id !== "string"){validate98.errors = [{instancePath:instancePath+"/resolves/" + i0+"/id",schemaPath:"#/definitions/issue/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs11 === errors;}else {var valid3 = true;}if(valid3){if(data3.name !== undefined){const _errs13 = errors;if(typeof data3.name !== "string"){validate98.errors = [{instancePath:instancePath+"/resolves/" + i0+"/name",schemaPath:"#/definitions/issue/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs13 === errors;}else {var valid3 = true;}if(valid3){if(data3.description !== undefined){const _errs15 = errors;if(typeof data3.description !== "string"){validate98.errors = [{instancePath:instancePath+"/resolves/" + i0+"/description",schemaPath:"#/definitions/issue/properties/description/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs15 === errors;}else {var valid3 = true;}if(valid3){if(data3.source !== undefined){let data8 = data3.source;const _errs17 = errors;if(errors === _errs17){if(data8 && typeof data8 == "object" && !Array.isArray(data8)){if(data8.name !== undefined){const _errs19 = errors;if(typeof data8.name !== "string"){validate98.errors = [{instancePath:instancePath+"/resolves/" + i0+"/source/name",schemaPath:"#/definitions/issue/properties/source/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid4 = _errs19 === errors;}else {var valid4 = true;}if(valid4){if(data8.url !== undefined){let data10 = data8.url;const _errs21 = errors;if(errors === _errs21){if(errors === _errs21){if(typeof data10 === "string"){if(!(formats2(data10))){validate98.errors = [{instancePath:instancePath+"/resolves/" + i0+"/source/url",schemaPath:"#/definitions/issue/properties/source/properties/url/format",keyword:"format",params:{format: "iri-reference"},message:"must match format \""+"iri-reference"+"\""}];return false;}}else {validate98.errors = [{instancePath:instancePath+"/resolves/" + i0+"/source/url",schemaPath:"#/definitions/issue/properties/source/properties/url/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid4 = _errs21 === errors;}else {var valid4 = true;}}}else {validate98.errors = [{instancePath:instancePath+"/resolves/" + i0+"/source",schemaPath:"#/definitions/issue/properties/source/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid3 = _errs17 === errors;}else {var valid3 = true;}if(valid3){if(data3.references !== undefined){let data11 = data3.references;const _errs23 = errors;if(errors === _errs23){if(Array.isArray(data11)){var valid5 = true;const len1 = data11.length;for(let i1=0; i1<len1; i1++){let data12 = data11[i1];const _errs25 = errors;if(errors === _errs25){if(errors === _errs25){if(typeof data12 === "string"){if(!(formats2(data12))){validate98.errors = [{instancePath:instancePath+"/resolves/" + i0+"/references/" + i1,schemaPath:"#/definitions/issue/properties/references/items/format",keyword:"format",params:{format: "iri-reference"},message:"must match format \""+"iri-reference"+"\""}];return false;}}else {validate98.errors = [{instancePath:instancePath+"/resolves/" + i0+"/references/" + i1,schemaPath:"#/definitions/issue/properties/references/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid5 = _errs25 === errors;if(!valid5){break;}}}else {validate98.errors = [{instancePath:instancePath+"/resolves/" + i0+"/references",schemaPath:"#/definitions/issue/properties/references/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid3 = _errs23 === errors;}else {var valid3 = true;}}}}}}}}else {validate98.errors = [{instancePath:instancePath+"/resolves/" + i0,schemaPath:"#/definitions/issue/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid1 = _errs6 === errors;if(!valid1){break;}}}else {validate98.errors = [{instancePath:instancePath+"/resolves",schemaPath:"#/properties/resolves/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs4 === errors;}else {var valid0 = true;}}}}}else {validate98.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate98.errors = vErrors;return errors === 0;}const schema106 = {"type":"object","title":"External Reference","description":"Specifies an individual external reference","required":["url","type"],"properties":{"url":{"type":"string","title":"URL","description":"The URL to the external reference","format":"iri-reference"},"comment":{"type":"string","title":"Comment","description":"An optional comment describing the external reference"},"type":{"type":"string","title":"Type","description":"Specifies the type of external reference. There are built-in types to describe common references. If a type does not exist for the reference being referred to, use the \"other\" type.","enum":["vcs","issue-tracker","website","advisories","bom","mailing-list","social","chat","documentation","support","distribution","license","build-meta","build-system","other"]},"hashes":{"$id":"#/definitions/externalReference/properties/hashes","type":"array","items":{"$ref":"#/definitions/hash"},"title":"Hashes","description":"The hashes of the external reference (if applicable)."}}};function validate102(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if(((data.url === undefined) && (missing0 = "url")) || ((data.type === undefined) && (missing0 = "type"))){validate102.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.url !== undefined){let data0 = data.url;const _errs1 = errors;if(errors === _errs1){if(errors === _errs1){if(typeof data0 === "string"){if(!(formats2(data0))){validate102.errors = [{instancePath:instancePath+"/url",schemaPath:"#/properties/url/format",keyword:"format",params:{format: "iri-reference"},message:"must match format \""+"iri-reference"+"\""}];return false;}}else {validate102.errors = [{instancePath:instancePath+"/url",schemaPath:"#/properties/url/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.comment !== undefined){const _errs3 = errors;if(typeof data.comment !== "string"){validate102.errors = [{instancePath:instancePath+"/comment",schemaPath:"#/properties/comment/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs3 === errors;}else {var valid0 = true;}if(valid0){if(data.type !== undefined){let data2 = data.type;const _errs5 = errors;if(typeof data2 !== "string"){validate102.errors = [{instancePath:instancePath+"/type",schemaPath:"#/properties/type/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!(((((((((((((((data2 === "vcs") || (data2 === "issue-tracker")) || (data2 === "website")) || (data2 === "advisories")) || (data2 === "bom")) || (data2 === "mailing-list")) || (data2 === "social")) || (data2 === "chat")) || (data2 === "documentation")) || (data2 === "support")) || (data2 === "distribution")) || (data2 === "license")) || (data2 === "build-meta")) || (data2 === "build-system")) || (data2 === "other"))){validate102.errors = [{instancePath:instancePath+"/type",schemaPath:"#/properties/type/enum",keyword:"enum",params:{allowedValues: schema106.properties.type.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs5 === errors;}else {var valid0 = true;}if(valid0){if(data.hashes !== undefined){let data3 = data.hashes;const _errs7 = errors;if(errors === _errs7){if(Array.isArray(data3)){var valid1 = true;const len0 = data3.length;for(let i0=0; i0<len0; i0++){const _errs9 = errors;if(!(validate83(data3[i0], {instancePath:instancePath+"/hashes/" + i0,parentData:data3,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate83.errors : vErrors.concat(validate83.errors);errors = vErrors.length;}var valid1 = _errs9 === errors;if(!valid1){break;}}}else {validate102.errors = [{instancePath:instancePath+"/hashes",schemaPath:"#/properties/hashes/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs7 === errors;}else {var valid0 = true;}}}}}}else {validate102.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate102.errors = vErrors;return errors === 0;}const schema107 = {"type":"object","title":"Evidence","description":"Provides the ability to document evidence collected through various forms of extraction or analysis.","properties":{"licenses":{"type":"array","items":{"$ref":"#/definitions/licenseChoice"},"title":"Component License(s)"},"copyright":{"type":"array","items":{"$ref":"#/definitions/copyright"},"title":"Copyright"}}};const schema108 = {"type":"object","title":"Copyright","required":["text"],"properties":{"text":{"type":"string","title":"Copyright Text"}}};function validate105(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){if(data.licenses !== undefined){let data0 = data.licenses;const _errs1 = errors;if(errors === _errs1){if(Array.isArray(data0)){var valid1 = true;const len0 = data0.length;for(let i0=0; i0<len0; i0++){const _errs3 = errors;if(!(validate90(data0[i0], {instancePath:instancePath+"/licenses/" + i0,parentData:data0,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate90.errors : vErrors.concat(validate90.errors);errors = vErrors.length;}var valid1 = _errs3 === errors;if(!valid1){break;}}}else {validate105.errors = [{instancePath:instancePath+"/licenses",schemaPath:"#/properties/licenses/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.copyright !== undefined){let data2 = data.copyright;const _errs4 = errors;if(errors === _errs4){if(Array.isArray(data2)){var valid2 = true;const len1 = data2.length;for(let i1=0; i1<len1; i1++){let data3 = data2[i1];const _errs6 = errors;const _errs7 = errors;if(errors === _errs7){if(data3 && typeof data3 == "object" && !Array.isArray(data3)){let missing0;if((data3.text === undefined) && (missing0 = "text")){validate105.errors = [{instancePath:instancePath+"/copyright/" + i1,schemaPath:"#/definitions/copyright/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data3.text !== undefined){if(typeof data3.text !== "string"){validate105.errors = [{instancePath:instancePath+"/copyright/" + i1+"/text",schemaPath:"#/definitions/copyright/properties/text/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}}else {validate105.errors = [{instancePath:instancePath+"/copyright/" + i1,schemaPath:"#/definitions/copyright/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid2 = _errs6 === errors;if(!valid2){break;}}}else {validate105.errors = [{instancePath:instancePath+"/copyright",schemaPath:"#/properties/copyright/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs4 === errors;}else {var valid0 = true;}}}else {validate105.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate105.errors = vErrors;return errors === 0;}const wrapper5 = {validate: validate86};function validate86(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((((data.type === undefined) && (missing0 = "type")) || ((data.name === undefined) && (missing0 = "name"))) || ((data.version === undefined) && (missing0 = "version"))){validate86.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.type !== undefined){let data0 = data.type;const _errs1 = errors;if(typeof data0 !== "string"){validate86.errors = [{instancePath:instancePath+"/type",schemaPath:"#/properties/type/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!((((((((data0 === "application") || (data0 === "framework")) || (data0 === "library")) || (data0 === "container")) || (data0 === "operating-system")) || (data0 === "device")) || (data0 === "firmware")) || (data0 === "file"))){validate86.errors = [{instancePath:instancePath+"/type",schemaPath:"#/properties/type/enum",keyword:"enum",params:{allowedValues: schema90.properties.type.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data["mime-type"] !== undefined){let data1 = data["mime-type"];const _errs3 = errors;if(errors === _errs3){if(typeof data1 === "string"){if(!pattern2.test(data1)){validate86.errors = [{instancePath:instancePath+"/mime-type",schemaPath:"#/properties/mime-type/pattern",keyword:"pattern",params:{pattern: "^[-+a-z0-9.]+/[-+a-z0-9.]+$"},message:"must match pattern \""+"^[-+a-z0-9.]+/[-+a-z0-9.]+$"+"\""}];return false;}}else {validate86.errors = [{instancePath:instancePath+"/mime-type",schemaPath:"#/properties/mime-type/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs3 === errors;}else {var valid0 = true;}if(valid0){if(data["bom-ref"] !== undefined){const _errs5 = errors;if(typeof data["bom-ref"] !== "string"){validate86.errors = [{instancePath:instancePath+"/bom-ref",schemaPath:"#/properties/bom-ref/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs5 === errors;}else {var valid0 = true;}if(valid0){if(data.supplier !== undefined){const _errs7 = errors;if(!(validate87(data.supplier, {instancePath:instancePath+"/supplier",parentData:data,parentDataProperty:"supplier",rootData}))){vErrors = vErrors === null ? validate87.errors : vErrors.concat(validate87.errors);errors = vErrors.length;}var valid0 = _errs7 === errors;}else {var valid0 = true;}if(valid0){if(data.author !== undefined){const _errs8 = errors;if(typeof data.author !== "string"){validate86.errors = [{instancePath:instancePath+"/author",schemaPath:"#/properties/author/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs8 === errors;}else {var valid0 = true;}if(valid0){if(data.publisher !== undefined){const _errs10 = errors;if(typeof data.publisher !== "string"){validate86.errors = [{instancePath:instancePath+"/publisher",schemaPath:"#/properties/publisher/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs10 === errors;}else {var valid0 = true;}if(valid0){if(data.group !== undefined){const _errs12 = errors;if(typeof data.group !== "string"){validate86.errors = [{instancePath:instancePath+"/group",schemaPath:"#/properties/group/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs12 === errors;}else {var valid0 = true;}if(valid0){if(data.name !== undefined){const _errs14 = errors;if(typeof data.name !== "string"){validate86.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs14 === errors;}else {var valid0 = true;}if(valid0){if(data.version !== undefined){const _errs16 = errors;if(typeof data.version !== "string"){validate86.errors = [{instancePath:instancePath+"/version",schemaPath:"#/properties/version/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs16 === errors;}else {var valid0 = true;}if(valid0){if(data.description !== undefined){const _errs18 = errors;if(typeof data.description !== "string"){validate86.errors = [{instancePath:instancePath+"/description",schemaPath:"#/properties/description/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs18 === errors;}else {var valid0 = true;}if(valid0){if(data.scope !== undefined){let data10 = data.scope;const _errs20 = errors;if(typeof data10 !== "string"){validate86.errors = [{instancePath:instancePath+"/scope",schemaPath:"#/properties/scope/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!(((data10 === "required") || (data10 === "optional")) || (data10 === "excluded"))){validate86.errors = [{instancePath:instancePath+"/scope",schemaPath:"#/properties/scope/enum",keyword:"enum",params:{allowedValues: schema90.properties.scope.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs20 === errors;}else {var valid0 = true;}if(valid0){if(data.hashes !== undefined){let data11 = data.hashes;const _errs22 = errors;if(errors === _errs22){if(Array.isArray(data11)){var valid1 = true;const len0 = data11.length;for(let i0=0; i0<len0; i0++){const _errs24 = errors;if(!(validate83(data11[i0], {instancePath:instancePath+"/hashes/" + i0,parentData:data11,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate83.errors : vErrors.concat(validate83.errors);errors = vErrors.length;}var valid1 = _errs24 === errors;if(!valid1){break;}}}else {validate86.errors = [{instancePath:instancePath+"/hashes",schemaPath:"#/properties/hashes/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs22 === errors;}else {var valid0 = true;}if(valid0){if(data.licenses !== undefined){let data13 = data.licenses;const _errs25 = errors;if(errors === _errs25){if(Array.isArray(data13)){var valid2 = true;const len1 = data13.length;for(let i1=0; i1<len1; i1++){const _errs27 = errors;if(!(validate90(data13[i1], {instancePath:instancePath+"/licenses/" + i1,parentData:data13,parentDataProperty:i1,rootData}))){vErrors = vErrors === null ? validate90.errors : vErrors.concat(validate90.errors);errors = vErrors.length;}var valid2 = _errs27 === errors;if(!valid2){break;}}}else {validate86.errors = [{instancePath:instancePath+"/licenses",schemaPath:"#/properties/licenses/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs25 === errors;}else {var valid0 = true;}if(valid0){if(data.copyright !== undefined){const _errs28 = errors;if(typeof data.copyright !== "string"){validate86.errors = [{instancePath:instancePath+"/copyright",schemaPath:"#/properties/copyright/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs28 === errors;}else {var valid0 = true;}if(valid0){if(data.cpe !== undefined){const _errs30 = errors;if(typeof data.cpe !== "string"){validate86.errors = [{instancePath:instancePath+"/cpe",schemaPath:"#/properties/cpe/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs30 === errors;}else {var valid0 = true;}if(valid0){if(data.purl !== undefined){const _errs32 = errors;if(typeof data.purl !== "string"){validate86.errors = [{instancePath:instancePath+"/purl",schemaPath:"#/properties/purl/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs32 === errors;}else {var valid0 = true;}if(valid0){if(data.swid !== undefined){const _errs34 = errors;if(!(validate94(data.swid, {instancePath:instancePath+"/swid",parentData:data,parentDataProperty:"swid",rootData}))){vErrors = vErrors === null ? validate94.errors : vErrors.concat(validate94.errors);errors = vErrors.length;}var valid0 = _errs34 === errors;}else {var valid0 = true;}if(valid0){if(data.modified !== undefined){const _errs35 = errors;if(typeof data.modified !== "boolean"){validate86.errors = [{instancePath:instancePath+"/modified",schemaPath:"#/properties/modified/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs35 === errors;}else {var valid0 = true;}if(valid0){if(data.pedigree !== undefined){let data20 = data.pedigree;const _errs37 = errors;if(errors === _errs37){if(data20 && typeof data20 == "object" && !Array.isArray(data20)){if(data20.ancestors !== undefined){let data21 = data20.ancestors;const _errs39 = errors;if(errors === _errs39){if(Array.isArray(data21)){var valid4 = true;const len2 = data21.length;for(let i2=0; i2<len2; i2++){const _errs41 = errors;if(!(wrapper5.validate(data21[i2], {instancePath:instancePath+"/pedigree/ancestors/" + i2,parentData:data21,parentDataProperty:i2,rootData}))){vErrors = vErrors === null ? wrapper5.validate.errors : vErrors.concat(wrapper5.validate.errors);errors = vErrors.length;}var valid4 = _errs41 === errors;if(!valid4){break;}}}else {validate86.errors = [{instancePath:instancePath+"/pedigree/ancestors",schemaPath:"#/properties/pedigree/properties/ancestors/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid3 = _errs39 === errors;}else {var valid3 = true;}if(valid3){if(data20.descendants !== undefined){let data23 = data20.descendants;const _errs42 = errors;if(errors === _errs42){if(Array.isArray(data23)){var valid5 = true;const len3 = data23.length;for(let i3=0; i3<len3; i3++){const _errs44 = errors;if(!(wrapper5.validate(data23[i3], {instancePath:instancePath+"/pedigree/descendants/" + i3,parentData:data23,parentDataProperty:i3,rootData}))){vErrors = vErrors === null ? wrapper5.validate.errors : vErrors.concat(wrapper5.validate.errors);errors = vErrors.length;}var valid5 = _errs44 === errors;if(!valid5){break;}}}else {validate86.errors = [{instancePath:instancePath+"/pedigree/descendants",schemaPath:"#/properties/pedigree/properties/descendants/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid3 = _errs42 === errors;}else {var valid3 = true;}if(valid3){if(data20.variants !== undefined){let data25 = data20.variants;const _errs45 = errors;if(errors === _errs45){if(Array.isArray(data25)){var valid6 = true;const len4 = data25.length;for(let i4=0; i4<len4; i4++){const _errs47 = errors;if(!(wrapper5.validate(data25[i4], {instancePath:instancePath+"/pedigree/variants/" + i4,parentData:data25,parentDataProperty:i4,rootData}))){vErrors = vErrors === null ? wrapper5.validate.errors : vErrors.concat(wrapper5.validate.errors);errors = vErrors.length;}var valid6 = _errs47 === errors;if(!valid6){break;}}}else {validate86.errors = [{instancePath:instancePath+"/pedigree/variants",schemaPath:"#/properties/pedigree/properties/variants/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid3 = _errs45 === errors;}else {var valid3 = true;}if(valid3){if(data20.commits !== undefined){let data27 = data20.commits;const _errs48 = errors;if(errors === _errs48){if(Array.isArray(data27)){var valid7 = true;const len5 = data27.length;for(let i5=0; i5<len5; i5++){const _errs50 = errors;if(!(validate96(data27[i5], {instancePath:instancePath+"/pedigree/commits/" + i5,parentData:data27,parentDataProperty:i5,rootData}))){vErrors = vErrors === null ? validate96.errors : vErrors.concat(validate96.errors);errors = vErrors.length;}var valid7 = _errs50 === errors;if(!valid7){break;}}}else {validate86.errors = [{instancePath:instancePath+"/pedigree/commits",schemaPath:"#/properties/pedigree/properties/commits/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid3 = _errs48 === errors;}else {var valid3 = true;}if(valid3){if(data20.patches !== undefined){let data29 = data20.patches;const _errs51 = errors;if(errors === _errs51){if(Array.isArray(data29)){var valid8 = true;const len6 = data29.length;for(let i6=0; i6<len6; i6++){const _errs53 = errors;if(!(validate98(data29[i6], {instancePath:instancePath+"/pedigree/patches/" + i6,parentData:data29,parentDataProperty:i6,rootData}))){vErrors = vErrors === null ? validate98.errors : vErrors.concat(validate98.errors);errors = vErrors.length;}var valid8 = _errs53 === errors;if(!valid8){break;}}}else {validate86.errors = [{instancePath:instancePath+"/pedigree/patches",schemaPath:"#/properties/pedigree/properties/patches/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid3 = _errs51 === errors;}else {var valid3 = true;}if(valid3){if(data20.notes !== undefined){const _errs54 = errors;if(typeof data20.notes !== "string"){validate86.errors = [{instancePath:instancePath+"/pedigree/notes",schemaPath:"#/properties/pedigree/properties/notes/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid3 = _errs54 === errors;}else {var valid3 = true;}}}}}}}else {validate86.errors = [{instancePath:instancePath+"/pedigree",schemaPath:"#/properties/pedigree/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs37 === errors;}else {var valid0 = true;}if(valid0){if(data.externalReferences !== undefined){let data32 = data.externalReferences;const _errs56 = errors;if(errors === _errs56){if(Array.isArray(data32)){var valid9 = true;const len7 = data32.length;for(let i7=0; i7<len7; i7++){const _errs58 = errors;if(!(validate102(data32[i7], {instancePath:instancePath+"/externalReferences/" + i7,parentData:data32,parentDataProperty:i7,rootData}))){vErrors = vErrors === null ? validate102.errors : vErrors.concat(validate102.errors);errors = vErrors.length;}var valid9 = _errs58 === errors;if(!valid9){break;}}}else {validate86.errors = [{instancePath:instancePath+"/externalReferences",schemaPath:"#/properties/externalReferences/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs56 === errors;}else {var valid0 = true;}if(valid0){if(data.components !== undefined){let data34 = data.components;const _errs59 = errors;if(errors === _errs59){if(Array.isArray(data34)){var valid10 = true;const len8 = data34.length;for(let i8=0; i8<len8; i8++){const _errs61 = errors;if(!(wrapper5.validate(data34[i8], {instancePath:instancePath+"/components/" + i8,parentData:data34,parentDataProperty:i8,rootData}))){vErrors = vErrors === null ? wrapper5.validate.errors : vErrors.concat(wrapper5.validate.errors);errors = vErrors.length;}var valid10 = _errs61 === errors;if(!valid10){break;}}if(valid10){let i9 = data34.length;let j0;if(i9 > 1){outer0:for(;i9--;){for(j0 = i9; j0--;){if(func0(data34[i9], data34[j0])){validate86.errors = [{instancePath:instancePath+"/components",schemaPath:"#/properties/components/uniqueItems",keyword:"uniqueItems",params:{i: i9, j: j0},message:"must NOT have duplicate items (items ## "+j0+" and "+i9+" are identical)"}];return false;break outer0;}}}}}}else {validate86.errors = [{instancePath:instancePath+"/components",schemaPath:"#/properties/components/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs59 === errors;}else {var valid0 = true;}if(valid0){if(data.evidence !== undefined){const _errs62 = errors;if(!(validate105(data.evidence, {instancePath:instancePath+"/evidence",parentData:data,parentDataProperty:"evidence",rootData}))){vErrors = vErrors === null ? validate105.errors : vErrors.concat(validate105.errors);errors = vErrors.length;}var valid0 = _errs62 === errors;}else {var valid0 = true;}if(valid0){if(data.properties !== undefined){let data37 = data.properties;const _errs63 = errors;if(errors === _errs63){if(Array.isArray(data37)){var valid12 = true;const len9 = data37.length;for(let i10=0; i10<len9; i10++){let data38 = data37[i10];const _errs65 = errors;const _errs66 = errors;if(errors === _errs66){if(data38 && typeof data38 == "object" && !Array.isArray(data38)){if(data38.name !== undefined){const _errs68 = errors;if(typeof data38.name !== "string"){validate86.errors = [{instancePath:instancePath+"/properties/" + i10+"/name",schemaPath:"#/definitions/property/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid14 = _errs68 === errors;}else {var valid14 = true;}if(valid14){if(data38.value !== undefined){const _errs70 = errors;if(typeof data38.value !== "string"){validate86.errors = [{instancePath:instancePath+"/properties/" + i10+"/value",schemaPath:"#/definitions/property/properties/value/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid14 = _errs70 === errors;}else {var valid14 = true;}}}else {validate86.errors = [{instancePath:instancePath+"/properties/" + i10,schemaPath:"#/definitions/property/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid12 = _errs65 === errors;if(!valid12){break;}}}else {validate86.errors = [{instancePath:instancePath+"/properties",schemaPath:"#/properties/properties/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs63 === errors;}else {var valid0 = true;}}}}}}}}}}}}}}}}}}}}}}}}}else {validate86.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate86.errors = vErrors;return errors === 0;}function validate81(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){if(data.timestamp !== undefined){let data0 = data.timestamp;const _errs1 = errors;if(errors === _errs1){if(errors === _errs1){if(typeof data0 === "string"){if(!(formats0.validate(data0))){validate81.errors = [{instancePath:instancePath+"/timestamp",schemaPath:"#/properties/timestamp/format",keyword:"format",params:{format: "date-time"},message:"must match format \""+"date-time"+"\""}];return false;}}else {validate81.errors = [{instancePath:instancePath+"/timestamp",schemaPath:"#/properties/timestamp/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.tools !== undefined){let data1 = data.tools;const _errs3 = errors;if(errors === _errs3){if(Array.isArray(data1)){var valid1 = true;const len0 = data1.length;for(let i0=0; i0<len0; i0++){const _errs5 = errors;if(!(validate82(data1[i0], {instancePath:instancePath+"/tools/" + i0,parentData:data1,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate82.errors : vErrors.concat(validate82.errors);errors = vErrors.length;}var valid1 = _errs5 === errors;if(!valid1){break;}}}else {validate81.errors = [{instancePath:instancePath+"/tools",schemaPath:"#/properties/tools/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs3 === errors;}else {var valid0 = true;}if(valid0){if(data.authors !== undefined){let data3 = data.authors;const _errs6 = errors;if(errors === _errs6){if(Array.isArray(data3)){var valid2 = true;const len1 = data3.length;for(let i1=0; i1<len1; i1++){let data4 = data3[i1];const _errs8 = errors;const _errs9 = errors;if(errors === _errs9){if(data4 && typeof data4 == "object" && !Array.isArray(data4)){if(data4.name !== undefined){const _errs11 = errors;if(typeof data4.name !== "string"){validate81.errors = [{instancePath:instancePath+"/authors/" + i1+"/name",schemaPath:"#/definitions/organizationalContact/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid4 = _errs11 === errors;}else {var valid4 = true;}if(valid4){if(data4.email !== undefined){const _errs13 = errors;if(typeof data4.email !== "string"){validate81.errors = [{instancePath:instancePath+"/authors/" + i1+"/email",schemaPath:"#/definitions/organizationalContact/properties/email/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid4 = _errs13 === errors;}else {var valid4 = true;}if(valid4){if(data4.phone !== undefined){const _errs15 = errors;if(typeof data4.phone !== "string"){validate81.errors = [{instancePath:instancePath+"/authors/" + i1+"/phone",schemaPath:"#/definitions/organizationalContact/properties/phone/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid4 = _errs15 === errors;}else {var valid4 = true;}}}}else {validate81.errors = [{instancePath:instancePath+"/authors/" + i1,schemaPath:"#/definitions/organizationalContact/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid2 = _errs8 === errors;if(!valid2){break;}}}else {validate81.errors = [{instancePath:instancePath+"/authors",schemaPath:"#/properties/authors/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs6 === errors;}else {var valid0 = true;}if(valid0){if(data.component !== undefined){const _errs17 = errors;if(!(validate86(data.component, {instancePath:instancePath+"/component",parentData:data,parentDataProperty:"component",rootData}))){vErrors = vErrors === null ? validate86.errors : vErrors.concat(validate86.errors);errors = vErrors.length;}var valid0 = _errs17 === errors;}else {var valid0 = true;}if(valid0){if(data.manufacture !== undefined){const _errs18 = errors;if(!(validate87(data.manufacture, {instancePath:instancePath+"/manufacture",parentData:data,parentDataProperty:"manufacture",rootData}))){vErrors = vErrors === null ? validate87.errors : vErrors.concat(validate87.errors);errors = vErrors.length;}var valid0 = _errs18 === errors;}else {var valid0 = true;}if(valid0){if(data.supplier !== undefined){const _errs19 = errors;if(!(validate87(data.supplier, {instancePath:instancePath+"/supplier",parentData:data,parentDataProperty:"supplier",rootData}))){vErrors = vErrors === null ? validate87.errors : vErrors.concat(validate87.errors);errors = vErrors.length;}var valid0 = _errs19 === errors;}else {var valid0 = true;}if(valid0){if(data.licenses !== undefined){let data11 = data.licenses;const _errs20 = errors;if(errors === _errs20){if(Array.isArray(data11)){var valid5 = true;const len2 = data11.length;for(let i2=0; i2<len2; i2++){const _errs22 = errors;if(!(validate90(data11[i2], {instancePath:instancePath+"/licenses/" + i2,parentData:data11,parentDataProperty:i2,rootData}))){vErrors = vErrors === null ? validate90.errors : vErrors.concat(validate90.errors);errors = vErrors.length;}var valid5 = _errs22 === errors;if(!valid5){break;}}}else {validate81.errors = [{instancePath:instancePath+"/licenses",schemaPath:"#/properties/licenses/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs20 === errors;}else {var valid0 = true;}if(valid0){if(data.properties !== undefined){let data13 = data.properties;const _errs23 = errors;if(errors === _errs23){if(Array.isArray(data13)){var valid6 = true;const len3 = data13.length;for(let i3=0; i3<len3; i3++){let data14 = data13[i3];const _errs25 = errors;const _errs26 = errors;if(errors === _errs26){if(data14 && typeof data14 == "object" && !Array.isArray(data14)){if(data14.name !== undefined){const _errs28 = errors;if(typeof data14.name !== "string"){validate81.errors = [{instancePath:instancePath+"/properties/" + i3+"/name",schemaPath:"#/definitions/property/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid8 = _errs28 === errors;}else {var valid8 = true;}if(valid8){if(data14.value !== undefined){const _errs30 = errors;if(typeof data14.value !== "string"){validate81.errors = [{instancePath:instancePath+"/properties/" + i3+"/value",schemaPath:"#/definitions/property/properties/value/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid8 = _errs30 === errors;}else {var valid8 = true;}}}else {validate81.errors = [{instancePath:instancePath+"/properties/" + i3,schemaPath:"#/definitions/property/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid6 = _errs25 === errors;if(!valid6){break;}}}else {validate81.errors = [{instancePath:instancePath+"/properties",schemaPath:"#/properties/properties/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs23 === errors;}else {var valid0 = true;}}}}}}}}}else {validate81.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate81.errors = vErrors;return errors === 0;}const schema111 = {"type":"object","title":"Service Object","required":["name"],"properties":{"bom-ref":{"type":"string","title":"BOM Reference","description":"An optional identifier which can be used to reference the service elsewhere in the BOM. Every bom-ref should be unique."},"provider":{"title":"Provider","description":"The organization that provides the service.","$ref":"#/definitions/organizationalEntity"},"group":{"type":"string","title":"Service Group","description":"The grouping name, namespace, or identifier. This will often be a shortened, single name of the company or project that produced the service or domain name. Whitespace and special characters should be avoided.","examples":["com.acme"]},"name":{"type":"string","title":"Service Name","description":"The name of the service. This will often be a shortened, single name of the service.","examples":["ticker-service"]},"version":{"type":"string","title":"Service Version","description":"The service version.","examples":["1.0.0"]},"description":{"type":"string","title":"Service Description","description":"Specifies a description for the service"},"endpoints":{"type":"array","items":{"type":"string","format":"iri-reference"},"title":"Endpoints","description":"The endpoint URIs of the service. Multiple endpoints are allowed.","examples":["https://example.com/api/v1/ticker"]},"authenticated":{"type":"boolean","title":"Authentication Required","description":"A boolean value indicating if the service requires authentication. A value of true indicates the service requires authentication prior to use. A value of false indicates the service does not require authentication."},"x-trust-boundary":{"type":"boolean","title":"Crosses Trust Boundary","description":"A boolean value indicating if use of the service crosses a trust zone or boundary. A value of true indicates that by using the service, a trust boundary is crossed. A value of false indicates that by using the service, a trust boundary is not crossed."},"data":{"type":"array","items":{"$ref":"#/definitions/dataClassification"},"title":"Data Classification","description":"Specifies the data classification."},"licenses":{"type":"array","items":{"$ref":"#/definitions/licenseChoice"},"title":"Component License(s)"},"externalReferences":{"type":"array","items":{"$ref":"#/definitions/externalReference"},"title":"External References"},"services":{"$id":"#/definitions/service/properties/services","type":"array","items":{"$ref":"#/definitions/service"},"uniqueItems":true,"title":"Services"},"properties":{"type":"array","title":"Properties","description":"Provides the ability to document properties in a name-value store. This provides flexibility to include data not officially supported in the standard without having to use additional namespaces or create extensions. Unlike key-value stores, properties support duplicate names, each potentially having different values.","items":{"$ref":"#/definitions/property"}}}};const schema112 = {"type":"object","title":"Hash Objects","required":["flow","classification"],"properties":{"flow":{"$ref":"#/definitions/dataFlow"},"classification":{"type":"string"}}};const schema113 = {"type":"string","enum":["inbound","outbound","bi-directional","unknown"],"title":"Data flow direction"};function validate116(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if(((data.flow === undefined) && (missing0 = "flow")) || ((data.classification === undefined) && (missing0 = "classification"))){validate116.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.flow !== undefined){let data0 = data.flow;const _errs1 = errors;if(typeof data0 !== "string"){validate116.errors = [{instancePath:instancePath+"/flow",schemaPath:"#/definitions/dataFlow/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!((((data0 === "inbound") || (data0 === "outbound")) || (data0 === "bi-directional")) || (data0 === "unknown"))){validate116.errors = [{instancePath:instancePath+"/flow",schemaPath:"#/definitions/dataFlow/enum",keyword:"enum",params:{allowedValues: schema113.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.classification !== undefined){const _errs4 = errors;if(typeof data.classification !== "string"){validate116.errors = [{instancePath:instancePath+"/classification",schemaPath:"#/properties/classification/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs4 === errors;}else {var valid0 = true;}}}}else {validate116.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate116.errors = vErrors;return errors === 0;}const wrapper9 = {validate: validate114};function validate114(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.name === undefined) && (missing0 = "name")){validate114.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data["bom-ref"] !== undefined){const _errs1 = errors;if(typeof data["bom-ref"] !== "string"){validate114.errors = [{instancePath:instancePath+"/bom-ref",schemaPath:"#/properties/bom-ref/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.provider !== undefined){const _errs3 = errors;if(!(validate87(data.provider, {instancePath:instancePath+"/provider",parentData:data,parentDataProperty:"provider",rootData}))){vErrors = vErrors === null ? validate87.errors : vErrors.concat(validate87.errors);errors = vErrors.length;}var valid0 = _errs3 === errors;}else {var valid0 = true;}if(valid0){if(data.group !== undefined){const _errs4 = errors;if(typeof data.group !== "string"){validate114.errors = [{instancePath:instancePath+"/group",schemaPath:"#/properties/group/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data.name !== undefined){const _errs6 = errors;if(typeof data.name !== "string"){validate114.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs6 === errors;}else {var valid0 = true;}if(valid0){if(data.version !== undefined){const _errs8 = errors;if(typeof data.version !== "string"){validate114.errors = [{instancePath:instancePath+"/version",schemaPath:"#/properties/version/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs8 === errors;}else {var valid0 = true;}if(valid0){if(data.description !== undefined){const _errs10 = errors;if(typeof data.description !== "string"){validate114.errors = [{instancePath:instancePath+"/description",schemaPath:"#/properties/description/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs10 === errors;}else {var valid0 = true;}if(valid0){if(data.endpoints !== undefined){let data6 = data.endpoints;const _errs12 = errors;if(errors === _errs12){if(Array.isArray(data6)){var valid1 = true;const len0 = data6.length;for(let i0=0; i0<len0; i0++){let data7 = data6[i0];const _errs14 = errors;if(errors === _errs14){if(errors === _errs14){if(typeof data7 === "string"){if(!(formats2(data7))){validate114.errors = [{instancePath:instancePath+"/endpoints/" + i0,schemaPath:"#/properties/endpoints/items/format",keyword:"format",params:{format: "iri-reference"},message:"must match format \""+"iri-reference"+"\""}];return false;}}else {validate114.errors = [{instancePath:instancePath+"/endpoints/" + i0,schemaPath:"#/properties/endpoints/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid1 = _errs14 === errors;if(!valid1){break;}}}else {validate114.errors = [{instancePath:instancePath+"/endpoints",schemaPath:"#/properties/endpoints/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs12 === errors;}else {var valid0 = true;}if(valid0){if(data.authenticated !== undefined){const _errs16 = errors;if(typeof data.authenticated !== "boolean"){validate114.errors = [{instancePath:instancePath+"/authenticated",schemaPath:"#/properties/authenticated/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs16 === errors;}else {var valid0 = true;}if(valid0){if(data["x-trust-boundary"] !== undefined){const _errs18 = errors;if(typeof data["x-trust-boundary"] !== "boolean"){validate114.errors = [{instancePath:instancePath+"/x-trust-boundary",schemaPath:"#/properties/x-trust-boundary/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs18 === errors;}else {var valid0 = true;}if(valid0){if(data.data !== undefined){let data10 = data.data;const _errs20 = errors;if(errors === _errs20){if(Array.isArray(data10)){var valid2 = true;const len1 = data10.length;for(let i1=0; i1<len1; i1++){const _errs22 = errors;if(!(validate116(data10[i1], {instancePath:instancePath+"/data/" + i1,parentData:data10,parentDataProperty:i1,rootData}))){vErrors = vErrors === null ? validate116.errors : vErrors.concat(validate116.errors);errors = vErrors.length;}var valid2 = _errs22 === errors;if(!valid2){break;}}}else {validate114.errors = [{instancePath:instancePath+"/data",schemaPath:"#/properties/data/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs20 === errors;}else {var valid0 = true;}if(valid0){if(data.licenses !== undefined){let data12 = data.licenses;const _errs23 = errors;if(errors === _errs23){if(Array.isArray(data12)){var valid3 = true;const len2 = data12.length;for(let i2=0; i2<len2; i2++){const _errs25 = errors;if(!(validate90(data12[i2], {instancePath:instancePath+"/licenses/" + i2,parentData:data12,parentDataProperty:i2,rootData}))){vErrors = vErrors === null ? validate90.errors : vErrors.concat(validate90.errors);errors = vErrors.length;}var valid3 = _errs25 === errors;if(!valid3){break;}}}else {validate114.errors = [{instancePath:instancePath+"/licenses",schemaPath:"#/properties/licenses/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs23 === errors;}else {var valid0 = true;}if(valid0){if(data.externalReferences !== undefined){let data14 = data.externalReferences;const _errs26 = errors;if(errors === _errs26){if(Array.isArray(data14)){var valid4 = true;const len3 = data14.length;for(let i3=0; i3<len3; i3++){const _errs28 = errors;if(!(validate102(data14[i3], {instancePath:instancePath+"/externalReferences/" + i3,parentData:data14,parentDataProperty:i3,rootData}))){vErrors = vErrors === null ? validate102.errors : vErrors.concat(validate102.errors);errors = vErrors.length;}var valid4 = _errs28 === errors;if(!valid4){break;}}}else {validate114.errors = [{instancePath:instancePath+"/externalReferences",schemaPath:"#/properties/externalReferences/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs26 === errors;}else {var valid0 = true;}if(valid0){if(data.services !== undefined){let data16 = data.services;const _errs29 = errors;if(errors === _errs29){if(Array.isArray(data16)){var valid5 = true;const len4 = data16.length;for(let i4=0; i4<len4; i4++){const _errs31 = errors;if(!(wrapper9.validate(data16[i4], {instancePath:instancePath+"/services/" + i4,parentData:data16,parentDataProperty:i4,rootData}))){vErrors = vErrors === null ? wrapper9.validate.errors : vErrors.concat(wrapper9.validate.errors);errors = vErrors.length;}var valid5 = _errs31 === errors;if(!valid5){break;}}if(valid5){let i5 = data16.length;let j0;if(i5 > 1){outer0:for(;i5--;){for(j0 = i5; j0--;){if(func0(data16[i5], data16[j0])){validate114.errors = [{instancePath:instancePath+"/services",schemaPath:"#/properties/services/uniqueItems",keyword:"uniqueItems",params:{i: i5, j: j0},message:"must NOT have duplicate items (items ## "+j0+" and "+i5+" are identical)"}];return false;break outer0;}}}}}}else {validate114.errors = [{instancePath:instancePath+"/services",schemaPath:"#/properties/services/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs29 === errors;}else {var valid0 = true;}if(valid0){if(data.properties !== undefined){let data18 = data.properties;const _errs32 = errors;if(errors === _errs32){if(Array.isArray(data18)){var valid7 = true;const len5 = data18.length;for(let i6=0; i6<len5; i6++){let data19 = data18[i6];const _errs34 = errors;const _errs35 = errors;if(errors === _errs35){if(data19 && typeof data19 == "object" && !Array.isArray(data19)){if(data19.name !== undefined){const _errs37 = errors;if(typeof data19.name !== "string"){validate114.errors = [{instancePath:instancePath+"/properties/" + i6+"/name",schemaPath:"#/definitions/property/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid9 = _errs37 === errors;}else {var valid9 = true;}if(valid9){if(data19.value !== undefined){const _errs39 = errors;if(typeof data19.value !== "string"){validate114.errors = [{instancePath:instancePath+"/properties/" + i6+"/value",schemaPath:"#/definitions/property/properties/value/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid9 = _errs39 === errors;}else {var valid9 = true;}}}else {validate114.errors = [{instancePath:instancePath+"/properties/" + i6,schemaPath:"#/definitions/property/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid7 = _errs34 === errors;if(!valid7){break;}}}else {validate114.errors = [{instancePath:instancePath+"/properties",schemaPath:"#/properties/properties/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs32 === errors;}else {var valid0 = true;}}}}}}}}}}}}}}}}else {validate114.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate114.errors = vErrors;return errors === 0;}const schema116 = {"type":"object","title":"Compositions","required":["aggregate"],"properties":{"aggregate":{"$ref":"#/definitions/aggregateType","title":"Aggregate","description":"Specifies an aggregate type that describe how complete a relationship is."},"assemblies":{"type":"array","uniqueItems":true,"items":{"type":"string"},"title":"BOM references","description":"The bom-ref identifiers of the components or services being described. Assemblies refer to nested relationships whereby a constituent part may include other constituent parts. References do not cascade to child parts. References are explicit for the specified constituent part only."},"dependencies":{"type":"array","uniqueItems":true,"items":{"type":"string"},"title":"BOM references","description":"The bom-ref identifiers of the components or services being described. Dependencies refer to a relationship whereby an independent constituent part requires another independent constituent part. References do not cascade to transitive dependencies. References are explicit for the specified dependency only."}}};const schema117 = {"type":"string","default":"not_specified","enum":["complete","incomplete","incomplete_first_party_only","incomplete_third_party_only","unknown","not_specified"]};function validate122(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.aggregate === undefined) && (missing0 = "aggregate")){validate122.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.aggregate !== undefined){let data0 = data.aggregate;const _errs1 = errors;if(typeof data0 !== "string"){validate122.errors = [{instancePath:instancePath+"/aggregate",schemaPath:"#/definitions/aggregateType/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!((((((data0 === "complete") || (data0 === "incomplete")) || (data0 === "incomplete_first_party_only")) || (data0 === "incomplete_third_party_only")) || (data0 === "unknown")) || (data0 === "not_specified"))){validate122.errors = [{instancePath:instancePath+"/aggregate",schemaPath:"#/definitions/aggregateType/enum",keyword:"enum",params:{allowedValues: schema117.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.assemblies !== undefined){let data1 = data.assemblies;const _errs4 = errors;if(errors === _errs4){if(Array.isArray(data1)){var valid2 = true;const len0 = data1.length;for(let i0=0; i0<len0; i0++){const _errs6 = errors;if(typeof data1[i0] !== "string"){validate122.errors = [{instancePath:instancePath+"/assemblies/" + i0,schemaPath:"#/properties/assemblies/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs6 === errors;if(!valid2){break;}}if(valid2){let i1 = data1.length;let j0;if(i1 > 1){const indices0 = {};for(;i1--;){let item0 = data1[i1];if(typeof item0 !== "string"){continue;}if(typeof indices0[item0] == "number"){j0 = indices0[item0];validate122.errors = [{instancePath:instancePath+"/assemblies",schemaPath:"#/properties/assemblies/uniqueItems",keyword:"uniqueItems",params:{i: i1, j: j0},message:"must NOT have duplicate items (items ## "+j0+" and "+i1+" are identical)"}];return false;break;}indices0[item0] = i1;}}}}else {validate122.errors = [{instancePath:instancePath+"/assemblies",schemaPath:"#/properties/assemblies/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data.dependencies !== undefined){let data3 = data.dependencies;const _errs8 = errors;if(errors === _errs8){if(Array.isArray(data3)){var valid4 = true;const len1 = data3.length;for(let i2=0; i2<len1; i2++){const _errs10 = errors;if(typeof data3[i2] !== "string"){validate122.errors = [{instancePath:instancePath+"/dependencies/" + i2,schemaPath:"#/properties/dependencies/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid4 = _errs10 === errors;if(!valid4){break;}}if(valid4){let i3 = data3.length;let j1;if(i3 > 1){const indices1 = {};for(;i3--;){let item1 = data3[i3];if(typeof item1 !== "string"){continue;}if(typeof indices1[item1] == "number"){j1 = indices1[item1];validate122.errors = [{instancePath:instancePath+"/dependencies",schemaPath:"#/properties/dependencies/uniqueItems",keyword:"uniqueItems",params:{i: i3, j: j1},message:"must NOT have duplicate items (items ## "+j1+" and "+i3+" are identical)"}];return false;break;}indices1[item1] = i3;}}}}else {validate122.errors = [{instancePath:instancePath+"/dependencies",schemaPath:"#/properties/dependencies/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs8 === errors;}else {var valid0 = true;}}}}}else {validate122.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate122.errors = vErrors;return errors === 0;}function validate80(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){/*# sourceURL="http://cyclonedx.org/schema/bom-1.3a.schema.json" */;let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((((data.bomFormat === undefined) && (missing0 = "bomFormat")) || ((data.specVersion === undefined) && (missing0 = "specVersion"))) || ((data.version === undefined) && (missing0 = "version"))){validate80.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.bomFormat !== undefined){let data0 = data.bomFormat;const _errs2 = errors;if(typeof data0 !== "string"){validate80.errors = [{instancePath:instancePath+"/bomFormat",schemaPath:"#/properties/bomFormat/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!(data0 === "CycloneDX")){validate80.errors = [{instancePath:instancePath+"/bomFormat",schemaPath:"#/properties/bomFormat/enum",keyword:"enum",params:{allowedValues: schema83.properties.bomFormat.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.specVersion !== undefined){const _errs4 = errors;if(typeof data.specVersion !== "string"){validate80.errors = [{instancePath:instancePath+"/specVersion",schemaPath:"#/properties/specVersion/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data.serialNumber !== undefined){let data2 = data.serialNumber;const _errs6 = errors;if(errors === _errs6){if(typeof data2 === "string"){if(!pattern0.test(data2)){validate80.errors = [{instancePath:instancePath+"/serialNumber",schemaPath:"#/properties/serialNumber/pattern",keyword:"pattern",params:{pattern: "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"},message:"must match pattern \""+"^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"+"\""}];return false;}}else {validate80.errors = [{instancePath:instancePath+"/serialNumber",schemaPath:"#/properties/serialNumber/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs6 === errors;}else {var valid0 = true;}if(valid0){if(data.version !== undefined){let data3 = data.version;const _errs8 = errors;if(!((typeof data3 == "number") && (!(data3 % 1) && !isNaN(data3)))){validate80.errors = [{instancePath:instancePath+"/version",schemaPath:"#/properties/version/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid0 = _errs8 === errors;}else {var valid0 = true;}if(valid0){if(data.metadata !== undefined){const _errs10 = errors;if(!(validate81(data.metadata, {instancePath:instancePath+"/metadata",parentData:data,parentDataProperty:"metadata",rootData}))){vErrors = vErrors === null ? validate81.errors : vErrors.concat(validate81.errors);errors = vErrors.length;}var valid0 = _errs10 === errors;}else {var valid0 = true;}if(valid0){if(data.components !== undefined){let data5 = data.components;const _errs11 = errors;if(errors === _errs11){if(Array.isArray(data5)){var valid1 = true;const len0 = data5.length;for(let i0=0; i0<len0; i0++){const _errs13 = errors;if(!(validate86(data5[i0], {instancePath:instancePath+"/components/" + i0,parentData:data5,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate86.errors : vErrors.concat(validate86.errors);errors = vErrors.length;}var valid1 = _errs13 === errors;if(!valid1){break;}}if(valid1){let i1 = data5.length;let j0;if(i1 > 1){outer0:for(;i1--;){for(j0 = i1; j0--;){if(func0(data5[i1], data5[j0])){validate80.errors = [{instancePath:instancePath+"/components",schemaPath:"#/properties/components/uniqueItems",keyword:"uniqueItems",params:{i: i1, j: j0},message:"must NOT have duplicate items (items ## "+j0+" and "+i1+" are identical)"}];return false;break outer0;}}}}}}else {validate80.errors = [{instancePath:instancePath+"/components",schemaPath:"#/properties/components/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs11 === errors;}else {var valid0 = true;}if(valid0){if(data.services !== undefined){let data7 = data.services;const _errs14 = errors;if(errors === _errs14){if(Array.isArray(data7)){var valid3 = true;const len1 = data7.length;for(let i2=0; i2<len1; i2++){const _errs16 = errors;if(!(validate114(data7[i2], {instancePath:instancePath+"/services/" + i2,parentData:data7,parentDataProperty:i2,rootData}))){vErrors = vErrors === null ? validate114.errors : vErrors.concat(validate114.errors);errors = vErrors.length;}var valid3 = _errs16 === errors;if(!valid3){break;}}if(valid3){let i3 = data7.length;let j1;if(i3 > 1){outer1:for(;i3--;){for(j1 = i3; j1--;){if(func0(data7[i3], data7[j1])){validate80.errors = [{instancePath:instancePath+"/services",schemaPath:"#/properties/services/uniqueItems",keyword:"uniqueItems",params:{i: i3, j: j1},message:"must NOT have duplicate items (items ## "+j1+" and "+i3+" are identical)"}];return false;break outer1;}}}}}}else {validate80.errors = [{instancePath:instancePath+"/services",schemaPath:"#/properties/services/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs14 === errors;}else {var valid0 = true;}if(valid0){if(data.externalReferences !== undefined){let data9 = data.externalReferences;const _errs17 = errors;if(errors === _errs17){if(Array.isArray(data9)){var valid5 = true;const len2 = data9.length;for(let i4=0; i4<len2; i4++){const _errs19 = errors;if(!(validate102(data9[i4], {instancePath:instancePath+"/externalReferences/" + i4,parentData:data9,parentDataProperty:i4,rootData}))){vErrors = vErrors === null ? validate102.errors : vErrors.concat(validate102.errors);errors = vErrors.length;}var valid5 = _errs19 === errors;if(!valid5){break;}}}else {validate80.errors = [{instancePath:instancePath+"/externalReferences",schemaPath:"#/properties/externalReferences/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs17 === errors;}else {var valid0 = true;}if(valid0){if(data.dependencies !== undefined){let data11 = data.dependencies;const _errs20 = errors;if(errors === _errs20){if(Array.isArray(data11)){var valid6 = true;const len3 = data11.length;for(let i5=0; i5<len3; i5++){let data12 = data11[i5];const _errs22 = errors;const _errs23 = errors;if(errors === _errs23){if(data12 && typeof data12 == "object" && !Array.isArray(data12)){let missing1;if((data12.ref === undefined) && (missing1 = "ref")){validate80.errors = [{instancePath:instancePath+"/dependencies/" + i5,schemaPath:"#/definitions/dependency/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {if(data12.ref !== undefined){const _errs25 = errors;if(typeof data12.ref !== "string"){validate80.errors = [{instancePath:instancePath+"/dependencies/" + i5+"/ref",schemaPath:"#/definitions/dependency/properties/ref/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid8 = _errs25 === errors;}else {var valid8 = true;}if(valid8){if(data12.dependsOn !== undefined){let data14 = data12.dependsOn;const _errs27 = errors;if(errors === _errs27){if(Array.isArray(data14)){var valid9 = true;const len4 = data14.length;for(let i6=0; i6<len4; i6++){const _errs29 = errors;if(typeof data14[i6] !== "string"){validate80.errors = [{instancePath:instancePath+"/dependencies/" + i5+"/dependsOn/" + i6,schemaPath:"#/definitions/dependency/properties/dependsOn/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid9 = _errs29 === errors;if(!valid9){break;}}if(valid9){let i7 = data14.length;let j2;if(i7 > 1){const indices0 = {};for(;i7--;){let item0 = data14[i7];if(typeof item0 !== "string"){continue;}if(typeof indices0[item0] == "number"){j2 = indices0[item0];validate80.errors = [{instancePath:instancePath+"/dependencies/" + i5+"/dependsOn",schemaPath:"#/definitions/dependency/properties/dependsOn/uniqueItems",keyword:"uniqueItems",params:{i: i7, j: j2},message:"must NOT have duplicate items (items ## "+j2+" and "+i7+" are identical)"}];return false;break;}indices0[item0] = i7;}}}}else {validate80.errors = [{instancePath:instancePath+"/dependencies/" + i5+"/dependsOn",schemaPath:"#/definitions/dependency/properties/dependsOn/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid8 = _errs27 === errors;}else {var valid8 = true;}}}}else {validate80.errors = [{instancePath:instancePath+"/dependencies/" + i5,schemaPath:"#/definitions/dependency/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid6 = _errs22 === errors;if(!valid6){break;}}if(valid6){let i8 = data11.length;let j3;if(i8 > 1){outer2:for(;i8--;){for(j3 = i8; j3--;){if(func0(data11[i8], data11[j3])){validate80.errors = [{instancePath:instancePath+"/dependencies",schemaPath:"#/properties/dependencies/uniqueItems",keyword:"uniqueItems",params:{i: i8, j: j3},message:"must NOT have duplicate items (items ## "+j3+" and "+i8+" are identical)"}];return false;break outer2;}}}}}}else {validate80.errors = [{instancePath:instancePath+"/dependencies",schemaPath:"#/properties/dependencies/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs20 === errors;}else {var valid0 = true;}if(valid0){if(data.compositions !== undefined){let data16 = data.compositions;const _errs31 = errors;if(errors === _errs31){if(Array.isArray(data16)){var valid12 = true;const len5 = data16.length;for(let i9=0; i9<len5; i9++){const _errs33 = errors;if(!(validate122(data16[i9], {instancePath:instancePath+"/compositions/" + i9,parentData:data16,parentDataProperty:i9,rootData}))){vErrors = vErrors === null ? validate122.errors : vErrors.concat(validate122.errors);errors = vErrors.length;}var valid12 = _errs33 === errors;if(!valid12){break;}}if(valid12){let i10 = data16.length;let j4;if(i10 > 1){outer3:for(;i10--;){for(j4 = i10; j4--;){if(func0(data16[i10], data16[j4])){validate80.errors = [{instancePath:instancePath+"/compositions",schemaPath:"#/properties/compositions/uniqueItems",keyword:"uniqueItems",params:{i: i10, j: j4},message:"must NOT have duplicate items (items ## "+j4+" and "+i10+" are identical)"}];return false;break outer3;}}}}}}else {validate80.errors = [{instancePath:instancePath+"/compositions",schemaPath:"#/properties/compositions/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs31 === errors;}else {var valid0 = true;}}}}}}}}}}}}else {validate80.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate80.errors = vErrors;return errors === 0;}exports["1.2"] = validate124;const schema118 = {"$schema":"http://json-schema.org/draft-07/schema#","$id":"http://cyclonedx.org/schema/bom-1.2b.schema.json","type":"object","title":"CycloneDX Software Bill-of-Material Specification","$comment":"CycloneDX JSON schema is published under the terms of the Apache License 2.0.","required":["bomFormat","specVersion","version"],"properties":{"bomFormat":{"$id":"#/properties/bomFormat","type":"string","title":"BOM Format","description":"Specifies the format of the BOM. This helps to identify the file as CycloneDX since BOMs do not have a filename convention nor does JSON schema support namespaces.","enum":["CycloneDX"]},"specVersion":{"$id":"#/properties/specVersion","type":"string","title":"CycloneDX Specification Version","description":"The version of the CycloneDX specification a BOM is written to (starting at version 1.2)","examples":["1.2"]},"serialNumber":{"$id":"#/properties/serialNumber","type":"string","title":"BOM Serial Number","description":"Every BOM generated should have a unique serial number, even if the contents of the BOM being generated have not changed over time. The process or tool responsible for creating the BOM should create random UUID's for every BOM generated.","default":"","examples":["urn:uuid:3e671687-395b-41f5-a30f-a58921a69b79"],"pattern":"^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"},"version":{"$id":"#/properties/version","type":"integer","title":"BOM Version","description":"The version allows component publishers/authors to make changes to existing BOMs to update various aspects of the document such as description or licenses. When a system is presented with multiple BOMs for the same component, the system should use the most recent version of the BOM. The default version is '1' and should be incremented for each version of the BOM that is published. Each version of a component should have a unique BOM and if no changes are made to the BOMs, then each BOM will have a version of '1'.","default":1,"examples":[1]},"metadata":{"$id":"#/properties/metadata","$ref":"#/definitions/metadata","title":"BOM Metadata","description":"Provides additional information about a BOM."},"components":{"$id":"#/properties/components","type":"array","items":{"$ref":"#/definitions/component"},"uniqueItems":true,"title":"Components"},"services":{"$id":"#/properties/services","type":"array","items":{"$ref":"#/definitions/service"},"uniqueItems":true,"title":"Services"},"externalReferences":{"$id":"#/properties/externalReferences","type":"array","items":{"$ref":"#/definitions/externalReference"},"title":"External References","description":"External references provide a way to document systems, sites, and information that may be relevant but which are not included with the BOM."},"dependencies":{"$id":"#/properties/dependencies","type":"array","items":{"$ref":"#/definitions/dependency"},"uniqueItems":true,"title":"Dependencies","description":"Provides the ability to document dependency relationships."}},"definitions":{"metadata":{"type":"object","title":"BOM Metadata Object","properties":{"timestamp":{"type":"string","format":"date-time","title":"Timestamp","description":"The date and time (timestamp) when the document was created."},"tools":{"type":"array","title":"Creation Tools","description":"The tool(s) used in the creation of the BOM.","items":{"$ref":"#/definitions/tool"}},"authors":{"type":"array","title":"Authors","description":"The person(s) who created the BOM. Authors are common in BOMs created through manual processes. BOMs created through automated means may not have authors.","items":{"$ref":"#/definitions/organizationalContact"}},"component":{"title":"Component","description":"The component that the BOM describes.","$ref":"#/definitions/component"},"manufacture":{"title":"Manufacture","description":"The organization that manufactured the component that the BOM describes.","$ref":"#/definitions/organizationalEntity"},"supplier":{"title":"Supplier","description":" The organization that supplied the component that the BOM describes. The supplier may often be the manufacture, but may also be a distributor or repackager.","$ref":"#/definitions/organizationalEntity"}}},"tool":{"type":"object","title":"Tool","description":"The tool used to create the BOM.","properties":{"vendor":{"type":"string","format":"string","title":"Tool Vendor","description":"The date and time (timestamp) when the document was created."},"name":{"type":"string","format":"string","title":"Tool Name","description":"The date and time (timestamp) when the document was created."},"version":{"type":"string","format":"string","title":"Tool Version","description":"The date and time (timestamp) when the document was created."},"hashes":{"$id":"#/definitions/tool/properties/hashes","type":"array","items":{"$ref":"#/definitions/hash"},"title":"Hashes","description":"The hashes of the tool (if applicable)."}}},"organizationalEntity":{"type":"object","title":"Organizational Entity Object","description":"","properties":{"name":{"type":"string","title":"Name","description":"The name of the organization","default":"","examples":["Example Inc."],"pattern":"^(.*)$"},"url":{"type":"array","title":"URL","description":"The URL of the organization. Multiple URLs are allowed.","default":"","examples":["https://example.com"],"pattern":"^(.*)$"},"contact":{"type":"array","title":"Contact","description":"A contact at the organization. Multiple contacts are allowed.","items":{"$ref":"#/definitions/organizationalContact"}}}},"organizationalContact":{"type":"object","title":"Organizational Contact Object","description":"","properties":{"name":{"type":"string","title":"Name","description":"The name of a contact","default":"","examples":["Contact name"],"pattern":"^(.*)$"},"email":{"type":"string","title":"Email Address","description":"The email address of the contact. Multiple email addresses are allowed.","default":"","examples":["firstname.lastname@example.com"],"pattern":"^(.*)$"},"phone":{"type":"string","title":"Phone","description":"The phone number of the contact. Multiple phone numbers are allowed.","default":"","examples":["800-555-1212"],"pattern":"^(.*)$"}}},"component":{"type":"object","title":"Component Object","required":["type","name","version"],"properties":{"type":{"type":"string","enum":["application","framework","library","container","operating-system","device","firmware","file"],"title":"Component Type","description":"Specifies the type of component. For software components, classify as application if no more specific appropriate classification is available or cannot be determined for the component.","default":"","examples":["library"],"pattern":"^(.*)$"},"mime-type":{"type":"string","title":"Mime-Type","description":"The optional mime-type of the component. When used on file components, the mime-type can provide additional context about the kind of file being represented such as an image, font, or executable. Some library or framework components may also have an associated mime-type.","default":"","examples":["image/jpeg"],"pattern":"^[-+a-z0-9.]+/[-+a-z0-9.]+$"},"bom-ref":{"type":"string","title":"BOM Reference","description":"An optional identifier which can be used to reference the component elsewhere in the BOM. Every bom-ref should be unique.","default":"","pattern":"^(.*)$"},"supplier":{"title":"Component Supplier","description":" The organization that supplied the component. The supplier may often be the manufacture, but may also be a distributor or repackager.","$ref":"#/definitions/organizationalEntity"},"author":{"type":"string","title":"Component Author","description":"The person(s) or organization(s) that authored the component","default":"","examples":["Acme Inc"],"pattern":"^(.*)$"},"publisher":{"type":"string","title":"Component Publisher","description":"The person(s) or organization(s) that published the component","default":"","examples":["Acme Inc"],"pattern":"^(.*)$"},"group":{"type":"string","title":"Component Group","description":"The grouping name or identifier. This will often be a shortened, single name of the company or project that produced the component, or the source package or domain name. Whitespace and special characters should be avoided. Examples include: apache, org.apache.commons, and apache.org.","default":"","examples":["com.acme"],"pattern":"^(.*)$"},"name":{"type":"string","title":"Component Name","description":"The name of the component. This will often be a shortened, single name of the component. Examples: commons-lang3 and jquery","default":"","examples":["tomcat-catalina"],"pattern":"^(.*)$"},"version":{"type":"string","title":"Component Version","description":"The component version. The version should ideally comply with semantic versioning but is not enforced.","default":"","examples":["9.0.14"],"pattern":"^(.*)$"},"description":{"type":"string","title":"Component Description","description":"Specifies a description for the component","default":"","pattern":"^(.*)$"},"scope":{"type":"string","enum":["required","optional","excluded"],"title":"Component Scope","description":"Specifies the scope of the component. If scope is not specified, 'required' scope should be assumed by the consumer of the BOM","default":"required","pattern":"^(.*)$"},"hashes":{"type":"array","title":"Component Hashes","items":{"$ref":"#/definitions/hash"}},"licenses":{"type":"array","title":"Component License(s)","items":{"properties":{"license":{"$ref":"#/definitions/license"},"expression":{"type":"string","title":"SPDX License Expression","examples":["Apache-2.0 AND (MIT OR GPL-2.0-only)","GPL-3.0-only WITH Classpath-exception-2.0"],"pattern":"^(.*)$"}},"oneOf":[{"required":["license"]},{"required":["expression"]}]}},"copyright":{"type":"string","title":"Component Copyright","description":"An optional copyright notice informing users of the underlying claims to copyright ownership in a published work.","examples":["Acme Inc"],"pattern":"^(.*)$"},"cpe":{"type":"string","title":"Component Common Platform Enumeration (CPE)","description":"DEPRECATED - DO NOT USE. This will be removed in a future version. Specifies a well-formed CPE name. See https://nvd.nist.gov/products/cpe","examples":["cpe:2.3:a:acme:component_framework:-:*:*:*:*:*:*:*"],"pattern":"^(.*)$"},"purl":{"type":"string","title":"Component Package URL (purl)","default":"","examples":["pkg:maven/com.acme/tomcat-catalina@9.0.14?packaging=jar"],"pattern":"^(.*)$"},"swid":{"$ref":"#/definitions/swid","title":"SWID Tag","description":"Specifies metadata and content for ISO-IEC 19770-2 Software Identification (SWID) Tags."},"modified":{"type":"boolean","title":"Component Modified From Original","description":"DEPRECATED - DO NOT USE. This will be removed in a future version. Use the pedigree element instead to supply information on exactly how the component was modified. A boolean value indicating is the component has been modified from the original. A value of true indicates the component is a derivative of the original. A value of false indicates the component has not been modified from the original."},"pedigree":{"type":"object","title":"Component Pedigree","description":"Component pedigree is a way to document complex supply chain scenarios where components are created, distributed, modified, redistributed, combined with other components, etc. Pedigree supports viewing this complex chain from the beginning, the end, or anywhere in the middle. It also provides a way to document variants where the exact relation may not be known.","properties":{"ancestors":{"type":"array","title":"Ancestors","description":"Describes zero or more components in which a component is derived from. This is commonly used to describe forks from existing projects where the forked version contains a ancestor node containing the original component it was forked from. For example, Component A is the original component. Component B is the component being used and documented in the BOM. However, Component B contains a pedigree node with a single ancestor documenting Component A - the original component from which Component B is derived from.","items":{"$ref":"#/definitions/component"}},"descendants":{"type":"array","title":"Descendants","description":"Descendants are the exact opposite of ancestors. This provides a way to document all forks (and their forks) of an original or root component.","items":{"$ref":"#/definitions/component"}},"variants":{"type":"array","title":"Variants","description":"Variants describe relations where the relationship between the components are not known. For example, if Component A contains nearly identical code to Component B. They are both related, but it is unclear if one is derived from the other, or if they share a common ancestor.","items":{"$ref":"#/definitions/component"}},"commits":{"type":"array","title":"Commits","description":"A list of zero or more commits which provide a trail describing how the component deviates from an ancestor, descendant, or variant.","items":{"$ref":"#/definitions/commit"}},"patches":{"type":"array","title":"Patches","description":">A list of zero or more patches describing how the component deviates from an ancestor, descendant, or variant. Patches may be complimentary to commits or may be used in place of commits.","items":{"$ref":"#/definitions/patch"}},"notes":{"type":"string","title":"Notes","description":"Notes, observations, and other non-structured commentary describing the components pedigree.","pattern":"^(.*)$"}}},"externalReferences":{"type":"array","items":{"$ref":"#/definitions/externalReference"},"title":"External References"},"components":{"$id":"#/definitions/component/properties/components","type":"array","items":{"$ref":"#/definitions/component"},"uniqueItems":true,"title":"Components"}}},"swid":{"type":"object","title":"SWID Tag","description":"Specifies metadata and content for ISO-IEC 19770-2 Software Identification (SWID) Tags.","required":["tagId","name"],"properties":{"tagId":{"type":"string","title":"Tag ID","description":"Maps to the tagId of a SoftwareIdentity."},"name":{"type":"string","title":"Name","description":"Maps to the name of a SoftwareIdentity."},"version":{"type":"string","title":"Version","default":"0.0","description":"Maps to the version of a SoftwareIdentity."},"tagVersion":{"type":"integer","title":"Tag Version","default":0,"description":"Maps to the tagVersion of a SoftwareIdentity."},"patch":{"type":"boolean","title":"Patch","default":false,"description":"Maps to the patch of a SoftwareIdentity."},"text":{"title":"Attachment text","description":"Specifies the metadata and content of the SWID tag.","$ref":"#/definitions/attachment"},"url":{"type":"string","title":"URL","default":"The URL to the SWID file.","pattern":"^(.*)$"}}},"attachment":{"type":"object","title":"Attachment","description":"Specifies the metadata and content for an attachment.","required":["content"],"properties":{"contentType":{"type":"string","title":"Content-Type","description":"Specifies the content type of the text. Defaults to text/plain if not specified.","default":"text/plain"},"encoding":{"type":"string","title":"Encoding","description":"Specifies the optional encoding the text is represented in.","enum":["base64"],"default":"","pattern":"^(.*)$"},"content":{"type":"string","title":"Attachment Text","description":"The attachment data"}}},"hash":{"type":"object","title":"Hash Objects","required":["alg","content"],"properties":{"alg":{"$ref":"#/definitions/hash-alg"},"content":{"$ref":"#/definitions/hash-content"}}},"hash-alg":{"type":"string","enum":["MD5","SHA-1","SHA-256","SHA-384","SHA-512","SHA3-256","SHA3-384","SHA3-512","BLAKE2b-256","BLAKE2b-384","BLAKE2b-512","BLAKE3"],"title":"Hash Algorithm","default":"","pattern":"^(.*)$"},"hash-content":{"type":"string","title":"Hash Content (value)","default":"","examples":["3942447fac867ae5cdb3229b658f4d48"],"pattern":"^([a-fA-F0-9]{32}|[a-fA-F0-9]{40}|[a-fA-F0-9]{64}|[a-fA-F0-9]{96}|[a-fA-F0-9]{128})$"},"license":{"type":"object","title":"License Object","oneOf":[{"required":["id"]},{"required":["name"]}],"properties":{"id":{"$ref":"spdx.SNAPSHOT.schema.json","title":"License ID (SPDX)","description":"A valid SPDX license ID","examples":["Apache-2.0"]},"name":{"type":"string","title":"License Name","description":"If SPDX does not define the license used, this field may be used to provide the license name","default":"","examples":["Acme Software License"],"pattern":"^(.*)$"},"text":{"title":"License text","description":"An optional way to include the textual content of a license.","$ref":"#/definitions/attachment"},"url":{"type":"string","title":"License URL","description":"The URL to the license file. If specified, a 'license' externalReference should also be specified for completeness","examples":["https://www.apache.org/licenses/LICENSE-2.0.txt"],"pattern":"^(.*)$"}}},"commit":{"type":"object","title":"Commit","description":"Specifies an individual commit","properties":{"uid":{"type":"string","title":"UID","description":"A unique identifier of the commit. This may be version control specific. For example, Subversion uses revision numbers whereas git uses commit hashes.","pattern":"^(.*)$"},"url":{"type":"string","title":"URL","description":"The URL to the commit. This URL will typically point to a commit in a version control system.","format":"iri-reference"},"author":{"title":"Author","description":"The author who created the changes in the commit","$ref":"#/definitions/identifiableAction"},"committer":{"title":"Committer","description":"The person who committed or pushed the commit","$ref":"#/definitions/identifiableAction"},"message":{"type":"string","title":"Message","description":"The text description of the contents of the commit","pattern":"^(.*)$"}}},"patch":{"type":"object","title":"Patch","description":"Specifies an individual patch","required":["type"],"properties":{"type":{"type":"string","enum":["unofficial","monkey","backport","cherry-pick"],"title":"Type","description":"Specifies the purpose for the patch including the resolution of defects, security issues, or new behavior or functionality"},"diff":{"title":"Diff","description":"The patch file (or diff) that show changes. Refer to https://en.wikipedia.org/wiki/Diff","$ref":"#/definitions/diff"},"resolves":{"type":"array","items":{"$ref":"#/definitions/issue"},"title":"Resolves","description":"A collection of issues the patch resolves"}}},"diff":{"type":"object","title":"Diff","description":"The patch file (or diff) that show changes. Refer to https://en.wikipedia.org/wiki/Diff","properties":{"text":{"title":"Diff text","description":"Specifies the optional text of the diff","$ref":"#/definitions/attachment"},"url":{"type":"string","title":"URL","description":"Specifies the URL to the diff","pattern":"^(.*)$"}}},"issue":{"type":"object","title":"Diff","description":"The patch file (or diff) that show changes. Refer to https://en.wikipedia.org/wiki/Diff","required":["type"],"properties":{"type":{"type":"string","enum":["defect","enhancement","security"],"title":"Type","description":"Specifies the type of issue"},"id":{"type":"string","title":"ID","description":"The identifier of the issue assigned by the source of the issue","pattern":"^(.*)$"},"name":{"type":"string","title":"Name","description":"The name of the issue","pattern":"^(.*)$"},"description":{"type":"string","title":"Description","description":"A description of the issue","pattern":"^(.*)$"},"source":{"type":"object","title":"Source","description":"The source of the issue where it is documented","properties":{"name":{"type":"string","title":"Name","description":"The name of the source. For example 'National Vulnerability Database', 'NVD', and 'Apache'","pattern":"^(.*)$"},"url":{"type":"string","title":"URL","description":"The url of the issue documentation as provided by the source","pattern":"^(.*)$"}}},"references":{"type":"array","title":"References","description":"A collection of URL's for reference. Multiple URLs are allowed.","default":"","examples":["https://example.com"],"pattern":"^(.*)$"}}},"identifiableAction":{"type":"object","title":"Identifiable Action","description":"Specifies an individual commit","properties":{"timestamp":{"type":"string","format":"date-time","title":"Timestamp","description":"The timestamp in which the action occurred"},"name":{"type":"string","title":"Name","description":"The name of the individual who performed the action","pattern":"^(.*)$"},"email":{"type":"string","format":"idn-email","title":"E-mail","description":"The email address of the individual who performed the action"}}},"externalReference":{"type":"object","title":"External Reference","description":"Specifies an individual external reference","required":["url","type"],"properties":{"url":{"type":"string","title":"URL","description":"The URL to the external reference","pattern":"^(.*)$"},"comment":{"type":"string","title":"Comment","description":"An optional comment describing the external reference","pattern":"^(.*)$"},"type":{"type":"string","title":"Type","description":"Specifies the type of external reference. There are built-in types to describe common references. If a type does not exist for the reference being referred to, use the \"other\" type.","enum":["vcs","issue-tracker","website","advisories","bom","mailing-list","social","chat","documentation","support","distribution","license","build-meta","build-system","other"]}}},"dependency":{"type":"object","title":"Dependency","description":"Defines the direct dependencies of a component. Components that do not have their own dependencies MUST be declared as empty elements within the graph. Components that are not represented in the dependency graph MAY have unknown dependencies. It is RECOMMENDED that implementations assume this to be opaque and not an indicator of a component being dependency-free.","required":["ref"],"properties":{"ref":{"type":"string","format":"string","title":"Reference","description":"References a component by the components bom-ref attribute"},"dependsOn":{"type":"array","uniqueItems":true,"items":{"type":"string"},"title":"Depends On","description":"The bom-ref identifiers of the components that are dependencies of this dependency object."}}},"service":{"type":"object","title":"Service Object","required":["name"],"properties":{"bom-ref":{"type":"string","title":"BOM Reference","description":"An optional identifier which can be used to reference the service elsewhere in the BOM. Every bom-ref should be unique.","default":"","pattern":"^(.*)$"},"provider":{"title":"Provider","description":"The organization that provides the service.","$ref":"#/definitions/organizationalEntity"},"group":{"type":"string","title":"Service Group","description":"The grouping name, namespace, or identifier. This will often be a shortened, single name of the company or project that produced the service or domain name. Whitespace and special characters should be avoided.","default":"","examples":["com.acme"],"pattern":"^(.*)$"},"name":{"type":"string","title":"Service Name","description":"The name of the service. This will often be a shortened, single name of the service.","default":"","examples":["ticker-service"],"pattern":"^(.*)$"},"version":{"type":"string","title":"Service Version","description":"The service version.","default":"","examples":["1.0.0"],"pattern":"^(.*)$"},"description":{"type":"string","title":"Service Description","description":"Specifies a description for the service","default":"","pattern":"^(.*)$"},"endpoints":{"type":"array","title":"Endpoints","description":"The endpoint URIs of the service. Multiple endpoints are allowed.","default":"","examples":["https://example.com/api/v1/ticker"],"pattern":"^(.*)$"},"authenticated":{"type":"boolean","title":"Authentication Required","description":"A boolean value indicating if the service requires authentication. A value of true indicates the service requires authentication prior to use. A value of false indicates the service does not require authentication."},"x-trust-boundary":{"type":"boolean","title":"Crosses Trust Boundary","description":"A boolean value indicating if use of the service crosses a trust zone or boundary. A value of true indicates that by using the service, a trust boundary is crossed. A value of false indicates that by using the service, a trust boundary is not crossed."},"data":{"type":"array","items":{"$ref":"#/definitions/dataClassification"},"title":"Data Classification","description":"Specifies the data classification."},"licenses":{"type":"array","title":"Component License(s)","items":{"properties":{"license":{"$ref":"#/definitions/license"},"expression":{"type":"string","title":"SPDX License Expression","examples":["Apache-2.0 AND (MIT OR GPL-2.0-only)","GPL-3.0-only WITH Classpath-exception-2.0"],"pattern":"^(.*)$"}},"oneOf":[{"required":["license"]},{"required":["expression"]}]}},"externalReferences":{"type":"array","items":{"$ref":"#/definitions/externalReference"},"title":"External References"},"services":{"$id":"#/definitions/service/properties/services","type":"array","items":{"$ref":"#/definitions/service"},"uniqueItems":true,"title":"Services"}}},"dataClassification":{"type":"object","title":"Hash Objects","required":["flow","classification"],"properties":{"flow":{"$ref":"#/definitions/dataFlow"},"classification":{"type":"string"}}},"dataFlow":{"type":"string","enum":["inbound","outbound","bi-directional","unknown"],"title":"Data flow direction","default":"","pattern":"^(.*)$"}}};const schema140 = {"type":"object","title":"External Reference","description":"Specifies an individual external reference","required":["url","type"],"properties":{"url":{"type":"string","title":"URL","description":"The URL to the external reference","pattern":"^(.*)$"},"comment":{"type":"string","title":"Comment","description":"An optional comment describing the external reference","pattern":"^(.*)$"},"type":{"type":"string","title":"Type","description":"Specifies the type of external reference. There are built-in types to describe common references. If a type does not exist for the reference being referred to, use the \"other\" type.","enum":["vcs","issue-tracker","website","advisories","bom","mailing-list","social","chat","documentation","support","distribution","license","build-meta","build-system","other"]}}};const schema146 = {"type":"object","title":"Dependency","description":"Defines the direct dependencies of a component. Components that do not have their own dependencies MUST be declared as empty elements within the graph. Components that are not represented in the dependency graph MAY have unknown dependencies. It is RECOMMENDED that implementations assume this to be opaque and not an indicator of a component being dependency-free.","required":["ref"],"properties":{"ref":{"type":"string","format":"string","title":"Reference","description":"References a component by the components bom-ref attribute"},"dependsOn":{"type":"array","uniqueItems":true,"items":{"type":"string"},"title":"Depends On","description":"The bom-ref identifiers of the components that are dependencies of this dependency object."}}};const pattern8 = new RegExp("^(.*)$", "u");const schema119 = {"type":"object","title":"BOM Metadata Object","properties":{"timestamp":{"type":"string","format":"date-time","title":"Timestamp","description":"The date and time (timestamp) when the document was created."},"tools":{"type":"array","title":"Creation Tools","description":"The tool(s) used in the creation of the BOM.","items":{"$ref":"#/definitions/tool"}},"authors":{"type":"array","title":"Authors","description":"The person(s) who created the BOM. Authors are common in BOMs created through manual processes. BOMs created through automated means may not have authors.","items":{"$ref":"#/definitions/organizationalContact"}},"component":{"title":"Component","description":"The component that the BOM describes.","$ref":"#/definitions/component"},"manufacture":{"title":"Manufacture","description":"The organization that manufactured the component that the BOM describes.","$ref":"#/definitions/organizationalEntity"},"supplier":{"title":"Supplier","description":" The organization that supplied the component that the BOM describes. The supplier may often be the manufacture, but may also be a distributor or repackager.","$ref":"#/definitions/organizationalEntity"}}};const schema124 = {"type":"object","title":"Organizational Contact Object","description":"","properties":{"name":{"type":"string","title":"Name","description":"The name of a contact","default":"","examples":["Contact name"],"pattern":"^(.*)$"},"email":{"type":"string","title":"Email Address","description":"The email address of the contact. Multiple email addresses are allowed.","default":"","examples":["firstname.lastname@example.com"],"pattern":"^(.*)$"},"phone":{"type":"string","title":"Phone","description":"The phone number of the contact. Multiple phone numbers are allowed.","default":"","examples":["800-555-1212"],"pattern":"^(.*)$"}}};const schema120 = {"type":"object","title":"Tool","description":"The tool used to create the BOM.","properties":{"vendor":{"type":"string","format":"string","title":"Tool Vendor","description":"The date and time (timestamp) when the document was created."},"name":{"type":"string","format":"string","title":"Tool Name","description":"The date and time (timestamp) when the document was created."},"version":{"type":"string","format":"string","title":"Tool Version","description":"The date and time (timestamp) when the document was created."},"hashes":{"$id":"#/definitions/tool/properties/hashes","type":"array","items":{"$ref":"#/definitions/hash"},"title":"Hashes","description":"The hashes of the tool (if applicable)."}}};const schema121 = {"type":"object","title":"Hash Objects","required":["alg","content"],"properties":{"alg":{"$ref":"#/definitions/hash-alg"},"content":{"$ref":"#/definitions/hash-content"}}};const schema122 = {"type":"string","enum":["MD5","SHA-1","SHA-256","SHA-384","SHA-512","SHA3-256","SHA3-384","SHA3-512","BLAKE2b-256","BLAKE2b-384","BLAKE2b-512","BLAKE3"],"title":"Hash Algorithm","default":"","pattern":"^(.*)$"};const schema123 = {"type":"string","title":"Hash Content (value)","default":"","examples":["3942447fac867ae5cdb3229b658f4d48"],"pattern":"^([a-fA-F0-9]{32}|[a-fA-F0-9]{40}|[a-fA-F0-9]{64}|[a-fA-F0-9]{96}|[a-fA-F0-9]{128})$"};function validate127(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if(((data.alg === undefined) && (missing0 = "alg")) || ((data.content === undefined) && (missing0 = "content"))){validate127.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.alg !== undefined){let data0 = data.alg;const _errs1 = errors;const _errs2 = errors;if(!((((((((((((data0 === "MD5") || (data0 === "SHA-1")) || (data0 === "SHA-256")) || (data0 === "SHA-384")) || (data0 === "SHA-512")) || (data0 === "SHA3-256")) || (data0 === "SHA3-384")) || (data0 === "SHA3-512")) || (data0 === "BLAKE2b-256")) || (data0 === "BLAKE2b-384")) || (data0 === "BLAKE2b-512")) || (data0 === "BLAKE3"))){validate127.errors = [{instancePath:instancePath+"/alg",schemaPath:"#/definitions/hash-alg/enum",keyword:"enum",params:{allowedValues: schema122.enum},message:"must be equal to one of the allowed values"}];return false;}if(errors === _errs2){if(typeof data0 === "string"){if(!pattern8.test(data0)){validate127.errors = [{instancePath:instancePath+"/alg",schemaPath:"#/definitions/hash-alg/pattern",keyword:"pattern",params:{pattern: "^(.*)$"},message:"must match pattern \""+"^(.*)$"+"\""}];return false;}}else {validate127.errors = [{instancePath:instancePath+"/alg",schemaPath:"#/definitions/hash-alg/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.content !== undefined){let data1 = data.content;const _errs4 = errors;const _errs5 = errors;if(errors === _errs5){if(typeof data1 === "string"){if(!pattern1.test(data1)){validate127.errors = [{instancePath:instancePath+"/content",schemaPath:"#/definitions/hash-content/pattern",keyword:"pattern",params:{pattern: "^([a-fA-F0-9]{32}|[a-fA-F0-9]{40}|[a-fA-F0-9]{64}|[a-fA-F0-9]{96}|[a-fA-F0-9]{128})$"},message:"must match pattern \""+"^([a-fA-F0-9]{32}|[a-fA-F0-9]{40}|[a-fA-F0-9]{64}|[a-fA-F0-9]{96}|[a-fA-F0-9]{128})$"+"\""}];return false;}}else {validate127.errors = [{instancePath:instancePath+"/content",schemaPath:"#/definitions/hash-content/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs4 === errors;}else {var valid0 = true;}}}}else {validate127.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate127.errors = vErrors;return errors === 0;}function validate126(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){if(data.vendor !== undefined){const _errs1 = errors;if(errors === _errs1){if(errors === _errs1){if(!(typeof data.vendor === "string")){validate126.errors = [{instancePath:instancePath+"/vendor",schemaPath:"#/properties/vendor/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.name !== undefined){const _errs3 = errors;if(errors === _errs3){if(errors === _errs3){if(!(typeof data.name === "string")){validate126.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs3 === errors;}else {var valid0 = true;}if(valid0){if(data.version !== undefined){const _errs5 = errors;if(errors === _errs5){if(errors === _errs5){if(!(typeof data.version === "string")){validate126.errors = [{instancePath:instancePath+"/version",schemaPath:"#/properties/version/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs5 === errors;}else {var valid0 = true;}if(valid0){if(data.hashes !== undefined){let data3 = data.hashes;const _errs7 = errors;if(errors === _errs7){if(Array.isArray(data3)){var valid1 = true;const len0 = data3.length;for(let i0=0; i0<len0; i0++){const _errs9 = errors;if(!(validate127(data3[i0], {instancePath:instancePath+"/hashes/" + i0,parentData:data3,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate127.errors : vErrors.concat(validate127.errors);errors = vErrors.length;}var valid1 = _errs9 === errors;if(!valid1){break;}}}else {validate126.errors = [{instancePath:instancePath+"/hashes",schemaPath:"#/properties/hashes/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs7 === errors;}else {var valid0 = true;}}}}}else {validate126.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate126.errors = vErrors;return errors === 0;}const schema125 = {"type":"object","title":"Component Object","required":["type","name","version"],"properties":{"type":{"type":"string","enum":["application","framework","library","container","operating-system","device","firmware","file"],"title":"Component Type","description":"Specifies the type of component. For software components, classify as application if no more specific appropriate classification is available or cannot be determined for the component.","default":"","examples":["library"],"pattern":"^(.*)$"},"mime-type":{"type":"string","title":"Mime-Type","description":"The optional mime-type of the component. When used on file components, the mime-type can provide additional context about the kind of file being represented such as an image, font, or executable. Some library or framework components may also have an associated mime-type.","default":"","examples":["image/jpeg"],"pattern":"^[-+a-z0-9.]+/[-+a-z0-9.]+$"},"bom-ref":{"type":"string","title":"BOM Reference","description":"An optional identifier which can be used to reference the component elsewhere in the BOM. Every bom-ref should be unique.","default":"","pattern":"^(.*)$"},"supplier":{"title":"Component Supplier","description":" The organization that supplied the component. The supplier may often be the manufacture, but may also be a distributor or repackager.","$ref":"#/definitions/organizationalEntity"},"author":{"type":"string","title":"Component Author","description":"The person(s) or organization(s) that authored the component","default":"","examples":["Acme Inc"],"pattern":"^(.*)$"},"publisher":{"type":"string","title":"Component Publisher","description":"The person(s) or organization(s) that published the component","default":"","examples":["Acme Inc"],"pattern":"^(.*)$"},"group":{"type":"string","title":"Component Group","description":"The grouping name or identifier. This will often be a shortened, single name of the company or project that produced the component, or the source package or domain name. Whitespace and special characters should be avoided. Examples include: apache, org.apache.commons, and apache.org.","default":"","examples":["com.acme"],"pattern":"^(.*)$"},"name":{"type":"string","title":"Component Name","description":"The name of the component. This will often be a shortened, single name of the component. Examples: commons-lang3 and jquery","default":"","examples":["tomcat-catalina"],"pattern":"^(.*)$"},"version":{"type":"string","title":"Component Version","description":"The component version. The version should ideally comply with semantic versioning but is not enforced.","default":"","examples":["9.0.14"],"pattern":"^(.*)$"},"description":{"type":"string","title":"Component Description","description":"Specifies a description for the component","default":"","pattern":"^(.*)$"},"scope":{"type":"string","enum":["required","optional","excluded"],"title":"Component Scope","description":"Specifies the scope of the component. If scope is not specified, 'required' scope should be assumed by the consumer of the BOM","default":"required","pattern":"^(.*)$"},"hashes":{"type":"array","title":"Component Hashes","items":{"$ref":"#/definitions/hash"}},"licenses":{"type":"array","title":"Component License(s)","items":{"properties":{"license":{"$ref":"#/definitions/license"},"expression":{"type":"string","title":"SPDX License Expression","examples":["Apache-2.0 AND (MIT OR GPL-2.0-only)","GPL-3.0-only WITH Classpath-exception-2.0"],"pattern":"^(.*)$"}},"oneOf":[{"required":["license"]},{"required":["expression"]}]}},"copyright":{"type":"string","title":"Component Copyright","description":"An optional copyright notice informing users of the underlying claims to copyright ownership in a published work.","examples":["Acme Inc"],"pattern":"^(.*)$"},"cpe":{"type":"string","title":"Component Common Platform Enumeration (CPE)","description":"DEPRECATED - DO NOT USE. This will be removed in a future version. Specifies a well-formed CPE name. See https://nvd.nist.gov/products/cpe","examples":["cpe:2.3:a:acme:component_framework:-:*:*:*:*:*:*:*"],"pattern":"^(.*)$"},"purl":{"type":"string","title":"Component Package URL (purl)","default":"","examples":["pkg:maven/com.acme/tomcat-catalina@9.0.14?packaging=jar"],"pattern":"^(.*)$"},"swid":{"$ref":"#/definitions/swid","title":"SWID Tag","description":"Specifies metadata and content for ISO-IEC 19770-2 Software Identification (SWID) Tags."},"modified":{"type":"boolean","title":"Component Modified From Original","description":"DEPRECATED - DO NOT USE. This will be removed in a future version. Use the pedigree element instead to supply information on exactly how the component was modified. A boolean value indicating is the component has been modified from the original. A value of true indicates the component is a derivative of the original. A value of false indicates the component has not been modified from the original."},"pedigree":{"type":"object","title":"Component Pedigree","description":"Component pedigree is a way to document complex supply chain scenarios where components are created, distributed, modified, redistributed, combined with other components, etc. Pedigree supports viewing this complex chain from the beginning, the end, or anywhere in the middle. It also provides a way to document variants where the exact relation may not be known.","properties":{"ancestors":{"type":"array","title":"Ancestors","description":"Describes zero or more components in which a component is derived from. This is commonly used to describe forks from existing projects where the forked version contains a ancestor node containing the original component it was forked from. For example, Component A is the original component. Component B is the component being used and documented in the BOM. However, Component B contains a pedigree node with a single ancestor documenting Component A - the original component from which Component B is derived from.","items":{"$ref":"#/definitions/component"}},"descendants":{"type":"array","title":"Descendants","description":"Descendants are the exact opposite of ancestors. This provides a way to document all forks (and their forks) of an original or root component.","items":{"$ref":"#/definitions/component"}},"variants":{"type":"array","title":"Variants","description":"Variants describe relations where the relationship between the components are not known. For example, if Component A contains nearly identical code to Component B. They are both related, but it is unclear if one is derived from the other, or if they share a common ancestor.","items":{"$ref":"#/definitions/component"}},"commits":{"type":"array","title":"Commits","description":"A list of zero or more commits which provide a trail describing how the component deviates from an ancestor, descendant, or variant.","items":{"$ref":"#/definitions/commit"}},"patches":{"type":"array","title":"Patches","description":">A list of zero or more patches describing how the component deviates from an ancestor, descendant, or variant. Patches may be complimentary to commits or may be used in place of commits.","items":{"$ref":"#/definitions/patch"}},"notes":{"type":"string","title":"Notes","description":"Notes, observations, and other non-structured commentary describing the components pedigree.","pattern":"^(.*)$"}}},"externalReferences":{"type":"array","items":{"$ref":"#/definitions/externalReference"},"title":"External References"},"components":{"$id":"#/definitions/component/properties/components","type":"array","items":{"$ref":"#/definitions/component"},"uniqueItems":true,"title":"Components"}}};const schema126 = {"type":"object","title":"Organizational Entity Object","description":"","properties":{"name":{"type":"string","title":"Name","description":"The name of the organization","default":"","examples":["Example Inc."],"pattern":"^(.*)$"},"url":{"type":"array","title":"URL","description":"The URL of the organization. Multiple URLs are allowed.","default":"","examples":["https://example.com"],"pattern":"^(.*)$"},"contact":{"type":"array","title":"Contact","description":"A contact at the organization. Multiple contacts are allowed.","items":{"$ref":"#/definitions/organizationalContact"}}}};function validate131(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){if(data.name !== undefined){let data0 = data.name;const _errs1 = errors;if(errors === _errs1){if(typeof data0 === "string"){if(!pattern8.test(data0)){validate131.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/pattern",keyword:"pattern",params:{pattern: "^(.*)$"},message:"must match pattern \""+"^(.*)$"+"\""}];return false;}}else {validate131.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.url !== undefined){let data1 = data.url;const _errs3 = errors;if(!(Array.isArray(data1))){validate131.errors = [{instancePath:instancePath+"/url",schemaPath:"#/properties/url/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}if(errors === _errs3){if(typeof data1 === "string"){if(!pattern8.test(data1)){validate131.errors = [{instancePath:instancePath+"/url",schemaPath:"#/properties/url/pattern",keyword:"pattern",params:{pattern: "^(.*)$"},message:"must match pattern \""+"^(.*)$"+"\""}];return false;}}}var valid0 = _errs3 === errors;}else {var valid0 = true;}if(valid0){if(data.contact !== undefined){let data2 = data.contact;const _errs5 = errors;if(errors === _errs5){if(Array.isArray(data2)){var valid1 = true;const len0 = data2.length;for(let i0=0; i0<len0; i0++){let data3 = data2[i0];const _errs7 = errors;const _errs8 = errors;if(errors === _errs8){if(data3 && typeof data3 == "object" && !Array.isArray(data3)){if(data3.name !== undefined){let data4 = data3.name;const _errs10 = errors;if(errors === _errs10){if(typeof data4 === "string"){if(!pattern8.test(data4)){validate131.errors = [{instancePath:instancePath+"/contact/" + i0+"/name",schemaPath:"#/definitions/organizationalContact/properties/name/pattern",keyword:"pattern",params:{pattern: "^(.*)$"},message:"must match pattern \""+"^(.*)$"+"\""}];return false;}}else {validate131.errors = [{instancePath:instancePath+"/contact/" + i0+"/name",schemaPath:"#/definitions/organizationalContact/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid3 = _errs10 === errors;}else {var valid3 = true;}if(valid3){if(data3.email !== undefined){let data5 = data3.email;const _errs12 = errors;if(errors === _errs12){if(typeof data5 === "string"){if(!pattern8.test(data5)){validate131.errors = [{instancePath:instancePath+"/contact/" + i0+"/email",schemaPath:"#/definitions/organizationalContact/properties/email/pattern",keyword:"pattern",params:{pattern: "^(.*)$"},message:"must match pattern \""+"^(.*)$"+"\""}];return false;}}else {validate131.errors = [{instancePath:instancePath+"/contact/" + i0+"/email",schemaPath:"#/definitions/organizationalContact/properties/email/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid3 = _errs12 === errors;}else {var valid3 = true;}if(valid3){if(data3.phone !== undefined){let data6 = data3.phone;const _errs14 = errors;if(errors === _errs14){if(typeof data6 === "string"){if(!pattern8.test(data6)){validate131.errors = [{instancePath:instancePath+"/contact/" + i0+"/phone",schemaPath:"#/definitions/organizationalContact/properties/phone/pattern",keyword:"pattern",params:{pattern: "^(.*)$"},message:"must match pattern \""+"^(.*)$"+"\""}];return false;}}else {validate131.errors = [{instancePath:instancePath+"/contact/" + i0+"/phone",schemaPath:"#/definitions/organizationalContact/properties/phone/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid3 = _errs14 === errors;}else {var valid3 = true;}}}}else {validate131.errors = [{instancePath:instancePath+"/contact/" + i0,schemaPath:"#/definitions/organizationalContact/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid1 = _errs7 === errors;if(!valid1){break;}}}else {validate131.errors = [{instancePath:instancePath+"/contact",schemaPath:"#/properties/contact/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs5 === errors;}else {var valid0 = true;}}}}else {validate131.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate131.errors = vErrors;return errors === 0;}const schema128 = {"type":"object","title":"License Object","oneOf":[{"required":["id"]},{"required":["name"]}],"properties":{"id":{"$ref":"spdx.SNAPSHOT.schema.json","title":"License ID (SPDX)","description":"A valid SPDX license ID","examples":["Apache-2.0"]},"name":{"type":"string","title":"License Name","description":"If SPDX does not define the license used, this field may be used to provide the license name","default":"","examples":["Acme Software License"],"pattern":"^(.*)$"},"text":{"title":"License text","description":"An optional way to include the textual content of a license.","$ref":"#/definitions/attachment"},"url":{"type":"string","title":"License URL","description":"The URL to the license file. If specified, a 'license' externalReference should also be specified for completeness","examples":["https://www.apache.org/licenses/LICENSE-2.0.txt"],"pattern":"^(.*)$"}}};const schema130 = {"type":"object","title":"Attachment","description":"Specifies the metadata and content for an attachment.","required":["content"],"properties":{"contentType":{"type":"string","title":"Content-Type","description":"Specifies the content type of the text. Defaults to text/plain if not specified.","default":"text/plain"},"encoding":{"type":"string","title":"Encoding","description":"Specifies the optional encoding the text is represented in.","enum":["base64"],"default":"","pattern":"^(.*)$"},"content":{"type":"string","title":"Attachment Text","description":"The attachment data"}}};function validate134(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;const _errs1 = errors;let valid0 = false;let passing0 = null;const _errs2 = errors;if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.id === undefined) && (missing0 = "id")){const err0 = {instancePath,schemaPath:"#/oneOf/0/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"};if(vErrors === null){vErrors = [err0];}else {vErrors.push(err0);}errors++;}}var _valid0 = _errs2 === errors;if(_valid0){valid0 = true;passing0 = 0;}const _errs3 = errors;if(data && typeof data == "object" && !Array.isArray(data)){let missing1;if((data.name === undefined) && (missing1 = "name")){const err1 = {instancePath,schemaPath:"#/oneOf/1/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"};if(vErrors === null){vErrors = [err1];}else {vErrors.push(err1);}errors++;}}var _valid0 = _errs3 === errors;if(_valid0 && valid0){valid0 = false;passing0 = [passing0, 1];}else {if(_valid0){valid0 = true;passing0 = 1;}}if(!valid0){const err2 = {instancePath,schemaPath:"#/oneOf",keyword:"oneOf",params:{passingSchemas: passing0},message:"must match exactly one schema in oneOf"};if(vErrors === null){vErrors = [err2];}else {vErrors.push(err2);}errors++;validate134.errors = vErrors;return false;}else {errors = _errs1;if(vErrors !== null){if(_errs1){vErrors.length = _errs1;}else {vErrors = null;}}}if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){if(data.id !== undefined){let data0 = data.id;const _errs4 = errors;if(typeof data0 !== "string"){validate134.errors = [{instancePath:instancePath+"/id",schemaPath:"spdx.SNAPSHOT.schema.json/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}let valid3;valid3 = false;for(const v0 of schema25.enum){if(func0(data0, v0)){valid3 = true;break;}}if(!valid3){validate134.errors = [{instancePath:instancePath+"/id",schemaPath:"spdx.SNAPSHOT.schema.json/enum",keyword:"enum",params:{allowedValues: schema25.enum},message:"must be equal to one of the allowed values"}];return false;}var valid1 = _errs4 === errors;}else {var valid1 = true;}if(valid1){if(data.name !== undefined){let data1 = data.name;const _errs8 = errors;if(errors === _errs8){if(typeof data1 === "string"){if(!pattern8.test(data1)){validate134.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/pattern",keyword:"pattern",params:{pattern: "^(.*)$"},message:"must match pattern \""+"^(.*)$"+"\""}];return false;}}else {validate134.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid1 = _errs8 === errors;}else {var valid1 = true;}if(valid1){if(data.text !== undefined){let data2 = data.text;const _errs10 = errors;const _errs11 = errors;if(errors === _errs11){if(data2 && typeof data2 == "object" && !Array.isArray(data2)){let missing2;if((data2.content === undefined) && (missing2 = "content")){validate134.errors = [{instancePath:instancePath+"/text",schemaPath:"#/definitions/attachment/required",keyword:"required",params:{missingProperty: missing2},message:"must have required property '"+missing2+"'"}];return false;}else {if(data2.contentType !== undefined){const _errs13 = errors;if(typeof data2.contentType !== "string"){validate134.errors = [{instancePath:instancePath+"/text/contentType",schemaPath:"#/definitions/attachment/properties/contentType/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid5 = _errs13 === errors;}else {var valid5 = true;}if(valid5){if(data2.encoding !== undefined){let data4 = data2.encoding;const _errs15 = errors;if(!(data4 === "base64")){validate134.errors = [{instancePath:instancePath+"/text/encoding",schemaPath:"#/definitions/attachment/properties/encoding/enum",keyword:"enum",params:{allowedValues: schema130.properties.encoding.enum},message:"must be equal to one of the allowed values"}];return false;}if(errors === _errs15){if(typeof data4 === "string"){if(!pattern8.test(data4)){validate134.errors = [{instancePath:instancePath+"/text/encoding",schemaPath:"#/definitions/attachment/properties/encoding/pattern",keyword:"pattern",params:{pattern: "^(.*)$"},message:"must match pattern \""+"^(.*)$"+"\""}];return false;}}else {validate134.errors = [{instancePath:instancePath+"/text/encoding",schemaPath:"#/definitions/attachment/properties/encoding/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid5 = _errs15 === errors;}else {var valid5 = true;}if(valid5){if(data2.content !== undefined){const _errs17 = errors;if(typeof data2.content !== "string"){validate134.errors = [{instancePath:instancePath+"/text/content",schemaPath:"#/definitions/attachment/properties/content/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid5 = _errs17 === errors;}else {var valid5 = true;}}}}}else {validate134.errors = [{instancePath:instancePath+"/text",schemaPath:"#/definitions/attachment/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid1 = _errs10 === errors;}else {var valid1 = true;}if(valid1){if(data.url !== undefined){let data6 = data.url;const _errs19 = errors;if(errors === _errs19){if(typeof data6 === "string"){if(!pattern8.test(data6)){validate134.errors = [{instancePath:instancePath+"/url",schemaPath:"#/properties/url/pattern",keyword:"pattern",params:{pattern: "^(.*)$"},message:"must match pattern \""+"^(.*)$"+"\""}];return false;}}else {validate134.errors = [{instancePath:instancePath+"/url",schemaPath:"#/properties/url/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid1 = _errs19 === errors;}else {var valid1 = true;}}}}}else {validate134.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate134.errors = vErrors;return errors === 0;}const schema131 = {"type":"object","title":"SWID Tag","description":"Specifies metadata and content for ISO-IEC 19770-2 Software Identification (SWID) Tags.","required":["tagId","name"],"properties":{"tagId":{"type":"string","title":"Tag ID","description":"Maps to the tagId of a SoftwareIdentity."},"name":{"type":"string","title":"Name","description":"Maps to the name of a SoftwareIdentity."},"version":{"type":"string","title":"Version","default":"0.0","description":"Maps to the version of a SoftwareIdentity."},"tagVersion":{"type":"integer","title":"Tag Version","default":0,"description":"Maps to the tagVersion of a SoftwareIdentity."},"patch":{"type":"boolean","title":"Patch","default":false,"description":"Maps to the patch of a SoftwareIdentity."},"text":{"title":"Attachment text","description":"Specifies the metadata and content of the SWID tag.","$ref":"#/definitions/attachment"},"url":{"type":"string","title":"URL","default":"The URL to the SWID file.","pattern":"^(.*)$"}}};function validate136(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if(((data.tagId === undefined) && (missing0 = "tagId")) || ((data.name === undefined) && (missing0 = "name"))){validate136.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.tagId !== undefined){const _errs1 = errors;if(typeof data.tagId !== "string"){validate136.errors = [{instancePath:instancePath+"/tagId",schemaPath:"#/properties/tagId/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.name !== undefined){const _errs3 = errors;if(typeof data.name !== "string"){validate136.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs3 === errors;}else {var valid0 = true;}if(valid0){if(data.version !== undefined){const _errs5 = errors;if(typeof data.version !== "string"){validate136.errors = [{instancePath:instancePath+"/version",schemaPath:"#/properties/version/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs5 === errors;}else {var valid0 = true;}if(valid0){if(data.tagVersion !== undefined){let data3 = data.tagVersion;const _errs7 = errors;if(!((typeof data3 == "number") && (!(data3 % 1) && !isNaN(data3)))){validate136.errors = [{instancePath:instancePath+"/tagVersion",schemaPath:"#/properties/tagVersion/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid0 = _errs7 === errors;}else {var valid0 = true;}if(valid0){if(data.patch !== undefined){const _errs9 = errors;if(typeof data.patch !== "boolean"){validate136.errors = [{instancePath:instancePath+"/patch",schemaPath:"#/properties/patch/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs9 === errors;}else {var valid0 = true;}if(valid0){if(data.text !== undefined){let data5 = data.text;const _errs11 = errors;const _errs12 = errors;if(errors === _errs12){if(data5 && typeof data5 == "object" && !Array.isArray(data5)){let missing1;if((data5.content === undefined) && (missing1 = "content")){validate136.errors = [{instancePath:instancePath+"/text",schemaPath:"#/definitions/attachment/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {if(data5.contentType !== undefined){const _errs14 = errors;if(typeof data5.contentType !== "string"){validate136.errors = [{instancePath:instancePath+"/text/contentType",schemaPath:"#/definitions/attachment/properties/contentType/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs14 === errors;}else {var valid2 = true;}if(valid2){if(data5.encoding !== undefined){let data7 = data5.encoding;const _errs16 = errors;if(!(data7 === "base64")){validate136.errors = [{instancePath:instancePath+"/text/encoding",schemaPath:"#/definitions/attachment/properties/encoding/enum",keyword:"enum",params:{allowedValues: schema130.properties.encoding.enum},message:"must be equal to one of the allowed values"}];return false;}if(errors === _errs16){if(typeof data7 === "string"){if(!pattern8.test(data7)){validate136.errors = [{instancePath:instancePath+"/text/encoding",schemaPath:"#/definitions/attachment/properties/encoding/pattern",keyword:"pattern",params:{pattern: "^(.*)$"},message:"must match pattern \""+"^(.*)$"+"\""}];return false;}}else {validate136.errors = [{instancePath:instancePath+"/text/encoding",schemaPath:"#/definitions/attachment/properties/encoding/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid2 = _errs16 === errors;}else {var valid2 = true;}if(valid2){if(data5.content !== undefined){const _errs18 = errors;if(typeof data5.content !== "string"){validate136.errors = [{instancePath:instancePath+"/text/content",schemaPath:"#/definitions/attachment/properties/content/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs18 === errors;}else {var valid2 = true;}}}}}else {validate136.errors = [{instancePath:instancePath+"/text",schemaPath:"#/definitions/attachment/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs11 === errors;}else {var valid0 = true;}if(valid0){if(data.url !== undefined){let data9 = data.url;const _errs20 = errors;if(errors === _errs20){if(typeof data9 === "string"){if(!pattern8.test(data9)){validate136.errors = [{instancePath:instancePath+"/url",schemaPath:"#/properties/url/pattern",keyword:"pattern",params:{pattern: "^(.*)$"},message:"must match pattern \""+"^(.*)$"+"\""}];return false;}}else {validate136.errors = [{instancePath:instancePath+"/url",schemaPath:"#/properties/url/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs20 === errors;}else {var valid0 = true;}}}}}}}}}else {validate136.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate136.errors = vErrors;return errors === 0;}const schema133 = {"type":"object","title":"Commit","description":"Specifies an individual commit","properties":{"uid":{"type":"string","title":"UID","description":"A unique identifier of the commit. This may be version control specific. For example, Subversion uses revision numbers whereas git uses commit hashes.","pattern":"^(.*)$"},"url":{"type":"string","title":"URL","description":"The URL to the commit. This URL will typically point to a commit in a version control system.","format":"iri-reference"},"author":{"title":"Author","description":"The author who created the changes in the commit","$ref":"#/definitions/identifiableAction"},"committer":{"title":"Committer","description":"The person who committed or pushed the commit","$ref":"#/definitions/identifiableAction"},"message":{"type":"string","title":"Message","description":"The text description of the contents of the commit","pattern":"^(.*)$"}}};const schema134 = {"type":"object","title":"Identifiable Action","description":"Specifies an individual commit","properties":{"timestamp":{"type":"string","format":"date-time","title":"Timestamp","description":"The timestamp in which the action occurred"},"name":{"type":"string","title":"Name","description":"The name of the individual who performed the action","pattern":"^(.*)$"},"email":{"type":"string","format":"idn-email","title":"E-mail","description":"The email address of the individual who performed the action"}}};function validate138(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){if(data.uid !== undefined){let data0 = data.uid;const _errs1 = errors;if(errors === _errs1){if(typeof data0 === "string"){if(!pattern8.test(data0)){validate138.errors = [{instancePath:instancePath+"/uid",schemaPath:"#/properties/uid/pattern",keyword:"pattern",params:{pattern: "^(.*)$"},message:"must match pattern \""+"^(.*)$"+"\""}];return false;}}else {validate138.errors = [{instancePath:instancePath+"/uid",schemaPath:"#/properties/uid/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.url !== undefined){let data1 = data.url;const _errs3 = errors;if(errors === _errs3){if(errors === _errs3){if(typeof data1 === "string"){if(!(formats2(data1))){validate138.errors = [{instancePath:instancePath+"/url",schemaPath:"#/properties/url/format",keyword:"format",params:{format: "iri-reference"},message:"must match format \""+"iri-reference"+"\""}];return false;}}else {validate138.errors = [{instancePath:instancePath+"/url",schemaPath:"#/properties/url/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs3 === errors;}else {var valid0 = true;}if(valid0){if(data.author !== undefined){let data2 = data.author;const _errs5 = errors;const _errs6 = errors;if(errors === _errs6){if(data2 && typeof data2 == "object" && !Array.isArray(data2)){if(data2.timestamp !== undefined){let data3 = data2.timestamp;const _errs8 = errors;if(errors === _errs8){if(errors === _errs8){if(typeof data3 === "string"){if(!(formats0.validate(data3))){validate138.errors = [{instancePath:instancePath+"/author/timestamp",schemaPath:"#/definitions/identifiableAction/properties/timestamp/format",keyword:"format",params:{format: "date-time"},message:"must match format \""+"date-time"+"\""}];return false;}}else {validate138.errors = [{instancePath:instancePath+"/author/timestamp",schemaPath:"#/definitions/identifiableAction/properties/timestamp/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid2 = _errs8 === errors;}else {var valid2 = true;}if(valid2){if(data2.name !== undefined){let data4 = data2.name;const _errs10 = errors;if(errors === _errs10){if(typeof data4 === "string"){if(!pattern8.test(data4)){validate138.errors = [{instancePath:instancePath+"/author/name",schemaPath:"#/definitions/identifiableAction/properties/name/pattern",keyword:"pattern",params:{pattern: "^(.*)$"},message:"must match pattern \""+"^(.*)$"+"\""}];return false;}}else {validate138.errors = [{instancePath:instancePath+"/author/name",schemaPath:"#/definitions/identifiableAction/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid2 = _errs10 === errors;}else {var valid2 = true;}if(valid2){if(data2.email !== undefined){let data5 = data2.email;const _errs12 = errors;if(errors === _errs12){if(errors === _errs12){if(typeof data5 === "string"){if(!(formats4(data5))){validate138.errors = [{instancePath:instancePath+"/author/email",schemaPath:"#/definitions/identifiableAction/properties/email/format",keyword:"format",params:{format: "idn-email"},message:"must match format \""+"idn-email"+"\""}];return false;}}else {validate138.errors = [{instancePath:instancePath+"/author/email",schemaPath:"#/definitions/identifiableAction/properties/email/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid2 = _errs12 === errors;}else {var valid2 = true;}}}}else {validate138.errors = [{instancePath:instancePath+"/author",schemaPath:"#/definitions/identifiableAction/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs5 === errors;}else {var valid0 = true;}if(valid0){if(data.committer !== undefined){let data6 = data.committer;const _errs14 = errors;const _errs15 = errors;if(errors === _errs15){if(data6 && typeof data6 == "object" && !Array.isArray(data6)){if(data6.timestamp !== undefined){let data7 = data6.timestamp;const _errs17 = errors;if(errors === _errs17){if(errors === _errs17){if(typeof data7 === "string"){if(!(formats0.validate(data7))){validate138.errors = [{instancePath:instancePath+"/committer/timestamp",schemaPath:"#/definitions/identifiableAction/properties/timestamp/format",keyword:"format",params:{format: "date-time"},message:"must match format \""+"date-time"+"\""}];return false;}}else {validate138.errors = [{instancePath:instancePath+"/committer/timestamp",schemaPath:"#/definitions/identifiableAction/properties/timestamp/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid4 = _errs17 === errors;}else {var valid4 = true;}if(valid4){if(data6.name !== undefined){let data8 = data6.name;const _errs19 = errors;if(errors === _errs19){if(typeof data8 === "string"){if(!pattern8.test(data8)){validate138.errors = [{instancePath:instancePath+"/committer/name",schemaPath:"#/definitions/identifiableAction/properties/name/pattern",keyword:"pattern",params:{pattern: "^(.*)$"},message:"must match pattern \""+"^(.*)$"+"\""}];return false;}}else {validate138.errors = [{instancePath:instancePath+"/committer/name",schemaPath:"#/definitions/identifiableAction/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid4 = _errs19 === errors;}else {var valid4 = true;}if(valid4){if(data6.email !== undefined){let data9 = data6.email;const _errs21 = errors;if(errors === _errs21){if(errors === _errs21){if(typeof data9 === "string"){if(!(formats4(data9))){validate138.errors = [{instancePath:instancePath+"/committer/email",schemaPath:"#/definitions/identifiableAction/properties/email/format",keyword:"format",params:{format: "idn-email"},message:"must match format \""+"idn-email"+"\""}];return false;}}else {validate138.errors = [{instancePath:instancePath+"/committer/email",schemaPath:"#/definitions/identifiableAction/properties/email/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid4 = _errs21 === errors;}else {var valid4 = true;}}}}else {validate138.errors = [{instancePath:instancePath+"/committer",schemaPath:"#/definitions/identifiableAction/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs14 === errors;}else {var valid0 = true;}if(valid0){if(data.message !== undefined){let data10 = data.message;const _errs23 = errors;if(errors === _errs23){if(typeof data10 === "string"){if(!pattern8.test(data10)){validate138.errors = [{instancePath:instancePath+"/message",schemaPath:"#/properties/message/pattern",keyword:"pattern",params:{pattern: "^(.*)$"},message:"must match pattern \""+"^(.*)$"+"\""}];return false;}}else {validate138.errors = [{instancePath:instancePath+"/message",schemaPath:"#/properties/message/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs23 === errors;}else {var valid0 = true;}}}}}}else {validate138.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate138.errors = vErrors;return errors === 0;}const schema136 = {"type":"object","title":"Patch","description":"Specifies an individual patch","required":["type"],"properties":{"type":{"type":"string","enum":["unofficial","monkey","backport","cherry-pick"],"title":"Type","description":"Specifies the purpose for the patch including the resolution of defects, security issues, or new behavior or functionality"},"diff":{"title":"Diff","description":"The patch file (or diff) that show changes. Refer to https://en.wikipedia.org/wiki/Diff","$ref":"#/definitions/diff"},"resolves":{"type":"array","items":{"$ref":"#/definitions/issue"},"title":"Resolves","description":"A collection of issues the patch resolves"}}};const schema139 = {"type":"object","title":"Diff","description":"The patch file (or diff) that show changes. Refer to https://en.wikipedia.org/wiki/Diff","required":["type"],"properties":{"type":{"type":"string","enum":["defect","enhancement","security"],"title":"Type","description":"Specifies the type of issue"},"id":{"type":"string","title":"ID","description":"The identifier of the issue assigned by the source of the issue","pattern":"^(.*)$"},"name":{"type":"string","title":"Name","description":"The name of the issue","pattern":"^(.*)$"},"description":{"type":"string","title":"Description","description":"A description of the issue","pattern":"^(.*)$"},"source":{"type":"object","title":"Source","description":"The source of the issue where it is documented","properties":{"name":{"type":"string","title":"Name","description":"The name of the source. For example 'National Vulnerability Database', 'NVD', and 'Apache'","pattern":"^(.*)$"},"url":{"type":"string","title":"URL","description":"The url of the issue documentation as provided by the source","pattern":"^(.*)$"}}},"references":{"type":"array","title":"References","description":"A collection of URL's for reference. Multiple URLs are allowed.","default":"","examples":["https://example.com"],"pattern":"^(.*)$"}}};const schema137 = {"type":"object","title":"Diff","description":"The patch file (or diff) that show changes. Refer to https://en.wikipedia.org/wiki/Diff","properties":{"text":{"title":"Diff text","description":"Specifies the optional text of the diff","$ref":"#/definitions/attachment"},"url":{"type":"string","title":"URL","description":"Specifies the URL to the diff","pattern":"^(.*)$"}}};function validate141(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){if(data.text !== undefined){let data0 = data.text;const _errs1 = errors;const _errs2 = errors;if(errors === _errs2){if(data0 && typeof data0 == "object" && !Array.isArray(data0)){let missing0;if((data0.content === undefined) && (missing0 = "content")){validate141.errors = [{instancePath:instancePath+"/text",schemaPath:"#/definitions/attachment/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data0.contentType !== undefined){const _errs4 = errors;if(typeof data0.contentType !== "string"){validate141.errors = [{instancePath:instancePath+"/text/contentType",schemaPath:"#/definitions/attachment/properties/contentType/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs4 === errors;}else {var valid2 = true;}if(valid2){if(data0.encoding !== undefined){let data2 = data0.encoding;const _errs6 = errors;if(!(data2 === "base64")){validate141.errors = [{instancePath:instancePath+"/text/encoding",schemaPath:"#/definitions/attachment/properties/encoding/enum",keyword:"enum",params:{allowedValues: schema130.properties.encoding.enum},message:"must be equal to one of the allowed values"}];return false;}if(errors === _errs6){if(typeof data2 === "string"){if(!pattern8.test(data2)){validate141.errors = [{instancePath:instancePath+"/text/encoding",schemaPath:"#/definitions/attachment/properties/encoding/pattern",keyword:"pattern",params:{pattern: "^(.*)$"},message:"must match pattern \""+"^(.*)$"+"\""}];return false;}}else {validate141.errors = [{instancePath:instancePath+"/text/encoding",schemaPath:"#/definitions/attachment/properties/encoding/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid2 = _errs6 === errors;}else {var valid2 = true;}if(valid2){if(data0.content !== undefined){const _errs8 = errors;if(typeof data0.content !== "string"){validate141.errors = [{instancePath:instancePath+"/text/content",schemaPath:"#/definitions/attachment/properties/content/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs8 === errors;}else {var valid2 = true;}}}}}else {validate141.errors = [{instancePath:instancePath+"/text",schemaPath:"#/definitions/attachment/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.url !== undefined){let data4 = data.url;const _errs10 = errors;if(errors === _errs10){if(typeof data4 === "string"){if(!pattern8.test(data4)){validate141.errors = [{instancePath:instancePath+"/url",schemaPath:"#/properties/url/pattern",keyword:"pattern",params:{pattern: "^(.*)$"},message:"must match pattern \""+"^(.*)$"+"\""}];return false;}}else {validate141.errors = [{instancePath:instancePath+"/url",schemaPath:"#/properties/url/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs10 === errors;}else {var valid0 = true;}}}else {validate141.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate141.errors = vErrors;return errors === 0;}function validate140(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.type === undefined) && (missing0 = "type")){validate140.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.type !== undefined){let data0 = data.type;const _errs1 = errors;if(typeof data0 !== "string"){validate140.errors = [{instancePath:instancePath+"/type",schemaPath:"#/properties/type/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!((((data0 === "unofficial") || (data0 === "monkey")) || (data0 === "backport")) || (data0 === "cherry-pick"))){validate140.errors = [{instancePath:instancePath+"/type",schemaPath:"#/properties/type/enum",keyword:"enum",params:{allowedValues: schema136.properties.type.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.diff !== undefined){const _errs3 = errors;if(!(validate141(data.diff, {instancePath:instancePath+"/diff",parentData:data,parentDataProperty:"diff",rootData}))){vErrors = vErrors === null ? validate141.errors : vErrors.concat(validate141.errors);errors = vErrors.length;}var valid0 = _errs3 === errors;}else {var valid0 = true;}if(valid0){if(data.resolves !== undefined){let data2 = data.resolves;const _errs4 = errors;if(errors === _errs4){if(Array.isArray(data2)){var valid1 = true;const len0 = data2.length;for(let i0=0; i0<len0; i0++){let data3 = data2[i0];const _errs6 = errors;const _errs7 = errors;if(errors === _errs7){if(data3 && typeof data3 == "object" && !Array.isArray(data3)){let missing1;if((data3.type === undefined) && (missing1 = "type")){validate140.errors = [{instancePath:instancePath+"/resolves/" + i0,schemaPath:"#/definitions/issue/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {if(data3.type !== undefined){let data4 = data3.type;const _errs9 = errors;if(typeof data4 !== "string"){validate140.errors = [{instancePath:instancePath+"/resolves/" + i0+"/type",schemaPath:"#/definitions/issue/properties/type/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!(((data4 === "defect") || (data4 === "enhancement")) || (data4 === "security"))){validate140.errors = [{instancePath:instancePath+"/resolves/" + i0+"/type",schemaPath:"#/definitions/issue/properties/type/enum",keyword:"enum",params:{allowedValues: schema139.properties.type.enum},message:"must be equal to one of the allowed values"}];return false;}var valid3 = _errs9 === errors;}else {var valid3 = true;}if(valid3){if(data3.id !== undefined){let data5 = data3.id;const _errs11 = errors;if(errors === _errs11){if(typeof data5 === "string"){if(!pattern8.test(data5)){validate140.errors = [{instancePath:instancePath+"/resolves/" + i0+"/id",schemaPath:"#/definitions/issue/properties/id/pattern",keyword:"pattern",params:{pattern: "^(.*)$"},message:"must match pattern \""+"^(.*)$"+"\""}];return false;}}else {validate140.errors = [{instancePath:instancePath+"/resolves/" + i0+"/id",schemaPath:"#/definitions/issue/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid3 = _errs11 === errors;}else {var valid3 = true;}if(valid3){if(data3.name !== undefined){let data6 = data3.name;const _errs13 = errors;if(errors === _errs13){if(typeof data6 === "string"){if(!pattern8.test(data6)){validate140.errors = [{instancePath:instancePath+"/resolves/" + i0+"/name",schemaPath:"#/definitions/issue/properties/name/pattern",keyword:"pattern",params:{pattern: "^(.*)$"},message:"must match pattern \""+"^(.*)$"+"\""}];return false;}}else {validate140.errors = [{instancePath:instancePath+"/resolves/" + i0+"/name",schemaPath:"#/definitions/issue/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid3 = _errs13 === errors;}else {var valid3 = true;}if(valid3){if(data3.description !== undefined){let data7 = data3.description;const _errs15 = errors;if(errors === _errs15){if(typeof data7 === "string"){if(!pattern8.test(data7)){validate140.errors = [{instancePath:instancePath+"/resolves/" + i0+"/description",schemaPath:"#/definitions/issue/properties/description/pattern",keyword:"pattern",params:{pattern: "^(.*)$"},message:"must match pattern \""+"^(.*)$"+"\""}];return false;}}else {validate140.errors = [{instancePath:instancePath+"/resolves/" + i0+"/description",schemaPath:"#/definitions/issue/properties/description/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid3 = _errs15 === errors;}else {var valid3 = true;}if(valid3){if(data3.source !== undefined){let data8 = data3.source;const _errs17 = errors;if(errors === _errs17){if(data8 && typeof data8 == "object" && !Array.isArray(data8)){if(data8.name !== undefined){let data9 = data8.name;const _errs19 = errors;if(errors === _errs19){if(typeof data9 === "string"){if(!pattern8.test(data9)){validate140.errors = [{instancePath:instancePath+"/resolves/" + i0+"/source/name",schemaPath:"#/definitions/issue/properties/source/properties/name/pattern",keyword:"pattern",params:{pattern: "^(.*)$"},message:"must match pattern \""+"^(.*)$"+"\""}];return false;}}else {validate140.errors = [{instancePath:instancePath+"/resolves/" + i0+"/source/name",schemaPath:"#/definitions/issue/properties/source/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid4 = _errs19 === errors;}else {var valid4 = true;}if(valid4){if(data8.url !== undefined){let data10 = data8.url;const _errs21 = errors;if(errors === _errs21){if(typeof data10 === "string"){if(!pattern8.test(data10)){validate140.errors = [{instancePath:instancePath+"/resolves/" + i0+"/source/url",schemaPath:"#/definitions/issue/properties/source/properties/url/pattern",keyword:"pattern",params:{pattern: "^(.*)$"},message:"must match pattern \""+"^(.*)$"+"\""}];return false;}}else {validate140.errors = [{instancePath:instancePath+"/resolves/" + i0+"/source/url",schemaPath:"#/definitions/issue/properties/source/properties/url/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid4 = _errs21 === errors;}else {var valid4 = true;}}}else {validate140.errors = [{instancePath:instancePath+"/resolves/" + i0+"/source",schemaPath:"#/definitions/issue/properties/source/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid3 = _errs17 === errors;}else {var valid3 = true;}if(valid3){if(data3.references !== undefined){let data11 = data3.references;const _errs23 = errors;if(!(Array.isArray(data11))){validate140.errors = [{instancePath:instancePath+"/resolves/" + i0+"/references",schemaPath:"#/definitions/issue/properties/references/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}if(errors === _errs23){if(typeof data11 === "string"){if(!pattern8.test(data11)){validate140.errors = [{instancePath:instancePath+"/resolves/" + i0+"/references",schemaPath:"#/definitions/issue/properties/references/pattern",keyword:"pattern",params:{pattern: "^(.*)$"},message:"must match pattern \""+"^(.*)$"+"\""}];return false;}}}var valid3 = _errs23 === errors;}else {var valid3 = true;}}}}}}}}else {validate140.errors = [{instancePath:instancePath+"/resolves/" + i0,schemaPath:"#/definitions/issue/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid1 = _errs6 === errors;if(!valid1){break;}}}else {validate140.errors = [{instancePath:instancePath+"/resolves",schemaPath:"#/properties/resolves/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs4 === errors;}else {var valid0 = true;}}}}}else {validate140.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate140.errors = vErrors;return errors === 0;}const wrapper10 = {validate: validate130};function validate130(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((((data.type === undefined) && (missing0 = "type")) || ((data.name === undefined) && (missing0 = "name"))) || ((data.version === undefined) && (missing0 = "version"))){validate130.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.type !== undefined){let data0 = data.type;const _errs1 = errors;if(!((((((((data0 === "application") || (data0 === "framework")) || (data0 === "library")) || (data0 === "container")) || (data0 === "operating-system")) || (data0 === "device")) || (data0 === "firmware")) || (data0 === "file"))){validate130.errors = [{instancePath:instancePath+"/type",schemaPath:"#/properties/type/enum",keyword:"enum",params:{allowedValues: schema125.properties.type.enum},message:"must be equal to one of the allowed values"}];return false;}if(errors === _errs1){if(typeof data0 === "string"){if(!pattern8.test(data0)){validate130.errors = [{instancePath:instancePath+"/type",schemaPath:"#/properties/type/pattern",keyword:"pattern",params:{pattern: "^(.*)$"},message:"must match pattern \""+"^(.*)$"+"\""}];return false;}}else {validate130.errors = [{instancePath:instancePath+"/type",schemaPath:"#/properties/type/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data["mime-type"] !== undefined){let data1 = data["mime-type"];const _errs3 = errors;if(errors === _errs3){if(typeof data1 === "string"){if(!pattern2.test(data1)){validate130.errors = [{instancePath:instancePath+"/mime-type",schemaPath:"#/properties/mime-type/pattern",keyword:"pattern",params:{pattern: "^[-+a-z0-9.]+/[-+a-z0-9.]+$"},message:"must match pattern \""+"^[-+a-z0-9.]+/[-+a-z0-9.]+$"+"\""}];return false;}}else {validate130.errors = [{instancePath:instancePath+"/mime-type",schemaPath:"#/properties/mime-type/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs3 === errors;}else {var valid0 = true;}if(valid0){if(data["bom-ref"] !== undefined){let data2 = data["bom-ref"];const _errs5 = errors;if(errors === _errs5){if(typeof data2 === "string"){if(!pattern8.test(data2)){validate130.errors = [{instancePath:instancePath+"/bom-ref",schemaPath:"#/properties/bom-ref/pattern",keyword:"pattern",params:{pattern: "^(.*)$"},message:"must match pattern \""+"^(.*)$"+"\""}];return false;}}else {validate130.errors = [{instancePath:instancePath+"/bom-ref",schemaPath:"#/properties/bom-ref/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs5 === errors;}else {var valid0 = true;}if(valid0){if(data.supplier !== undefined){const _errs7 = errors;if(!(validate131(data.supplier, {instancePath:instancePath+"/supplier",parentData:data,parentDataProperty:"supplier",rootData}))){vErrors = vErrors === null ? validate131.errors : vErrors.concat(validate131.errors);errors = vErrors.length;}var valid0 = _errs7 === errors;}else {var valid0 = true;}if(valid0){if(data.author !== undefined){let data4 = data.author;const _errs8 = errors;if(errors === _errs8){if(typeof data4 === "string"){if(!pattern8.test(data4)){validate130.errors = [{instancePath:instancePath+"/author",schemaPath:"#/properties/author/pattern",keyword:"pattern",params:{pattern: "^(.*)$"},message:"must match pattern \""+"^(.*)$"+"\""}];return false;}}else {validate130.errors = [{instancePath:instancePath+"/author",schemaPath:"#/properties/author/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs8 === errors;}else {var valid0 = true;}if(valid0){if(data.publisher !== undefined){let data5 = data.publisher;const _errs10 = errors;if(errors === _errs10){if(typeof data5 === "string"){if(!pattern8.test(data5)){validate130.errors = [{instancePath:instancePath+"/publisher",schemaPath:"#/properties/publisher/pattern",keyword:"pattern",params:{pattern: "^(.*)$"},message:"must match pattern \""+"^(.*)$"+"\""}];return false;}}else {validate130.errors = [{instancePath:instancePath+"/publisher",schemaPath:"#/properties/publisher/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs10 === errors;}else {var valid0 = true;}if(valid0){if(data.group !== undefined){let data6 = data.group;const _errs12 = errors;if(errors === _errs12){if(typeof data6 === "string"){if(!pattern8.test(data6)){validate130.errors = [{instancePath:instancePath+"/group",schemaPath:"#/properties/group/pattern",keyword:"pattern",params:{pattern: "^(.*)$"},message:"must match pattern \""+"^(.*)$"+"\""}];return false;}}else {validate130.errors = [{instancePath:instancePath+"/group",schemaPath:"#/properties/group/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs12 === errors;}else {var valid0 = true;}if(valid0){if(data.name !== undefined){let data7 = data.name;const _errs14 = errors;if(errors === _errs14){if(typeof data7 === "string"){if(!pattern8.test(data7)){validate130.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/pattern",keyword:"pattern",params:{pattern: "^(.*)$"},message:"must match pattern \""+"^(.*)$"+"\""}];return false;}}else {validate130.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs14 === errors;}else {var valid0 = true;}if(valid0){if(data.version !== undefined){let data8 = data.version;const _errs16 = errors;if(errors === _errs16){if(typeof data8 === "string"){if(!pattern8.test(data8)){validate130.errors = [{instancePath:instancePath+"/version",schemaPath:"#/properties/version/pattern",keyword:"pattern",params:{pattern: "^(.*)$"},message:"must match pattern \""+"^(.*)$"+"\""}];return false;}}else {validate130.errors = [{instancePath:instancePath+"/version",schemaPath:"#/properties/version/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs16 === errors;}else {var valid0 = true;}if(valid0){if(data.description !== undefined){let data9 = data.description;const _errs18 = errors;if(errors === _errs18){if(typeof data9 === "string"){if(!pattern8.test(data9)){validate130.errors = [{instancePath:instancePath+"/description",schemaPath:"#/properties/description/pattern",keyword:"pattern",params:{pattern: "^(.*)$"},message:"must match pattern \""+"^(.*)$"+"\""}];return false;}}else {validate130.errors = [{instancePath:instancePath+"/description",schemaPath:"#/properties/description/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs18 === errors;}else {var valid0 = true;}if(valid0){if(data.scope !== undefined){let data10 = data.scope;const _errs20 = errors;if(!(((data10 === "required") || (data10 === "optional")) || (data10 === "excluded"))){validate130.errors = [{instancePath:instancePath+"/scope",schemaPath:"#/properties/scope/enum",keyword:"enum",params:{allowedValues: schema125.properties.scope.enum},message:"must be equal to one of the allowed values"}];return false;}if(errors === _errs20){if(typeof data10 === "string"){if(!pattern8.test(data10)){validate130.errors = [{instancePath:instancePath+"/scope",schemaPath:"#/properties/scope/pattern",keyword:"pattern",params:{pattern: "^(.*)$"},message:"must match pattern \""+"^(.*)$"+"\""}];return false;}}else {validate130.errors = [{instancePath:instancePath+"/scope",schemaPath:"#/properties/scope/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs20 === errors;}else {var valid0 = true;}if(valid0){if(data.hashes !== undefined){let data11 = data.hashes;const _errs22 = errors;if(errors === _errs22){if(Array.isArray(data11)){var valid1 = true;const len0 = data11.length;for(let i0=0; i0<len0; i0++){const _errs24 = errors;if(!(validate127(data11[i0], {instancePath:instancePath+"/hashes/" + i0,parentData:data11,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate127.errors : vErrors.concat(validate127.errors);errors = vErrors.length;}var valid1 = _errs24 === errors;if(!valid1){break;}}}else {validate130.errors = [{instancePath:instancePath+"/hashes",schemaPath:"#/properties/hashes/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs22 === errors;}else {var valid0 = true;}if(valid0){if(data.licenses !== undefined){let data13 = data.licenses;const _errs25 = errors;if(errors === _errs25){if(Array.isArray(data13)){var valid2 = true;const len1 = data13.length;for(let i1=0; i1<len1; i1++){let data14 = data13[i1];const _errs27 = errors;const _errs28 = errors;let valid3 = false;let passing0 = null;const _errs29 = errors;if(data14 && typeof data14 == "object" && !Array.isArray(data14)){let missing1;if((data14.license === undefined) && (missing1 = "license")){const err0 = {instancePath:instancePath+"/licenses/" + i1,schemaPath:"#/properties/licenses/items/oneOf/0/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"};if(vErrors === null){vErrors = [err0];}else {vErrors.push(err0);}errors++;}}var _valid0 = _errs29 === errors;if(_valid0){valid3 = true;passing0 = 0;}const _errs30 = errors;if(data14 && typeof data14 == "object" && !Array.isArray(data14)){let missing2;if((data14.expression === undefined) && (missing2 = "expression")){const err1 = {instancePath:instancePath+"/licenses/" + i1,schemaPath:"#/properties/licenses/items/oneOf/1/required",keyword:"required",params:{missingProperty: missing2},message:"must have required property '"+missing2+"'"};if(vErrors === null){vErrors = [err1];}else {vErrors.push(err1);}errors++;}}var _valid0 = _errs30 === errors;if(_valid0 && valid3){valid3 = false;passing0 = [passing0, 1];}else {if(_valid0){valid3 = true;passing0 = 1;}}if(!valid3){const err2 = {instancePath:instancePath+"/licenses/" + i1,schemaPath:"#/properties/licenses/items/oneOf",keyword:"oneOf",params:{passingSchemas: passing0},message:"must match exactly one schema in oneOf"};if(vErrors === null){vErrors = [err2];}else {vErrors.push(err2);}errors++;validate130.errors = vErrors;return false;}else {errors = _errs28;if(vErrors !== null){if(_errs28){vErrors.length = _errs28;}else {vErrors = null;}}}if(errors === _errs27){if(data14 && typeof data14 == "object" && !Array.isArray(data14)){if(data14.license !== undefined){const _errs31 = errors;if(!(validate134(data14.license, {instancePath:instancePath+"/licenses/" + i1+"/license",parentData:data14,parentDataProperty:"license",rootData}))){vErrors = vErrors === null ? validate134.errors : vErrors.concat(validate134.errors);errors = vErrors.length;}var valid4 = _errs31 === errors;}else {var valid4 = true;}if(valid4){if(data14.expression !== undefined){let data16 = data14.expression;const _errs32 = errors;if(errors === _errs32){if(typeof data16 === "string"){if(!pattern8.test(data16)){validate130.errors = [{instancePath:instancePath+"/licenses/" + i1+"/expression",schemaPath:"#/properties/licenses/items/properties/expression/pattern",keyword:"pattern",params:{pattern: "^(.*)$"},message:"must match pattern \""+"^(.*)$"+"\""}];return false;}}else {validate130.errors = [{instancePath:instancePath+"/licenses/" + i1+"/expression",schemaPath:"#/properties/licenses/items/properties/expression/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid4 = _errs32 === errors;}else {var valid4 = true;}}}}var valid2 = _errs27 === errors;if(!valid2){break;}}}else {validate130.errors = [{instancePath:instancePath+"/licenses",schemaPath:"#/properties/licenses/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs25 === errors;}else {var valid0 = true;}if(valid0){if(data.copyright !== undefined){let data17 = data.copyright;const _errs34 = errors;if(errors === _errs34){if(typeof data17 === "string"){if(!pattern8.test(data17)){validate130.errors = [{instancePath:instancePath+"/copyright",schemaPath:"#/properties/copyright/pattern",keyword:"pattern",params:{pattern: "^(.*)$"},message:"must match pattern \""+"^(.*)$"+"\""}];return false;}}else {validate130.errors = [{instancePath:instancePath+"/copyright",schemaPath:"#/properties/copyright/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs34 === errors;}else {var valid0 = true;}if(valid0){if(data.cpe !== undefined){let data18 = data.cpe;const _errs36 = errors;if(errors === _errs36){if(typeof data18 === "string"){if(!pattern8.test(data18)){validate130.errors = [{instancePath:instancePath+"/cpe",schemaPath:"#/properties/cpe/pattern",keyword:"pattern",params:{pattern: "^(.*)$"},message:"must match pattern \""+"^(.*)$"+"\""}];return false;}}else {validate130.errors = [{instancePath:instancePath+"/cpe",schemaPath:"#/properties/cpe/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs36 === errors;}else {var valid0 = true;}if(valid0){if(data.purl !== undefined){let data19 = data.purl;const _errs38 = errors;if(errors === _errs38){if(typeof data19 === "string"){if(!pattern8.test(data19)){validate130.errors = [{instancePath:instancePath+"/purl",schemaPath:"#/properties/purl/pattern",keyword:"pattern",params:{pattern: "^(.*)$"},message:"must match pattern \""+"^(.*)$"+"\""}];return false;}}else {validate130.errors = [{instancePath:instancePath+"/purl",schemaPath:"#/properties/purl/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs38 === errors;}else {var valid0 = true;}if(valid0){if(data.swid !== undefined){const _errs40 = errors;if(!(validate136(data.swid, {instancePath:instancePath+"/swid",parentData:data,parentDataProperty:"swid",rootData}))){vErrors = vErrors === null ? validate136.errors : vErrors.concat(validate136.errors);errors = vErrors.length;}var valid0 = _errs40 === errors;}else {var valid0 = true;}if(valid0){if(data.modified !== undefined){const _errs41 = errors;if(typeof data.modified !== "boolean"){validate130.errors = [{instancePath:instancePath+"/modified",schemaPath:"#/properties/modified/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs41 === errors;}else {var valid0 = true;}if(valid0){if(data.pedigree !== undefined){let data22 = data.pedigree;const _errs43 = errors;if(errors === _errs43){if(data22 && typeof data22 == "object" && !Array.isArray(data22)){if(data22.ancestors !== undefined){let data23 = data22.ancestors;const _errs45 = errors;if(errors === _errs45){if(Array.isArray(data23)){var valid6 = true;const len2 = data23.length;for(let i2=0; i2<len2; i2++){const _errs47 = errors;if(!(wrapper10.validate(data23[i2], {instancePath:instancePath+"/pedigree/ancestors/" + i2,parentData:data23,parentDataProperty:i2,rootData}))){vErrors = vErrors === null ? wrapper10.validate.errors : vErrors.concat(wrapper10.validate.errors);errors = vErrors.length;}var valid6 = _errs47 === errors;if(!valid6){break;}}}else {validate130.errors = [{instancePath:instancePath+"/pedigree/ancestors",schemaPath:"#/properties/pedigree/properties/ancestors/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid5 = _errs45 === errors;}else {var valid5 = true;}if(valid5){if(data22.descendants !== undefined){let data25 = data22.descendants;const _errs48 = errors;if(errors === _errs48){if(Array.isArray(data25)){var valid7 = true;const len3 = data25.length;for(let i3=0; i3<len3; i3++){const _errs50 = errors;if(!(wrapper10.validate(data25[i3], {instancePath:instancePath+"/pedigree/descendants/" + i3,parentData:data25,parentDataProperty:i3,rootData}))){vErrors = vErrors === null ? wrapper10.validate.errors : vErrors.concat(wrapper10.validate.errors);errors = vErrors.length;}var valid7 = _errs50 === errors;if(!valid7){break;}}}else {validate130.errors = [{instancePath:instancePath+"/pedigree/descendants",schemaPath:"#/properties/pedigree/properties/descendants/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid5 = _errs48 === errors;}else {var valid5 = true;}if(valid5){if(data22.variants !== undefined){let data27 = data22.variants;const _errs51 = errors;if(errors === _errs51){if(Array.isArray(data27)){var valid8 = true;const len4 = data27.length;for(let i4=0; i4<len4; i4++){const _errs53 = errors;if(!(wrapper10.validate(data27[i4], {instancePath:instancePath+"/pedigree/variants/" + i4,parentData:data27,parentDataProperty:i4,rootData}))){vErrors = vErrors === null ? wrapper10.validate.errors : vErrors.concat(wrapper10.validate.errors);errors = vErrors.length;}var valid8 = _errs53 === errors;if(!valid8){break;}}}else {validate130.errors = [{instancePath:instancePath+"/pedigree/variants",schemaPath:"#/properties/pedigree/properties/variants/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid5 = _errs51 === errors;}else {var valid5 = true;}if(valid5){if(data22.commits !== undefined){let data29 = data22.commits;const _errs54 = errors;if(errors === _errs54){if(Array.isArray(data29)){var valid9 = true;const len5 = data29.length;for(let i5=0; i5<len5; i5++){const _errs56 = errors;if(!(validate138(data29[i5], {instancePath:instancePath+"/pedigree/commits/" + i5,parentData:data29,parentDataProperty:i5,rootData}))){vErrors = vErrors === null ? validate138.errors : vErrors.concat(validate138.errors);errors = vErrors.length;}var valid9 = _errs56 === errors;if(!valid9){break;}}}else {validate130.errors = [{instancePath:instancePath+"/pedigree/commits",schemaPath:"#/properties/pedigree/properties/commits/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid5 = _errs54 === errors;}else {var valid5 = true;}if(valid5){if(data22.patches !== undefined){let data31 = data22.patches;const _errs57 = errors;if(errors === _errs57){if(Array.isArray(data31)){var valid10 = true;const len6 = data31.length;for(let i6=0; i6<len6; i6++){const _errs59 = errors;if(!(validate140(data31[i6], {instancePath:instancePath+"/pedigree/patches/" + i6,parentData:data31,parentDataProperty:i6,rootData}))){vErrors = vErrors === null ? validate140.errors : vErrors.concat(validate140.errors);errors = vErrors.length;}var valid10 = _errs59 === errors;if(!valid10){break;}}}else {validate130.errors = [{instancePath:instancePath+"/pedigree/patches",schemaPath:"#/properties/pedigree/properties/patches/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid5 = _errs57 === errors;}else {var valid5 = true;}if(valid5){if(data22.notes !== undefined){let data33 = data22.notes;const _errs60 = errors;if(errors === _errs60){if(typeof data33 === "string"){if(!pattern8.test(data33)){validate130.errors = [{instancePath:instancePath+"/pedigree/notes",schemaPath:"#/properties/pedigree/properties/notes/pattern",keyword:"pattern",params:{pattern: "^(.*)$"},message:"must match pattern \""+"^(.*)$"+"\""}];return false;}}else {validate130.errors = [{instancePath:instancePath+"/pedigree/notes",schemaPath:"#/properties/pedigree/properties/notes/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid5 = _errs60 === errors;}else {var valid5 = true;}}}}}}}else {validate130.errors = [{instancePath:instancePath+"/pedigree",schemaPath:"#/properties/pedigree/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs43 === errors;}else {var valid0 = true;}if(valid0){if(data.externalReferences !== undefined){let data34 = data.externalReferences;const _errs62 = errors;if(errors === _errs62){if(Array.isArray(data34)){var valid11 = true;const len7 = data34.length;for(let i7=0; i7<len7; i7++){let data35 = data34[i7];const _errs64 = errors;const _errs65 = errors;if(errors === _errs65){if(data35 && typeof data35 == "object" && !Array.isArray(data35)){let missing3;if(((data35.url === undefined) && (missing3 = "url")) || ((data35.type === undefined) && (missing3 = "type"))){validate130.errors = [{instancePath:instancePath+"/externalReferences/" + i7,schemaPath:"#/definitions/externalReference/required",keyword:"required",params:{missingProperty: missing3},message:"must have required property '"+missing3+"'"}];return false;}else {if(data35.url !== undefined){let data36 = data35.url;const _errs67 = errors;if(errors === _errs67){if(typeof data36 === "string"){if(!pattern8.test(data36)){validate130.errors = [{instancePath:instancePath+"/externalReferences/" + i7+"/url",schemaPath:"#/definitions/externalReference/properties/url/pattern",keyword:"pattern",params:{pattern: "^(.*)$"},message:"must match pattern \""+"^(.*)$"+"\""}];return false;}}else {validate130.errors = [{instancePath:instancePath+"/externalReferences/" + i7+"/url",schemaPath:"#/definitions/externalReference/properties/url/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid13 = _errs67 === errors;}else {var valid13 = true;}if(valid13){if(data35.comment !== undefined){let data37 = data35.comment;const _errs69 = errors;if(errors === _errs69){if(typeof data37 === "string"){if(!pattern8.test(data37)){validate130.errors = [{instancePath:instancePath+"/externalReferences/" + i7+"/comment",schemaPath:"#/definitions/externalReference/properties/comment/pattern",keyword:"pattern",params:{pattern: "^(.*)$"},message:"must match pattern \""+"^(.*)$"+"\""}];return false;}}else {validate130.errors = [{instancePath:instancePath+"/externalReferences/" + i7+"/comment",schemaPath:"#/definitions/externalReference/properties/comment/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid13 = _errs69 === errors;}else {var valid13 = true;}if(valid13){if(data35.type !== undefined){let data38 = data35.type;const _errs71 = errors;if(typeof data38 !== "string"){validate130.errors = [{instancePath:instancePath+"/externalReferences/" + i7+"/type",schemaPath:"#/definitions/externalReference/properties/type/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!(((((((((((((((data38 === "vcs") || (data38 === "issue-tracker")) || (data38 === "website")) || (data38 === "advisories")) || (data38 === "bom")) || (data38 === "mailing-list")) || (data38 === "social")) || (data38 === "chat")) || (data38 === "documentation")) || (data38 === "support")) || (data38 === "distribution")) || (data38 === "license")) || (data38 === "build-meta")) || (data38 === "build-system")) || (data38 === "other"))){validate130.errors = [{instancePath:instancePath+"/externalReferences/" + i7+"/type",schemaPath:"#/definitions/externalReference/properties/type/enum",keyword:"enum",params:{allowedValues: schema140.properties.type.enum},message:"must be equal to one of the allowed values"}];return false;}var valid13 = _errs71 === errors;}else {var valid13 = true;}}}}}else {validate130.errors = [{instancePath:instancePath+"/externalReferences/" + i7,schemaPath:"#/definitions/externalReference/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid11 = _errs64 === errors;if(!valid11){break;}}}else {validate130.errors = [{instancePath:instancePath+"/externalReferences",schemaPath:"#/properties/externalReferences/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs62 === errors;}else {var valid0 = true;}if(valid0){if(data.components !== undefined){let data39 = data.components;const _errs73 = errors;if(errors === _errs73){if(Array.isArray(data39)){var valid14 = true;const len8 = data39.length;for(let i8=0; i8<len8; i8++){const _errs75 = errors;if(!(wrapper10.validate(data39[i8], {instancePath:instancePath+"/components/" + i8,parentData:data39,parentDataProperty:i8,rootData}))){vErrors = vErrors === null ? wrapper10.validate.errors : vErrors.concat(wrapper10.validate.errors);errors = vErrors.length;}var valid14 = _errs75 === errors;if(!valid14){break;}}if(valid14){let i9 = data39.length;let j0;if(i9 > 1){outer0:for(;i9--;){for(j0 = i9; j0--;){if(func0(data39[i9], data39[j0])){validate130.errors = [{instancePath:instancePath+"/components",schemaPath:"#/properties/components/uniqueItems",keyword:"uniqueItems",params:{i: i9, j: j0},message:"must NOT have duplicate items (items ## "+j0+" and "+i9+" are identical)"}];return false;break outer0;}}}}}}else {validate130.errors = [{instancePath:instancePath+"/components",schemaPath:"#/properties/components/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs73 === errors;}else {var valid0 = true;}}}}}}}}}}}}}}}}}}}}}}}else {validate130.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate130.errors = vErrors;return errors === 0;}function validate125(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){if(data.timestamp !== undefined){let data0 = data.timestamp;const _errs1 = errors;if(errors === _errs1){if(errors === _errs1){if(typeof data0 === "string"){if(!(formats0.validate(data0))){validate125.errors = [{instancePath:instancePath+"/timestamp",schemaPath:"#/properties/timestamp/format",keyword:"format",params:{format: "date-time"},message:"must match format \""+"date-time"+"\""}];return false;}}else {validate125.errors = [{instancePath:instancePath+"/timestamp",schemaPath:"#/properties/timestamp/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.tools !== undefined){let data1 = data.tools;const _errs3 = errors;if(errors === _errs3){if(Array.isArray(data1)){var valid1 = true;const len0 = data1.length;for(let i0=0; i0<len0; i0++){const _errs5 = errors;if(!(validate126(data1[i0], {instancePath:instancePath+"/tools/" + i0,parentData:data1,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate126.errors : vErrors.concat(validate126.errors);errors = vErrors.length;}var valid1 = _errs5 === errors;if(!valid1){break;}}}else {validate125.errors = [{instancePath:instancePath+"/tools",schemaPath:"#/properties/tools/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs3 === errors;}else {var valid0 = true;}if(valid0){if(data.authors !== undefined){let data3 = data.authors;const _errs6 = errors;if(errors === _errs6){if(Array.isArray(data3)){var valid2 = true;const len1 = data3.length;for(let i1=0; i1<len1; i1++){let data4 = data3[i1];const _errs8 = errors;const _errs9 = errors;if(errors === _errs9){if(data4 && typeof data4 == "object" && !Array.isArray(data4)){if(data4.name !== undefined){let data5 = data4.name;const _errs11 = errors;if(errors === _errs11){if(typeof data5 === "string"){if(!pattern8.test(data5)){validate125.errors = [{instancePath:instancePath+"/authors/" + i1+"/name",schemaPath:"#/definitions/organizationalContact/properties/name/pattern",keyword:"pattern",params:{pattern: "^(.*)$"},message:"must match pattern \""+"^(.*)$"+"\""}];return false;}}else {validate125.errors = [{instancePath:instancePath+"/authors/" + i1+"/name",schemaPath:"#/definitions/organizationalContact/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid4 = _errs11 === errors;}else {var valid4 = true;}if(valid4){if(data4.email !== undefined){let data6 = data4.email;const _errs13 = errors;if(errors === _errs13){if(typeof data6 === "string"){if(!pattern8.test(data6)){validate125.errors = [{instancePath:instancePath+"/authors/" + i1+"/email",schemaPath:"#/definitions/organizationalContact/properties/email/pattern",keyword:"pattern",params:{pattern: "^(.*)$"},message:"must match pattern \""+"^(.*)$"+"\""}];return false;}}else {validate125.errors = [{instancePath:instancePath+"/authors/" + i1+"/email",schemaPath:"#/definitions/organizationalContact/properties/email/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid4 = _errs13 === errors;}else {var valid4 = true;}if(valid4){if(data4.phone !== undefined){let data7 = data4.phone;const _errs15 = errors;if(errors === _errs15){if(typeof data7 === "string"){if(!pattern8.test(data7)){validate125.errors = [{instancePath:instancePath+"/authors/" + i1+"/phone",schemaPath:"#/definitions/organizationalContact/properties/phone/pattern",keyword:"pattern",params:{pattern: "^(.*)$"},message:"must match pattern \""+"^(.*)$"+"\""}];return false;}}else {validate125.errors = [{instancePath:instancePath+"/authors/" + i1+"/phone",schemaPath:"#/definitions/organizationalContact/properties/phone/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid4 = _errs15 === errors;}else {var valid4 = true;}}}}else {validate125.errors = [{instancePath:instancePath+"/authors/" + i1,schemaPath:"#/definitions/organizationalContact/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid2 = _errs8 === errors;if(!valid2){break;}}}else {validate125.errors = [{instancePath:instancePath+"/authors",schemaPath:"#/properties/authors/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs6 === errors;}else {var valid0 = true;}if(valid0){if(data.component !== undefined){const _errs17 = errors;if(!(validate130(data.component, {instancePath:instancePath+"/component",parentData:data,parentDataProperty:"component",rootData}))){vErrors = vErrors === null ? validate130.errors : vErrors.concat(validate130.errors);errors = vErrors.length;}var valid0 = _errs17 === errors;}else {var valid0 = true;}if(valid0){if(data.manufacture !== undefined){const _errs18 = errors;if(!(validate131(data.manufacture, {instancePath:instancePath+"/manufacture",parentData:data,parentDataProperty:"manufacture",rootData}))){vErrors = vErrors === null ? validate131.errors : vErrors.concat(validate131.errors);errors = vErrors.length;}var valid0 = _errs18 === errors;}else {var valid0 = true;}if(valid0){if(data.supplier !== undefined){const _errs19 = errors;if(!(validate131(data.supplier, {instancePath:instancePath+"/supplier",parentData:data,parentDataProperty:"supplier",rootData}))){vErrors = vErrors === null ? validate131.errors : vErrors.concat(validate131.errors);errors = vErrors.length;}var valid0 = _errs19 === errors;}else {var valid0 = true;}}}}}}}else {validate125.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate125.errors = vErrors;return errors === 0;}const schema141 = {"type":"object","title":"Service Object","required":["name"],"properties":{"bom-ref":{"type":"string","title":"BOM Reference","description":"An optional identifier which can be used to reference the service elsewhere in the BOM. Every bom-ref should be unique.","default":"","pattern":"^(.*)$"},"provider":{"title":"Provider","description":"The organization that provides the service.","$ref":"#/definitions/organizationalEntity"},"group":{"type":"string","title":"Service Group","description":"The grouping name, namespace, or identifier. This will often be a shortened, single name of the company or project that produced the service or domain name. Whitespace and special characters should be avoided.","default":"","examples":["com.acme"],"pattern":"^(.*)$"},"name":{"type":"string","title":"Service Name","description":"The name of the service. This will often be a shortened, single name of the service.","default":"","examples":["ticker-service"],"pattern":"^(.*)$"},"version":{"type":"string","title":"Service Version","description":"The service version.","default":"","examples":["1.0.0"],"pattern":"^(.*)$"},"description":{"type":"string","title":"Service Description","description":"Specifies a description for the service","default":"","pattern":"^(.*)$"},"endpoints":{"type":"array","title":"Endpoints","description":"The endpoint URIs of the service. Multiple endpoints are allowed.","default":"","examples":["https://example.com/api/v1/ticker"],"pattern":"^(.*)$"},"authenticated":{"type":"boolean","title":"Authentication Required","description":"A boolean value indicating if the service requires authentication. A value of true indicates the service requires authentication prior to use. A value of false indicates the service does not require authentication."},"x-trust-boundary":{"type":"boolean","title":"Crosses Trust Boundary","description":"A boolean value indicating if use of the service crosses a trust zone or boundary. A value of true indicates that by using the service, a trust boundary is crossed. A value of false indicates that by using the service, a trust boundary is not crossed."},"data":{"type":"array","items":{"$ref":"#/definitions/dataClassification"},"title":"Data Classification","description":"Specifies the data classification."},"licenses":{"type":"array","title":"Component License(s)","items":{"properties":{"license":{"$ref":"#/definitions/license"},"expression":{"type":"string","title":"SPDX License Expression","examples":["Apache-2.0 AND (MIT OR GPL-2.0-only)","GPL-3.0-only WITH Classpath-exception-2.0"],"pattern":"^(.*)$"}},"oneOf":[{"required":["license"]},{"required":["expression"]}]}},"externalReferences":{"type":"array","items":{"$ref":"#/definitions/externalReference"},"title":"External References"},"services":{"$id":"#/definitions/service/properties/services","type":"array","items":{"$ref":"#/definitions/service"},"uniqueItems":true,"title":"Services"}}};const schema142 = {"type":"object","title":"Hash Objects","required":["flow","classification"],"properties":{"flow":{"$ref":"#/definitions/dataFlow"},"classification":{"type":"string"}}};const schema143 = {"type":"string","enum":["inbound","outbound","bi-directional","unknown"],"title":"Data flow direction","default":"","pattern":"^(.*)$"};function validate151(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if(((data.flow === undefined) && (missing0 = "flow")) || ((data.classification === undefined) && (missing0 = "classification"))){validate151.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.flow !== undefined){let data0 = data.flow;const _errs1 = errors;const _errs2 = errors;if(!((((data0 === "inbound") || (data0 === "outbound")) || (data0 === "bi-directional")) || (data0 === "unknown"))){validate151.errors = [{instancePath:instancePath+"/flow",schemaPath:"#/definitions/dataFlow/enum",keyword:"enum",params:{allowedValues: schema143.enum},message:"must be equal to one of the allowed values"}];return false;}if(errors === _errs2){if(typeof data0 === "string"){if(!pattern8.test(data0)){validate151.errors = [{instancePath:instancePath+"/flow",schemaPath:"#/definitions/dataFlow/pattern",keyword:"pattern",params:{pattern: "^(.*)$"},message:"must match pattern \""+"^(.*)$"+"\""}];return false;}}else {validate151.errors = [{instancePath:instancePath+"/flow",schemaPath:"#/definitions/dataFlow/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.classification !== undefined){const _errs4 = errors;if(typeof data.classification !== "string"){validate151.errors = [{instancePath:instancePath+"/classification",schemaPath:"#/properties/classification/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs4 === errors;}else {var valid0 = true;}}}}else {validate151.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate151.errors = vErrors;return errors === 0;}const wrapper14 = {validate: validate149};function validate149(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.name === undefined) && (missing0 = "name")){validate149.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data["bom-ref"] !== undefined){let data0 = data["bom-ref"];const _errs1 = errors;if(errors === _errs1){if(typeof data0 === "string"){if(!pattern8.test(data0)){validate149.errors = [{instancePath:instancePath+"/bom-ref",schemaPath:"#/properties/bom-ref/pattern",keyword:"pattern",params:{pattern: "^(.*)$"},message:"must match pattern \""+"^(.*)$"+"\""}];return false;}}else {validate149.errors = [{instancePath:instancePath+"/bom-ref",schemaPath:"#/properties/bom-ref/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.provider !== undefined){const _errs3 = errors;if(!(validate131(data.provider, {instancePath:instancePath+"/provider",parentData:data,parentDataProperty:"provider",rootData}))){vErrors = vErrors === null ? validate131.errors : vErrors.concat(validate131.errors);errors = vErrors.length;}var valid0 = _errs3 === errors;}else {var valid0 = true;}if(valid0){if(data.group !== undefined){let data2 = data.group;const _errs4 = errors;if(errors === _errs4){if(typeof data2 === "string"){if(!pattern8.test(data2)){validate149.errors = [{instancePath:instancePath+"/group",schemaPath:"#/properties/group/pattern",keyword:"pattern",params:{pattern: "^(.*)$"},message:"must match pattern \""+"^(.*)$"+"\""}];return false;}}else {validate149.errors = [{instancePath:instancePath+"/group",schemaPath:"#/properties/group/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data.name !== undefined){let data3 = data.name;const _errs6 = errors;if(errors === _errs6){if(typeof data3 === "string"){if(!pattern8.test(data3)){validate149.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/pattern",keyword:"pattern",params:{pattern: "^(.*)$"},message:"must match pattern \""+"^(.*)$"+"\""}];return false;}}else {validate149.errors = [{instancePath:instancePath+"/name",schemaPath:"#/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs6 === errors;}else {var valid0 = true;}if(valid0){if(data.version !== undefined){let data4 = data.version;const _errs8 = errors;if(errors === _errs8){if(typeof data4 === "string"){if(!pattern8.test(data4)){validate149.errors = [{instancePath:instancePath+"/version",schemaPath:"#/properties/version/pattern",keyword:"pattern",params:{pattern: "^(.*)$"},message:"must match pattern \""+"^(.*)$"+"\""}];return false;}}else {validate149.errors = [{instancePath:instancePath+"/version",schemaPath:"#/properties/version/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs8 === errors;}else {var valid0 = true;}if(valid0){if(data.description !== undefined){let data5 = data.description;const _errs10 = errors;if(errors === _errs10){if(typeof data5 === "string"){if(!pattern8.test(data5)){validate149.errors = [{instancePath:instancePath+"/description",schemaPath:"#/properties/description/pattern",keyword:"pattern",params:{pattern: "^(.*)$"},message:"must match pattern \""+"^(.*)$"+"\""}];return false;}}else {validate149.errors = [{instancePath:instancePath+"/description",schemaPath:"#/properties/description/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs10 === errors;}else {var valid0 = true;}if(valid0){if(data.endpoints !== undefined){let data6 = data.endpoints;const _errs12 = errors;if(!(Array.isArray(data6))){validate149.errors = [{instancePath:instancePath+"/endpoints",schemaPath:"#/properties/endpoints/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}if(errors === _errs12){if(typeof data6 === "string"){if(!pattern8.test(data6)){validate149.errors = [{instancePath:instancePath+"/endpoints",schemaPath:"#/properties/endpoints/pattern",keyword:"pattern",params:{pattern: "^(.*)$"},message:"must match pattern \""+"^(.*)$"+"\""}];return false;}}}var valid0 = _errs12 === errors;}else {var valid0 = true;}if(valid0){if(data.authenticated !== undefined){const _errs14 = errors;if(typeof data.authenticated !== "boolean"){validate149.errors = [{instancePath:instancePath+"/authenticated",schemaPath:"#/properties/authenticated/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs14 === errors;}else {var valid0 = true;}if(valid0){if(data["x-trust-boundary"] !== undefined){const _errs16 = errors;if(typeof data["x-trust-boundary"] !== "boolean"){validate149.errors = [{instancePath:instancePath+"/x-trust-boundary",schemaPath:"#/properties/x-trust-boundary/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}var valid0 = _errs16 === errors;}else {var valid0 = true;}if(valid0){if(data.data !== undefined){let data9 = data.data;const _errs18 = errors;if(errors === _errs18){if(Array.isArray(data9)){var valid1 = true;const len0 = data9.length;for(let i0=0; i0<len0; i0++){const _errs20 = errors;if(!(validate151(data9[i0], {instancePath:instancePath+"/data/" + i0,parentData:data9,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate151.errors : vErrors.concat(validate151.errors);errors = vErrors.length;}var valid1 = _errs20 === errors;if(!valid1){break;}}}else {validate149.errors = [{instancePath:instancePath+"/data",schemaPath:"#/properties/data/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs18 === errors;}else {var valid0 = true;}if(valid0){if(data.licenses !== undefined){let data11 = data.licenses;const _errs21 = errors;if(errors === _errs21){if(Array.isArray(data11)){var valid2 = true;const len1 = data11.length;for(let i1=0; i1<len1; i1++){let data12 = data11[i1];const _errs23 = errors;const _errs24 = errors;let valid3 = false;let passing0 = null;const _errs25 = errors;if(data12 && typeof data12 == "object" && !Array.isArray(data12)){let missing1;if((data12.license === undefined) && (missing1 = "license")){const err0 = {instancePath:instancePath+"/licenses/" + i1,schemaPath:"#/properties/licenses/items/oneOf/0/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"};if(vErrors === null){vErrors = [err0];}else {vErrors.push(err0);}errors++;}}var _valid0 = _errs25 === errors;if(_valid0){valid3 = true;passing0 = 0;}const _errs26 = errors;if(data12 && typeof data12 == "object" && !Array.isArray(data12)){let missing2;if((data12.expression === undefined) && (missing2 = "expression")){const err1 = {instancePath:instancePath+"/licenses/" + i1,schemaPath:"#/properties/licenses/items/oneOf/1/required",keyword:"required",params:{missingProperty: missing2},message:"must have required property '"+missing2+"'"};if(vErrors === null){vErrors = [err1];}else {vErrors.push(err1);}errors++;}}var _valid0 = _errs26 === errors;if(_valid0 && valid3){valid3 = false;passing0 = [passing0, 1];}else {if(_valid0){valid3 = true;passing0 = 1;}}if(!valid3){const err2 = {instancePath:instancePath+"/licenses/" + i1,schemaPath:"#/properties/licenses/items/oneOf",keyword:"oneOf",params:{passingSchemas: passing0},message:"must match exactly one schema in oneOf"};if(vErrors === null){vErrors = [err2];}else {vErrors.push(err2);}errors++;validate149.errors = vErrors;return false;}else {errors = _errs24;if(vErrors !== null){if(_errs24){vErrors.length = _errs24;}else {vErrors = null;}}}if(errors === _errs23){if(data12 && typeof data12 == "object" && !Array.isArray(data12)){if(data12.license !== undefined){const _errs27 = errors;if(!(validate134(data12.license, {instancePath:instancePath+"/licenses/" + i1+"/license",parentData:data12,parentDataProperty:"license",rootData}))){vErrors = vErrors === null ? validate134.errors : vErrors.concat(validate134.errors);errors = vErrors.length;}var valid4 = _errs27 === errors;}else {var valid4 = true;}if(valid4){if(data12.expression !== undefined){let data14 = data12.expression;const _errs28 = errors;if(errors === _errs28){if(typeof data14 === "string"){if(!pattern8.test(data14)){validate149.errors = [{instancePath:instancePath+"/licenses/" + i1+"/expression",schemaPath:"#/properties/licenses/items/properties/expression/pattern",keyword:"pattern",params:{pattern: "^(.*)$"},message:"must match pattern \""+"^(.*)$"+"\""}];return false;}}else {validate149.errors = [{instancePath:instancePath+"/licenses/" + i1+"/expression",schemaPath:"#/properties/licenses/items/properties/expression/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid4 = _errs28 === errors;}else {var valid4 = true;}}}}var valid2 = _errs23 === errors;if(!valid2){break;}}}else {validate149.errors = [{instancePath:instancePath+"/licenses",schemaPath:"#/properties/licenses/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs21 === errors;}else {var valid0 = true;}if(valid0){if(data.externalReferences !== undefined){let data15 = data.externalReferences;const _errs30 = errors;if(errors === _errs30){if(Array.isArray(data15)){var valid5 = true;const len2 = data15.length;for(let i2=0; i2<len2; i2++){let data16 = data15[i2];const _errs32 = errors;const _errs33 = errors;if(errors === _errs33){if(data16 && typeof data16 == "object" && !Array.isArray(data16)){let missing3;if(((data16.url === undefined) && (missing3 = "url")) || ((data16.type === undefined) && (missing3 = "type"))){validate149.errors = [{instancePath:instancePath+"/externalReferences/" + i2,schemaPath:"#/definitions/externalReference/required",keyword:"required",params:{missingProperty: missing3},message:"must have required property '"+missing3+"'"}];return false;}else {if(data16.url !== undefined){let data17 = data16.url;const _errs35 = errors;if(errors === _errs35){if(typeof data17 === "string"){if(!pattern8.test(data17)){validate149.errors = [{instancePath:instancePath+"/externalReferences/" + i2+"/url",schemaPath:"#/definitions/externalReference/properties/url/pattern",keyword:"pattern",params:{pattern: "^(.*)$"},message:"must match pattern \""+"^(.*)$"+"\""}];return false;}}else {validate149.errors = [{instancePath:instancePath+"/externalReferences/" + i2+"/url",schemaPath:"#/definitions/externalReference/properties/url/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid7 = _errs35 === errors;}else {var valid7 = true;}if(valid7){if(data16.comment !== undefined){let data18 = data16.comment;const _errs37 = errors;if(errors === _errs37){if(typeof data18 === "string"){if(!pattern8.test(data18)){validate149.errors = [{instancePath:instancePath+"/externalReferences/" + i2+"/comment",schemaPath:"#/definitions/externalReference/properties/comment/pattern",keyword:"pattern",params:{pattern: "^(.*)$"},message:"must match pattern \""+"^(.*)$"+"\""}];return false;}}else {validate149.errors = [{instancePath:instancePath+"/externalReferences/" + i2+"/comment",schemaPath:"#/definitions/externalReference/properties/comment/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid7 = _errs37 === errors;}else {var valid7 = true;}if(valid7){if(data16.type !== undefined){let data19 = data16.type;const _errs39 = errors;if(typeof data19 !== "string"){validate149.errors = [{instancePath:instancePath+"/externalReferences/" + i2+"/type",schemaPath:"#/definitions/externalReference/properties/type/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!(((((((((((((((data19 === "vcs") || (data19 === "issue-tracker")) || (data19 === "website")) || (data19 === "advisories")) || (data19 === "bom")) || (data19 === "mailing-list")) || (data19 === "social")) || (data19 === "chat")) || (data19 === "documentation")) || (data19 === "support")) || (data19 === "distribution")) || (data19 === "license")) || (data19 === "build-meta")) || (data19 === "build-system")) || (data19 === "other"))){validate149.errors = [{instancePath:instancePath+"/externalReferences/" + i2+"/type",schemaPath:"#/definitions/externalReference/properties/type/enum",keyword:"enum",params:{allowedValues: schema140.properties.type.enum},message:"must be equal to one of the allowed values"}];return false;}var valid7 = _errs39 === errors;}else {var valid7 = true;}}}}}else {validate149.errors = [{instancePath:instancePath+"/externalReferences/" + i2,schemaPath:"#/definitions/externalReference/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid5 = _errs32 === errors;if(!valid5){break;}}}else {validate149.errors = [{instancePath:instancePath+"/externalReferences",schemaPath:"#/properties/externalReferences/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs30 === errors;}else {var valid0 = true;}if(valid0){if(data.services !== undefined){let data20 = data.services;const _errs41 = errors;if(errors === _errs41){if(Array.isArray(data20)){var valid8 = true;const len3 = data20.length;for(let i3=0; i3<len3; i3++){const _errs43 = errors;if(!(wrapper14.validate(data20[i3], {instancePath:instancePath+"/services/" + i3,parentData:data20,parentDataProperty:i3,rootData}))){vErrors = vErrors === null ? wrapper14.validate.errors : vErrors.concat(wrapper14.validate.errors);errors = vErrors.length;}var valid8 = _errs43 === errors;if(!valid8){break;}}if(valid8){let i4 = data20.length;let j0;if(i4 > 1){outer0:for(;i4--;){for(j0 = i4; j0--;){if(func0(data20[i4], data20[j0])){validate149.errors = [{instancePath:instancePath+"/services",schemaPath:"#/properties/services/uniqueItems",keyword:"uniqueItems",params:{i: i4, j: j0},message:"must NOT have duplicate items (items ## "+j0+" and "+i4+" are identical)"}];return false;break outer0;}}}}}}else {validate149.errors = [{instancePath:instancePath+"/services",schemaPath:"#/properties/services/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs41 === errors;}else {var valid0 = true;}}}}}}}}}}}}}}}else {validate149.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate149.errors = vErrors;return errors === 0;}function validate124(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){/*# sourceURL="http://cyclonedx.org/schema/bom-1.2b.schema.json" */;let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((((data.bomFormat === undefined) && (missing0 = "bomFormat")) || ((data.specVersion === undefined) && (missing0 = "specVersion"))) || ((data.version === undefined) && (missing0 = "version"))){validate124.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.bomFormat !== undefined){let data0 = data.bomFormat;const _errs2 = errors;if(typeof data0 !== "string"){validate124.errors = [{instancePath:instancePath+"/bomFormat",schemaPath:"#/properties/bomFormat/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!(data0 === "CycloneDX")){validate124.errors = [{instancePath:instancePath+"/bomFormat",schemaPath:"#/properties/bomFormat/enum",keyword:"enum",params:{allowedValues: schema118.properties.bomFormat.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.specVersion !== undefined){const _errs4 = errors;if(typeof data.specVersion !== "string"){validate124.errors = [{instancePath:instancePath+"/specVersion",schemaPath:"#/properties/specVersion/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data.serialNumber !== undefined){let data2 = data.serialNumber;const _errs6 = errors;if(errors === _errs6){if(typeof data2 === "string"){if(!pattern0.test(data2)){validate124.errors = [{instancePath:instancePath+"/serialNumber",schemaPath:"#/properties/serialNumber/pattern",keyword:"pattern",params:{pattern: "^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"},message:"must match pattern \""+"^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$"+"\""}];return false;}}else {validate124.errors = [{instancePath:instancePath+"/serialNumber",schemaPath:"#/properties/serialNumber/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs6 === errors;}else {var valid0 = true;}if(valid0){if(data.version !== undefined){let data3 = data.version;const _errs8 = errors;if(!((typeof data3 == "number") && (!(data3 % 1) && !isNaN(data3)))){validate124.errors = [{instancePath:instancePath+"/version",schemaPath:"#/properties/version/type",keyword:"type",params:{type: "integer"},message:"must be integer"}];return false;}var valid0 = _errs8 === errors;}else {var valid0 = true;}if(valid0){if(data.metadata !== undefined){const _errs10 = errors;if(!(validate125(data.metadata, {instancePath:instancePath+"/metadata",parentData:data,parentDataProperty:"metadata",rootData}))){vErrors = vErrors === null ? validate125.errors : vErrors.concat(validate125.errors);errors = vErrors.length;}var valid0 = _errs10 === errors;}else {var valid0 = true;}if(valid0){if(data.components !== undefined){let data5 = data.components;const _errs11 = errors;if(errors === _errs11){if(Array.isArray(data5)){var valid1 = true;const len0 = data5.length;for(let i0=0; i0<len0; i0++){const _errs13 = errors;if(!(validate130(data5[i0], {instancePath:instancePath+"/components/" + i0,parentData:data5,parentDataProperty:i0,rootData}))){vErrors = vErrors === null ? validate130.errors : vErrors.concat(validate130.errors);errors = vErrors.length;}var valid1 = _errs13 === errors;if(!valid1){break;}}if(valid1){let i1 = data5.length;let j0;if(i1 > 1){outer0:for(;i1--;){for(j0 = i1; j0--;){if(func0(data5[i1], data5[j0])){validate124.errors = [{instancePath:instancePath+"/components",schemaPath:"#/properties/components/uniqueItems",keyword:"uniqueItems",params:{i: i1, j: j0},message:"must NOT have duplicate items (items ## "+j0+" and "+i1+" are identical)"}];return false;break outer0;}}}}}}else {validate124.errors = [{instancePath:instancePath+"/components",schemaPath:"#/properties/components/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs11 === errors;}else {var valid0 = true;}if(valid0){if(data.services !== undefined){let data7 = data.services;const _errs14 = errors;if(errors === _errs14){if(Array.isArray(data7)){var valid3 = true;const len1 = data7.length;for(let i2=0; i2<len1; i2++){const _errs16 = errors;if(!(validate149(data7[i2], {instancePath:instancePath+"/services/" + i2,parentData:data7,parentDataProperty:i2,rootData}))){vErrors = vErrors === null ? validate149.errors : vErrors.concat(validate149.errors);errors = vErrors.length;}var valid3 = _errs16 === errors;if(!valid3){break;}}if(valid3){let i3 = data7.length;let j1;if(i3 > 1){outer1:for(;i3--;){for(j1 = i3; j1--;){if(func0(data7[i3], data7[j1])){validate124.errors = [{instancePath:instancePath+"/services",schemaPath:"#/properties/services/uniqueItems",keyword:"uniqueItems",params:{i: i3, j: j1},message:"must NOT have duplicate items (items ## "+j1+" and "+i3+" are identical)"}];return false;break outer1;}}}}}}else {validate124.errors = [{instancePath:instancePath+"/services",schemaPath:"#/properties/services/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs14 === errors;}else {var valid0 = true;}if(valid0){if(data.externalReferences !== undefined){let data9 = data.externalReferences;const _errs17 = errors;if(errors === _errs17){if(Array.isArray(data9)){var valid5 = true;const len2 = data9.length;for(let i4=0; i4<len2; i4++){let data10 = data9[i4];const _errs19 = errors;const _errs20 = errors;if(errors === _errs20){if(data10 && typeof data10 == "object" && !Array.isArray(data10)){let missing1;if(((data10.url === undefined) && (missing1 = "url")) || ((data10.type === undefined) && (missing1 = "type"))){validate124.errors = [{instancePath:instancePath+"/externalReferences/" + i4,schemaPath:"#/definitions/externalReference/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {if(data10.url !== undefined){let data11 = data10.url;const _errs22 = errors;if(errors === _errs22){if(typeof data11 === "string"){if(!pattern8.test(data11)){validate124.errors = [{instancePath:instancePath+"/externalReferences/" + i4+"/url",schemaPath:"#/definitions/externalReference/properties/url/pattern",keyword:"pattern",params:{pattern: "^(.*)$"},message:"must match pattern \""+"^(.*)$"+"\""}];return false;}}else {validate124.errors = [{instancePath:instancePath+"/externalReferences/" + i4+"/url",schemaPath:"#/definitions/externalReference/properties/url/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid7 = _errs22 === errors;}else {var valid7 = true;}if(valid7){if(data10.comment !== undefined){let data12 = data10.comment;const _errs24 = errors;if(errors === _errs24){if(typeof data12 === "string"){if(!pattern8.test(data12)){validate124.errors = [{instancePath:instancePath+"/externalReferences/" + i4+"/comment",schemaPath:"#/definitions/externalReference/properties/comment/pattern",keyword:"pattern",params:{pattern: "^(.*)$"},message:"must match pattern \""+"^(.*)$"+"\""}];return false;}}else {validate124.errors = [{instancePath:instancePath+"/externalReferences/" + i4+"/comment",schemaPath:"#/definitions/externalReference/properties/comment/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid7 = _errs24 === errors;}else {var valid7 = true;}if(valid7){if(data10.type !== undefined){let data13 = data10.type;const _errs26 = errors;if(typeof data13 !== "string"){validate124.errors = [{instancePath:instancePath+"/externalReferences/" + i4+"/type",schemaPath:"#/definitions/externalReference/properties/type/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!(((((((((((((((data13 === "vcs") || (data13 === "issue-tracker")) || (data13 === "website")) || (data13 === "advisories")) || (data13 === "bom")) || (data13 === "mailing-list")) || (data13 === "social")) || (data13 === "chat")) || (data13 === "documentation")) || (data13 === "support")) || (data13 === "distribution")) || (data13 === "license")) || (data13 === "build-meta")) || (data13 === "build-system")) || (data13 === "other"))){validate124.errors = [{instancePath:instancePath+"/externalReferences/" + i4+"/type",schemaPath:"#/definitions/externalReference/properties/type/enum",keyword:"enum",params:{allowedValues: schema140.properties.type.enum},message:"must be equal to one of the allowed values"}];return false;}var valid7 = _errs26 === errors;}else {var valid7 = true;}}}}}else {validate124.errors = [{instancePath:instancePath+"/externalReferences/" + i4,schemaPath:"#/definitions/externalReference/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid5 = _errs19 === errors;if(!valid5){break;}}}else {validate124.errors = [{instancePath:instancePath+"/externalReferences",schemaPath:"#/properties/externalReferences/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs17 === errors;}else {var valid0 = true;}if(valid0){if(data.dependencies !== undefined){let data14 = data.dependencies;const _errs28 = errors;if(errors === _errs28){if(Array.isArray(data14)){var valid8 = true;const len3 = data14.length;for(let i5=0; i5<len3; i5++){let data15 = data14[i5];const _errs30 = errors;const _errs31 = errors;if(errors === _errs31){if(data15 && typeof data15 == "object" && !Array.isArray(data15)){let missing2;if((data15.ref === undefined) && (missing2 = "ref")){validate124.errors = [{instancePath:instancePath+"/dependencies/" + i5,schemaPath:"#/definitions/dependency/required",keyword:"required",params:{missingProperty: missing2},message:"must have required property '"+missing2+"'"}];return false;}else {if(data15.ref !== undefined){const _errs33 = errors;if(errors === _errs33){if(errors === _errs33){if(!(typeof data15.ref === "string")){validate124.errors = [{instancePath:instancePath+"/dependencies/" + i5+"/ref",schemaPath:"#/definitions/dependency/properties/ref/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid10 = _errs33 === errors;}else {var valid10 = true;}if(valid10){if(data15.dependsOn !== undefined){let data17 = data15.dependsOn;const _errs35 = errors;if(errors === _errs35){if(Array.isArray(data17)){var valid11 = true;const len4 = data17.length;for(let i6=0; i6<len4; i6++){const _errs37 = errors;if(typeof data17[i6] !== "string"){validate124.errors = [{instancePath:instancePath+"/dependencies/" + i5+"/dependsOn/" + i6,schemaPath:"#/definitions/dependency/properties/dependsOn/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid11 = _errs37 === errors;if(!valid11){break;}}if(valid11){let i7 = data17.length;let j2;if(i7 > 1){const indices0 = {};for(;i7--;){let item0 = data17[i7];if(typeof item0 !== "string"){continue;}if(typeof indices0[item0] == "number"){j2 = indices0[item0];validate124.errors = [{instancePath:instancePath+"/dependencies/" + i5+"/dependsOn",schemaPath:"#/definitions/dependency/properties/dependsOn/uniqueItems",keyword:"uniqueItems",params:{i: i7, j: j2},message:"must NOT have duplicate items (items ## "+j2+" and "+i7+" are identical)"}];return false;break;}indices0[item0] = i7;}}}}else {validate124.errors = [{instancePath:instancePath+"/dependencies/" + i5+"/dependsOn",schemaPath:"#/definitions/dependency/properties/dependsOn/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid10 = _errs35 === errors;}else {var valid10 = true;}}}}else {validate124.errors = [{instancePath:instancePath+"/dependencies/" + i5,schemaPath:"#/definitions/dependency/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid8 = _errs30 === errors;if(!valid8){break;}}if(valid8){let i8 = data14.length;let j3;if(i8 > 1){outer2:for(;i8--;){for(j3 = i8; j3--;){if(func0(data14[i8], data14[j3])){validate124.errors = [{instancePath:instancePath+"/dependencies",schemaPath:"#/properties/dependencies/uniqueItems",keyword:"uniqueItems",params:{i: i8, j: j3},message:"must NOT have duplicate items (items ## "+j3+" and "+i8+" are identical)"}];return false;break outer2;}}}}}}else {validate124.errors = [{instancePath:instancePath+"/dependencies",schemaPath:"#/properties/dependencies/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs28 === errors;}else {var valid0 = true;}}}}}}}}}}}else {validate124.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate124.errors = vErrors;return errors === 0;}